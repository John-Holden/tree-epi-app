{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar Dependency = require(\"../Dependency\");\n\nvar makeSerializable = require(\"../util/makeSerializable\");\n\nvar ModuleDependency = require(\"./ModuleDependency\");\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nvar ContextElementDependency = /*#__PURE__*/function (_ModuleDependency) {\n  _inherits(ContextElementDependency, _ModuleDependency);\n\n  var _super = _createSuper(ContextElementDependency);\n\n  function ContextElementDependency(request, userRequest, typePrefix, category, referencedExports) {\n    var _this;\n\n    _classCallCheck(this, ContextElementDependency);\n\n    _this = _super.call(this, request);\n    _this.referencedExports = referencedExports;\n    _this._typePrefix = typePrefix;\n    _this._category = category;\n\n    if (userRequest) {\n      _this.userRequest = userRequest;\n    }\n\n    return _this;\n  }\n\n  _createClass(ContextElementDependency, [{\n    key: \"type\",\n    get: function get() {\n      if (this._typePrefix) {\n        return \"\".concat(this._typePrefix, \" context element\");\n      }\n\n      return \"context element\";\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return this._category;\n    }\n    /**\n     * Returns list of exports referenced by this dependency\n     * @param {ModuleGraph} moduleGraph module graph\n     * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n     * @returns {(string[] | ReferencedExport)[]} referenced exports\n     */\n\n  }, {\n    key: \"getReferencedExports\",\n    value: function getReferencedExports(moduleGraph, runtime) {\n      return this.referencedExports ? this.referencedExports.map(function (e) {\n        return {\n          name: e,\n          canMangle: false\n        };\n      }) : Dependency.EXPORTS_OBJECT_REFERENCED;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this._typePrefix);\n      write(this._category);\n      write(this.referencedExports);\n\n      _get(_getPrototypeOf(ContextElementDependency.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this._typePrefix = read();\n      this._category = read();\n      this.referencedExports = read();\n\n      _get(_getPrototypeOf(ContextElementDependency.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n\n  return ContextElementDependency;\n}(ModuleDependency);\n\nmakeSerializable(ContextElementDependency, \"webpack/lib/dependencies/ContextElementDependency\");\nmodule.exports = ContextElementDependency;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/dependencies/ContextElementDependency.js"],"names":["Dependency","require","makeSerializable","ModuleDependency","ContextElementDependency","request","userRequest","typePrefix","category","referencedExports","_typePrefix","_category","moduleGraph","runtime","map","e","name","canMangle","EXPORTS_OBJECT_REFERENCED","context","write","read","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AACA,IAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAAhC;AAEA;;AACA;;AACA;;;IAEMG,wB;;;;;AACL,oCAAYC,OAAZ,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwDC,iBAAxD,EAA2E;AAAA;;AAAA;;AAC1E,8BAAMJ,OAAN;AACA,UAAKI,iBAAL,GAAyBA,iBAAzB;AACA,UAAKC,WAAL,GAAmBH,UAAnB;AACA,UAAKI,SAAL,GAAiBH,QAAjB;;AAEA,QAAIF,WAAJ,EAAiB;AAChB,YAAKA,WAAL,GAAmBA,WAAnB;AACA;;AARyE;AAS1E;;;;SAED,eAAW;AACV,UAAI,KAAKI,WAAT,EAAsB;AACrB,yBAAU,KAAKA,WAAf;AACA;;AAED,aAAO,iBAAP;AACA;;;SAED,eAAe;AACd,aAAO,KAAKC,SAAZ;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;;WACC,8BAAqBC,WAArB,EAAkCC,OAAlC,EAA2C;AAC1C,aAAO,KAAKJ,iBAAL,GACJ,KAAKA,iBAAL,CAAuBK,GAAvB,CAA2B,UAAAC,CAAC;AAAA,eAAK;AACjCC,UAAAA,IAAI,EAAED,CAD2B;AAEjCE,UAAAA,SAAS,EAAE;AAFsB,SAAL;AAAA,OAA5B,CADI,GAKJjB,UAAU,CAACkB,yBALd;AAMA;;;WAED,mBAAUC,OAAV,EAAmB;AAClB,UAAQC,KAAR,GAAkBD,OAAlB,CAAQC,KAAR;AACAA,MAAAA,KAAK,CAAC,KAAKV,WAAN,CAAL;AACAU,MAAAA,KAAK,CAAC,KAAKT,SAAN,CAAL;AACAS,MAAAA,KAAK,CAAC,KAAKX,iBAAN,CAAL;;AACA,8FAAgBU,OAAhB;AACA;;;WAED,qBAAYA,OAAZ,EAAqB;AACpB,UAAQE,IAAR,GAAiBF,OAAjB,CAAQE,IAAR;AACA,WAAKX,WAAL,GAAmBW,IAAI,EAAvB;AACA,WAAKV,SAAL,GAAiBU,IAAI,EAArB;AACA,WAAKZ,iBAAL,GAAyBY,IAAI,EAA7B;;AACA,gGAAkBF,OAAlB;AACA;;;;EArDqChB,gB;;AAwDvCD,gBAAgB,CACfE,wBADe,EAEf,mDAFe,CAAhB;AAKAkB,MAAM,CAACC,OAAP,GAAiBnB,wBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass ContextElementDependency extends ModuleDependency {\n\tconstructor(request, userRequest, typePrefix, category, referencedExports) {\n\t\tsuper(request);\n\t\tthis.referencedExports = referencedExports;\n\t\tthis._typePrefix = typePrefix;\n\t\tthis._category = category;\n\n\t\tif (userRequest) {\n\t\t\tthis.userRequest = userRequest;\n\t\t}\n\t}\n\n\tget type() {\n\t\tif (this._typePrefix) {\n\t\t\treturn `${this._typePrefix} context element`;\n\t\t}\n\n\t\treturn \"context element\";\n\t}\n\n\tget category() {\n\t\treturn this._category;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\treturn this.referencedExports\n\t\t\t? this.referencedExports.map(e => ({\n\t\t\t\t\tname: e,\n\t\t\t\t\tcanMangle: false\n\t\t\t  }))\n\t\t\t: Dependency.EXPORTS_OBJECT_REFERENCED;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this._typePrefix);\n\t\twrite(this._category);\n\t\twrite(this.referencedExports);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis._typePrefix = read();\n\t\tthis._category = read();\n\t\tthis.referencedExports = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tContextElementDependency,\n\t\"webpack/lib/dependencies/ContextElementDependency\"\n);\n\nmodule.exports = ContextElementDependency;\n"]},"metadata":{},"sourceType":"script"}