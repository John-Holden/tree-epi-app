{"ast":null,"code":"import _slicedToArray from\"/home/john/code/tree-epi-app/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'../styles/app.css';import React,{useState,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SimulationPanel(){var simulationPath='./media/sim.mp4';var catImagePath='https://tree-epi-site-bucket.s3.etu-west-2.amazonaws.com/Thinking-of-getting-a-cat.png';var vidRef=useRef(null);var buttonRef=useRef(null);var _useState=useState('>'),_useState2=_slicedToArray(_useState,2),buttonText=_useState2[0],setButtonText=_useState2[1];var onButtonClick=function onButtonClick(){if(vidRef.current.paused){vidRef.current.play();setButtonText('||');}else{vidRef.current.pause();setButtonText('>');}};var isSimGenerated=function isSimGenerated(){try{var simulation=require(\"\".concat(simulationPath));console.log('succces',simulation);return true;}catch(err){console.log('fail');return false;}};var mySim=isSimGenerated();if(mySim==false){console.log('Sim not generate, rendering cat');return/*#__PURE__*/_jsxs(\"div\",{className:\"simulationPanel\",children:[/*#__PURE__*/_jsx(\"p\",{children:\" Image not here\"}),/*#__PURE__*/_jsx(\"img\",{src:catImagePath})]});}else{console.log('rendering vid');var _mySim=require(\"\".concat(simulationPath));return/*#__PURE__*/_jsxs(\"div\",{className:\"simulationPanel\",children:[/*#__PURE__*/_jsx(\"video\",{ref:vidRef,src:_mySim,type:\"video/mp4\",children:\" \"}),/*#__PURE__*/_jsxs(\"button\",{ref:buttonRef,onClick:function onClick(){return onButtonClick();},children:[\" \",buttonText,\" \"]})]});}}export default SimulationPanel;","map":{"version":3,"sources":["/home/john/code/tree-epi-app/front/src/components/SimPanel.js"],"names":["React","useState","useRef","SimulationPanel","simulationPath","catImagePath","vidRef","buttonRef","buttonText","setButtonText","onButtonClick","current","paused","play","pause","isSimGenerated","simulation","require","console","log","err","mySim"],"mappings":"wHAAA,MAAO,mBAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAuC,OAAvC,C,wFAGA,QAASC,CAAAA,eAAT,EAA2B,CACzB,GAAMC,CAAAA,cAAc,CAAG,iBAAvB,CACA,GAAMC,CAAAA,YAAY,CAAG,wFAArB,CAEA,GAAMC,CAAAA,MAAM,CAAGJ,MAAM,CAAC,IAAD,CAArB,CACA,GAAMK,CAAAA,SAAS,CAAGL,MAAM,CAAC,IAAD,CAAxB,CACA,cAAoCD,QAAQ,CAAC,GAAD,CAA5C,wCAAOO,UAAP,eAAmBC,aAAnB,eAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIJ,MAAM,CAACK,OAAP,CAAeC,MAAnB,CAA2B,CACzBN,MAAM,CAACK,OAAP,CAAeE,IAAf,GACAJ,aAAa,CAAC,IAAD,CAAb,CACD,CAHD,IAIK,CACHH,MAAM,CAACK,OAAP,CAAeG,KAAf,GACAL,aAAa,CAAC,GAAD,CAAb,CACD,CACF,CATD,CAWA,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAI,CACF,GAAMC,CAAAA,UAAU,CAAGC,OAAO,WAAIb,cAAJ,EAA1B,CACAc,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBH,UAAvB,EACD,MAAO,KAAP,CACA,CAAC,MAAOI,GAAP,CAAY,CACZF,OAAO,CAACC,GAAR,CAAY,MAAZ,EACD,MAAO,MAAP,CACA,CACF,CATD,CAWA,GAAME,CAAAA,KAAK,CAAGN,cAAc,EAA5B,CAEA,GAAMM,KAAK,EAAI,KAAf,CAAsB,CACpBH,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACA,mBACI,aAAK,SAAS,CAAC,iBAAf,wBACI,sCADJ,cAEI,YAAK,GAAG,CAAEd,YAAV,EAFJ,GADJ,CAMD,CARD,IAUK,CACHa,OAAO,CAACC,GAAR,CAAY,eAAZ,EACA,GAAME,CAAAA,MAAK,CAAGJ,OAAO,WAAIb,cAAJ,EAArB,CACA,mBACI,aAAK,SAAS,CAAC,iBAAf,wBACI,cAAO,GAAG,CAAEE,MAAZ,CAAoB,GAAG,CAAEe,MAAzB,CAAgC,IAAI,CAAC,WAArC,eADJ,cAEA,gBAAQ,GAAG,CAAEd,SAAb,CAAwB,OAAO,CAAE,yBAAMG,CAAAA,aAAa,EAAnB,EAAjC,eAA0DF,UAA1D,OAFA,GADJ,CAMH,CAAC,CAEF,cAAeL,CAAAA,eAAf","sourcesContent":["import '../styles/app.css'\nimport React, { useState, useRef} from 'react';\n\n\nfunction SimulationPanel() {\n  const simulationPath = './media/sim.mp4'\n  const catImagePath = 'https://tree-epi-site-bucket.s3.etu-west-2.amazonaws.com/Thinking-of-getting-a-cat.png'\n\n  const vidRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [buttonText, setButtonText] = useState('>');\n  \n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n      vidRef.current.play()\n      setButtonText('||')\n    }\n    else {\n      vidRef.current.pause()\n      setButtonText('>')\n    }\n  }\n\n  const isSimGenerated = () => {\n    try {\n      const simulation = require(`${simulationPath}`)\n      console.log('succces', simulation)\n     return true;\n    } catch (err) {\n      console.log('fail')\n     return false;\n    }\n  };\n\n  const mySim = isSimGenerated()\n  \n  if  ( mySim == false) {\n    console.log('Sim not generate, rendering cat')\n    return (\n        <div className='simulationPanel'> \n            <p> Image not here</p> \n            <img src={catImagePath} />\n          </div>\n    );\n  }\n  \n  else {\n    console.log('rendering vid')\n    const mySim = require(`${simulationPath}`) \n    return (\n        <div className='simulationPanel'> \n            <video ref={vidRef} src={mySim} type=\"video/mp4\"> </video> \n        <button ref={buttonRef} onClick={() => onButtonClick()}> {buttonText} </button>\n        </div>\n    );\n}}\n\nexport default SimulationPanel;\n"]},"metadata":{},"sourceType":"module"}