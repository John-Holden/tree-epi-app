{"ast":null,"code":"var _jsxFileName = \"/home/john/react-stuff/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef } from 'react';\nimport myVideo from './media/file_example_MP4_480_1_5MG.mp4';\nimport { getAllByPlaceholderText } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nconst path = './file.txt';\n\ntry {\n  if (fs.existsSync(path)) {//file exists\n  }\n} catch (err) {\n  console.error(err);\n}\n\nfunction App() {\n  _s();\n\n  console.log(path);\n  const vidRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [buttonText, setButtonText] = useState('>');\n\n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n      vidRef.current.play();\n      setButtonText('||');\n    } else {\n      vidRef.current.pause();\n      setButtonText('>');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cube\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: vidRef,\n            src: myVideo,\n            type: \"video/mp4\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: buttonRef,\n        onClick: () => onButtonClick(),\n        children: [\" \", buttonText, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mdz/ab2YfasBvOPePg2EgSIEMno=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/john/react-stuff/src/App.js"],"names":["React","useState","useRef","myVideo","getAllByPlaceholderText","fs","require","path","existsSync","err","console","error","App","log","vidRef","buttonRef","buttonText","setButtonText","onButtonClick","current","paused","play","pause"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,SAASC,uBAAT,QAAwC,wBAAxC;;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMC,IAAI,GAAG,YAAb;;AAEA,IAAI;AACF,MAAIF,EAAE,CAACG,UAAH,CAAcD,IAAd,CAAJ,EAAyB,CACvB;AACD;AACF,CAJD,CAIE,OAAME,GAAN,EAAW;AACXC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;;AAGD,SAASG,GAAT,GAAe;AAAA;;AACbF,EAAAA,OAAO,CAACG,GAAR,CAAYN,IAAZ;AAEA,QAAMO,MAAM,GAAGZ,MAAM,CAAC,IAAD,CAArB;AACA,QAAMa,SAAS,GAAGb,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,GAAD,CAA5C;;AAEA,QAAMiB,aAAa,GAAG,MAAM;AAC1B,QAAIJ,MAAM,CAACK,OAAP,CAAeC,MAAnB,EAA2B;AACxBN,MAAAA,MAAM,CAACK,OAAP,CAAeE,IAAf;AACAJ,MAAAA,aAAa,CAAC,IAAD,CAAb;AACF,KAHD,MAIK;AACHH,MAAAA,MAAM,CAACK,OAAP,CAAeG,KAAf;AACAL,MAAAA,aAAa,CAAC,GAAD,CAAb;AACD;AACF,GATD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE;AAAO,YAAA,GAAG,EAAEH,MAAZ;AAAoB,YAAA,GAAG,EAAEX,OAAzB;AAAkC,YAAA,IAAI,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAQ,QAAA,GAAG,EAAEY,SAAb;AAAwB,QAAA,OAAO,EAAE,MAAMG,aAAa,EAApD;AAAA,wBAA0DF,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjCQJ,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useRef} from 'react';\nimport myVideo from './media/file_example_MP4_480_1_5MG.mp4';\nimport { getAllByPlaceholderText } from '@testing-library/react';\nconst fs = require('fs')\n\nconst path = './file.txt'\n\ntry {\n  if (fs.existsSync(path)) {\n    //file exists\n  }\n} catch(err) {\n  console.error(err)\n}\n\n\nfunction App() {\n  console.log(path)\n\n  const vidRef = useRef(null);\n  const buttonRef = useRef(null)\n\n  const [buttonText, setButtonText] = useState('>')\n  \n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n       vidRef.current.play()\n       setButtonText('||')\n    }\n    else {\n      vidRef.current.pause()\n      setButtonText('>')\n    }\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div className='container'> \n        <div className='cube'> \n          <video ref={vidRef} src={myVideo} type=\"video/mp4\"> </video> \n        </div>\n      </div>\n\n      <button ref={buttonRef} onClick={() => onButtonClick()}> {buttonText} </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}