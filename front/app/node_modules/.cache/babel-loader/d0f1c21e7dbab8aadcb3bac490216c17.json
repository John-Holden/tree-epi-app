{"ast":null,"code":"var _jsxFileName = \"/home/john/react-stuff/src/components/InputParams.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/app.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst divTableCell = {\n  display: 'table-cell'\n};\nconst labelSize = {\n  fontSize: 15\n};\nconst domainInputform = {\n  fontSize: 12,\n  padding: 1,\n  width: 30\n};\n\nfunction InputParameters() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [dispersaType, setDispersal] = useState('gaussian');\n  const [hostNumber, setHostNumber] = useState(0);\n\n  let handleSubmitResp = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"http://localhost:5000\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"dispersal type\": dispersaType\n        })\n      });\n      console.log(res);\n\n      if (res.status === 200) {\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\"); // todo address CORs issue on api gateway...\n      }\n    } catch (err) {\n      console.log(err);\n      alert(`${message}, dispersal type is ${dispersaType}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitResp,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: \" Dispersal type \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dispersaType,\n        onChange: e => setDispersal(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"gaussian\",\n          children: \"Gaussian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"exponential\",\n          children: \"Exponential\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"inverse_power_Law\",\n          children: \"Inverse power law\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: \" Domain size \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divTableCell,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: domainInputform\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 42\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divTableCell,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: domainInputform\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 42\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: [\" Host number: \", hostNumber, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1000\",\n        value: hostNumber,\n        onChange: e => setHostNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Simulate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: [\" Infectivity rate: \", hostNumber, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"20\",\n        value: hostNumber,\n        onChange: e => setHostNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Simulate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(InputParameters, \"LfeWFt2Jnl1AJIifh6TP3sohcGM=\");\n\n_c = InputParameters;\nexport default InputParameters;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputParameters\");","map":{"version":3,"sources":["/home/john/react-stuff/src/components/InputParams.js"],"names":["React","useState","divTableCell","display","labelSize","fontSize","domainInputform","padding","width","InputParameters","message","setMessage","dispersaType","setDispersal","hostNumber","setHostNumber","handleSubmitResp","e","preventDefault","res","fetch","method","body","JSON","stringify","console","log","status","err","alert","target","value"],"mappings":"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","sourcesContent":["import '../styles/app.css';\nimport React, { useState } from 'react';\n\nconst divTableCell = {\n  display: 'table-cell',\n};\n\nconst labelSize = {\n  fontSize: 15,\n}\nconst domainInputform = {\n  fontSize: 12, \n  padding: 1, \n  width: 30 }\n\nfunction InputParameters() {\n\n  const [message, setMessage] = useState(\"\");\n  const [dispersaType, setDispersal] = useState('gaussian');\n  const [hostNumber, setHostNumber] = useState(0);\n\n  let handleSubmitResp = async (e) => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost:5000\", \n      { \n        method: \"POST\",\n        body: JSON.stringify({\"dispersal type\": dispersaType}),\n      });\n      console.log(res)\n      if (res.status === 200) {\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n        // todo address CORs issue on api gateway...\n      }\n    } catch (err) {\n      console.log(err);\n      alert(`${message}, dispersal type is ${dispersaType}`)\n    }\n  };\n\n  return (\n      <div>\n        <form onSubmit={handleSubmitResp}>\n          <label style={labelSize} > Dispersal type </label> \n          <select value={dispersaType} onChange={e => setDispersal(e.target.value)}> \n            <option value=\"gaussian\">Gaussian</option>  \n            <option value=\"exponential\">Exponential</option>\n            <option value=\"inverse_power_Law\">Inverse power law</option>\n          </select>\n            <label style={labelSize}> Domain size </label>\n              <div style={divTableCell}> <input type=\"text\" style={domainInputform} /> </div>\n              <div style={divTableCell}> <input type=\"text\" style={domainInputform} /> </div> \n            <label style={labelSize}> Host number: {hostNumber} </label>\n            <input type=\"range\" min=\"0\" max=\"1000\" value={hostNumber}  onChange={e => setHostNumber(e.target.value)}/>   \n          <input type=\"submit\" value=\"Simulate\" />\n          <label style={labelSize}> Infectivity rate: {hostNumber} </label>\n            <input type=\"range\" min=\"0\" max=\"20\" value={hostNumber}  onChange={e => setHostNumber(e.target.value)}/>   \n          <input type=\"submit\" value=\"Simulate\" />\n        </form>\n      </div>\n  );\n}\n\nexport default InputParameters;\n"]},"metadata":{},"sourceType":"module"}