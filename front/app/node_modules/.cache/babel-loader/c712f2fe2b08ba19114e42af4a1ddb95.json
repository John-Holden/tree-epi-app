{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @type {WeakMap<Compiler, Set<LibraryType>>} */\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar enabledTypes = new WeakMap();\n\nvar getEnabledTypes = function getEnabledTypes(compiler) {\n  var set = enabledTypes.get(compiler);\n\n  if (set === undefined) {\n    set = new Set();\n    enabledTypes.set(compiler, set);\n  }\n\n  return set;\n};\n\nvar EnableLibraryPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {LibraryType} type library type that should be available\n   */\n  function EnableLibraryPlugin(type) {\n    _classCallCheck(this, EnableLibraryPlugin);\n\n    this.type = type;\n  }\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @param {LibraryType} type type of library\n   * @returns {void}\n   */\n\n\n  _createClass(EnableLibraryPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      var type = this.type; // Only enable once\n\n      var enabled = getEnabledTypes(compiler);\n      if (enabled.has(type)) return;\n      enabled.add(type);\n\n      if (typeof type === \"string\") {\n        var enableExportProperty = function enableExportProperty() {\n          var ExportPropertyTemplatePlugin = require(\"./ExportPropertyLibraryPlugin\");\n\n          new ExportPropertyTemplatePlugin({\n            type: type,\n            nsObjectUsed: type !== \"module\"\n          }).apply(compiler);\n        };\n\n        switch (type) {\n          case \"var\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\n              new AssignLibraryPlugin({\n                type: type,\n                prefix: [],\n                declare: \"var\",\n                unnamed: \"error\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"assign-properties\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin({\n                type: type,\n                prefix: [],\n                declare: false,\n                unnamed: \"error\",\n                named: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"assign\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin2 = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin2({\n                type: type,\n                prefix: [],\n                declare: false,\n                unnamed: \"error\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"this\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin3 = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin3({\n                type: type,\n                prefix: [\"this\"],\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"window\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin4 = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin4({\n                type: type,\n                prefix: [\"window\"],\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"self\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin5 = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin5({\n                type: type,\n                prefix: [\"self\"],\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"global\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin6 = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin6({\n                type: type,\n                prefix: \"global\",\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"commonjs\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin7 = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin7({\n                type: type,\n                prefix: [\"exports\"],\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"commonjs-static\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin8 = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin8({\n                type: type,\n                prefix: [\"exports\"],\n                declare: false,\n                unnamed: \"static\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"commonjs2\":\n          case \"commonjs-module\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin9 = require(\"./AssignLibraryPlugin\");\n\n              new _AssignLibraryPlugin9({\n                type: type,\n                prefix: [\"module\", \"exports\"],\n                declare: false,\n                unnamed: \"assign\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"amd\":\n          case \"amd-require\":\n            {\n              enableExportProperty();\n\n              var AmdLibraryPlugin = require(\"./AmdLibraryPlugin\");\n\n              new AmdLibraryPlugin({\n                type: type,\n                requireAsWrapper: type === \"amd-require\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"umd\":\n          case \"umd2\":\n            {\n              enableExportProperty();\n\n              var UmdLibraryPlugin = require(\"./UmdLibraryPlugin\");\n\n              new UmdLibraryPlugin({\n                type: type,\n                optionalAmdExternalAsGlobal: type === \"umd2\"\n              }).apply(compiler);\n              break;\n            }\n\n          case \"system\":\n            {\n              enableExportProperty();\n\n              var SystemLibraryPlugin = require(\"./SystemLibraryPlugin\");\n\n              new SystemLibraryPlugin({\n                type: type\n              }).apply(compiler);\n              break;\n            }\n\n          case \"jsonp\":\n            {\n              enableExportProperty();\n\n              var JsonpLibraryPlugin = require(\"./JsonpLibraryPlugin\");\n\n              new JsonpLibraryPlugin({\n                type: type\n              }).apply(compiler);\n              break;\n            }\n\n          case \"module\":\n            {\n              enableExportProperty();\n\n              var ModuleLibraryPlugin = require(\"./ModuleLibraryPlugin\");\n\n              new ModuleLibraryPlugin({\n                type: type\n              }).apply(compiler);\n              break;\n            }\n\n          default:\n            throw new Error(\"Unsupported library type \".concat(type, \".\\nPlugins which provide custom library types must call EnableLibraryPlugin.setEnabled(compiler, type) to disable this error.\"));\n        }\n      } else {// TODO support plugin instances here\n        // apply them to the compiler\n      }\n    }\n  }], [{\n    key: \"setEnabled\",\n    value: function setEnabled(compiler, type) {\n      getEnabledTypes(compiler).add(type);\n    }\n    /**\n     * @param {Compiler} compiler the compiler instance\n     * @param {LibraryType} type type of library\n     * @returns {void}\n     */\n\n  }, {\n    key: \"checkEnabled\",\n    value: function checkEnabled(compiler, type) {\n      if (!getEnabledTypes(compiler).has(type)) {\n        throw new Error(\"Library type \\\"\".concat(type, \"\\\" is not enabled. \") + \"EnableLibraryPlugin need to be used to enable this type of library. \" + 'This usually happens through the \"output.enabledLibraryTypes\" option. ' + 'If you are using a function as entry which sets \"library\", you need to add all potential library types to \"output.enabledLibraryTypes\". ' + \"These types are enabled: \" + Array.from(getEnabledTypes(compiler)).join(\", \"));\n      }\n    }\n  }]);\n\n  return EnableLibraryPlugin;\n}();\n\nmodule.exports = EnableLibraryPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/library/EnableLibraryPlugin.js"],"names":["enabledTypes","WeakMap","getEnabledTypes","compiler","set","get","undefined","Set","EnableLibraryPlugin","type","enabled","has","add","enableExportProperty","ExportPropertyTemplatePlugin","require","nsObjectUsed","apply","AssignLibraryPlugin","prefix","declare","unnamed","named","AmdLibraryPlugin","requireAsWrapper","UmdLibraryPlugin","optionalAmdExternalAsGlobal","SystemLibraryPlugin","JsonpLibraryPlugin","ModuleLibraryPlugin","Error","Array","from","join","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @type {WeakMap<Compiler, Set<LibraryType>>} */\nconst enabledTypes = new WeakMap();\n\nconst getEnabledTypes = compiler => {\n\tlet set = enabledTypes.get(compiler);\n\tif (set === undefined) {\n\t\tset = new Set();\n\t\tenabledTypes.set(compiler, set);\n\t}\n\treturn set;\n};\n\nclass EnableLibraryPlugin {\n\t/**\n\t * @param {LibraryType} type library type that should be available\n\t */\n\tconstructor(type) {\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @param {LibraryType} type type of library\n\t * @returns {void}\n\t */\n\tstatic setEnabled(compiler, type) {\n\t\tgetEnabledTypes(compiler).add(type);\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @param {LibraryType} type type of library\n\t * @returns {void}\n\t */\n\tstatic checkEnabled(compiler, type) {\n\t\tif (!getEnabledTypes(compiler).has(type)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Library type \"${type}\" is not enabled. ` +\n\t\t\t\t\t\"EnableLibraryPlugin need to be used to enable this type of library. \" +\n\t\t\t\t\t'This usually happens through the \"output.enabledLibraryTypes\" option. ' +\n\t\t\t\t\t'If you are using a function as entry which sets \"library\", you need to add all potential library types to \"output.enabledLibraryTypes\". ' +\n\t\t\t\t\t\"These types are enabled: \" +\n\t\t\t\t\tArray.from(getEnabledTypes(compiler)).join(\", \")\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { type } = this;\n\n\t\t// Only enable once\n\t\tconst enabled = getEnabledTypes(compiler);\n\t\tif (enabled.has(type)) return;\n\t\tenabled.add(type);\n\n\t\tif (typeof type === \"string\") {\n\t\t\tconst enableExportProperty = () => {\n\t\t\t\tconst ExportPropertyTemplatePlugin = require(\"./ExportPropertyLibraryPlugin\");\n\t\t\t\tnew ExportPropertyTemplatePlugin({\n\t\t\t\t\ttype,\n\t\t\t\t\tnsObjectUsed: type !== \"module\"\n\t\t\t\t}).apply(compiler);\n\t\t\t};\n\t\t\tswitch (type) {\n\t\t\t\tcase \"var\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [],\n\t\t\t\t\t\tdeclare: \"var\",\n\t\t\t\t\t\tunnamed: \"error\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"assign-properties\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"error\",\n\t\t\t\t\t\tnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"assign\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"error\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"this\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"this\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"window\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"window\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"self\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"self\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"global\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: \"global\",\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"commonjs\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"exports\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"commonjs-static\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"exports\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"static\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"commonjs2\":\n\t\t\t\tcase \"commonjs-module\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"module\", \"exports\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"assign\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"amd\":\n\t\t\t\tcase \"amd-require\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst AmdLibraryPlugin = require(\"./AmdLibraryPlugin\");\n\t\t\t\t\tnew AmdLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\trequireAsWrapper: type === \"amd-require\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"umd\":\n\t\t\t\tcase \"umd2\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst UmdLibraryPlugin = require(\"./UmdLibraryPlugin\");\n\t\t\t\t\tnew UmdLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\toptionalAmdExternalAsGlobal: type === \"umd2\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"system\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst SystemLibraryPlugin = require(\"./SystemLibraryPlugin\");\n\t\t\t\t\tnew SystemLibraryPlugin({\n\t\t\t\t\t\ttype\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"jsonp\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst JsonpLibraryPlugin = require(\"./JsonpLibraryPlugin\");\n\t\t\t\t\tnew JsonpLibraryPlugin({\n\t\t\t\t\t\ttype\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"module\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst ModuleLibraryPlugin = require(\"./ModuleLibraryPlugin\");\n\t\t\t\t\tnew ModuleLibraryPlugin({\n\t\t\t\t\t\ttype\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported library type ${type}.\nPlugins which provide custom library types must call EnableLibraryPlugin.setEnabled(compiler, type) to disable this error.`);\n\t\t\t}\n\t\t} else {\n\t\t\t// TODO support plugin instances here\n\t\t\t// apply them to the compiler\n\t\t}\n\t}\n}\n\nmodule.exports = EnableLibraryPlugin;\n"]},"metadata":{},"sourceType":"script"}