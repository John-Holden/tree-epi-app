{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _require = require(\"webpack-sources\"),\n    OriginalSource = _require.OriginalSource,\n    RawSource = _require.RawSource;\n\nvar Module = require(\"./Module\");\n\nvar makeSerializable = require(\"./util/makeSerializable\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n\nvar TYPES = new Set([\"javascript\"]);\n\nvar RawModule = /*#__PURE__*/function (_Module) {\n  _inherits(RawModule, _Module);\n\n  var _super = _createSuper(RawModule);\n\n  /**\n   * @param {string} source source code\n   * @param {string} identifier unique identifier\n   * @param {string=} readableIdentifier readable identifier\n   * @param {ReadonlySet<string>=} runtimeRequirements runtime requirements needed for the source code\n   */\n  function RawModule(source, identifier, readableIdentifier, runtimeRequirements) {\n    var _this;\n\n    _classCallCheck(this, RawModule);\n\n    _this = _super.call(this, \"javascript/dynamic\", null);\n    _this.sourceStr = source;\n    _this.identifierStr = identifier || _this.sourceStr;\n    _this.readableIdentifierStr = readableIdentifier || _this.identifierStr;\n    _this.runtimeRequirements = runtimeRequirements || null;\n    return _this;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  _createClass(RawModule, [{\n    key: \"getSourceTypes\",\n    value: function getSourceTypes() {\n      return TYPES;\n    }\n    /**\n     * @returns {string} a unique identifier of the module\n     */\n\n  }, {\n    key: \"identifier\",\n    value: function identifier() {\n      return this.identifierStr;\n    }\n    /**\n     * @param {string=} type the source type for which the size should be estimated\n     * @returns {number} the estimated size of the module (must be non-zero)\n     */\n\n  }, {\n    key: \"size\",\n    value: function size(type) {\n      return Math.max(1, this.sourceStr.length);\n    }\n    /**\n     * @param {RequestShortener} requestShortener the request shortener\n     * @returns {string} a user readable identifier of the module\n     */\n\n  }, {\n    key: \"readableIdentifier\",\n    value: function readableIdentifier(requestShortener) {\n      return requestShortener.shorten(this.readableIdentifierStr);\n    }\n    /**\n     * @param {NeedBuildContext} context context info\n     * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n     * @returns {void}\n     */\n\n  }, {\n    key: \"needBuild\",\n    value: function needBuild(context, callback) {\n      return callback(null, !this.buildMeta);\n    }\n    /**\n     * @param {WebpackOptions} options webpack options\n     * @param {Compilation} compilation the compilation\n     * @param {ResolverWithOptions} resolver the resolver\n     * @param {InputFileSystem} fs the file system\n     * @param {function(WebpackError=): void} callback callback function\n     * @returns {void}\n     */\n\n  }, {\n    key: \"build\",\n    value: function build(options, compilation, resolver, fs, callback) {\n      this.buildMeta = {};\n      this.buildInfo = {\n        cacheable: true\n      };\n      callback();\n    }\n    /**\n     * @param {CodeGenerationContext} context context for code generation\n     * @returns {CodeGenerationResult} result\n     */\n\n  }, {\n    key: \"codeGeneration\",\n    value: function codeGeneration(context) {\n      var sources = new Map();\n\n      if (this.useSourceMap || this.useSimpleSourceMap) {\n        sources.set(\"javascript\", new OriginalSource(this.sourceStr, this.identifier()));\n      } else {\n        sources.set(\"javascript\", new RawSource(this.sourceStr));\n      }\n\n      return {\n        sources: sources,\n        runtimeRequirements: this.runtimeRequirements\n      };\n    }\n    /**\n     * @param {Hash} hash the hash used to track dependencies\n     * @param {UpdateHashContext} context context\n     * @returns {void}\n     */\n\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, context) {\n      hash.update(this.sourceStr);\n\n      _get(_getPrototypeOf(RawModule.prototype), \"updateHash\", this).call(this, hash, context);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.sourceStr);\n      write(this.identifierStr);\n      write(this.readableIdentifierStr);\n      write(this.runtimeRequirements);\n\n      _get(_getPrototypeOf(RawModule.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.sourceStr = read();\n      this.identifierStr = read();\n      this.readableIdentifierStr = read();\n      this.runtimeRequirements = read();\n\n      _get(_getPrototypeOf(RawModule.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n\n  return RawModule;\n}(Module);\n\nmakeSerializable(RawModule, \"webpack/lib/RawModule\");\nmodule.exports = RawModule;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/RawModule.js"],"names":["require","OriginalSource","RawSource","Module","makeSerializable","TYPES","Set","RawModule","source","identifier","readableIdentifier","runtimeRequirements","sourceStr","identifierStr","readableIdentifierStr","type","Math","max","length","requestShortener","shorten","context","callback","buildMeta","options","compilation","resolver","fs","buildInfo","cacheable","sources","Map","useSourceMap","useSimpleSourceMap","set","hash","update","write","read","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\nconst makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass RawModule extends Module {\n\t/**\n\t * @param {string} source source code\n\t * @param {string} identifier unique identifier\n\t * @param {string=} readableIdentifier readable identifier\n\t * @param {ReadonlySet<string>=} runtimeRequirements runtime requirements needed for the source code\n\t */\n\tconstructor(source, identifier, readableIdentifier, runtimeRequirements) {\n\t\tsuper(\"javascript/dynamic\", null);\n\t\tthis.sourceStr = source;\n\t\tthis.identifierStr = identifier || this.sourceStr;\n\t\tthis.readableIdentifierStr = readableIdentifier || this.identifierStr;\n\t\tthis.runtimeRequirements = runtimeRequirements || null;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn this.identifierStr;\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn Math.max(1, this.sourceStr.length);\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn requestShortener.shorten(this.readableIdentifierStr);\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, !this.buildMeta);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: true\n\t\t};\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration(context) {\n\t\tconst sources = new Map();\n\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\tsources.set(\n\t\t\t\t\"javascript\",\n\t\t\t\tnew OriginalSource(this.sourceStr, this.identifier())\n\t\t\t);\n\t\t} else {\n\t\t\tsources.set(\"javascript\", new RawSource(this.sourceStr));\n\t\t}\n\t\treturn { sources, runtimeRequirements: this.runtimeRequirements };\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\thash.update(this.sourceStr);\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.sourceStr);\n\t\twrite(this.identifierStr);\n\t\twrite(this.readableIdentifierStr);\n\t\twrite(this.runtimeRequirements);\n\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.sourceStr = read();\n\t\tthis.identifierStr = read();\n\t\tthis.readableIdentifierStr = read();\n\t\tthis.runtimeRequirements = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(RawModule, \"webpack/lib/RawModule\");\n\nmodule.exports = RawModule;\n"]},"metadata":{},"sourceType":"script"}