{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\"use strict\";\n\nvar _slicedToArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar ExternalsPlugin = require(\"../ExternalsPlugin\");\n\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\n\nvar FallbackDependency = require(\"./FallbackDependency\");\n\nvar FallbackItemDependency = require(\"./FallbackItemDependency\");\n\nvar FallbackModuleFactory = require(\"./FallbackModuleFactory\");\n\nvar RemoteModule = require(\"./RemoteModule\");\n\nvar RemoteRuntimeModule = require(\"./RemoteRuntimeModule\");\n\nvar RemoteToExternalDependency = require(\"./RemoteToExternalDependency\");\n\nvar _require = require(\"./options\"),\n    parseOptions = _require.parseOptions;\n/** @typedef {import(\"../../declarations/plugins/container/ContainerReferencePlugin\").ContainerReferencePluginOptions} ContainerReferencePluginOptions */\n\n/** @typedef {import(\"../../declarations/plugins/container/ContainerReferencePlugin\").RemotesConfig} RemotesConfig */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nvar validate = createSchemaValidation(require(\"../../schemas/plugins/container/ContainerReferencePlugin.check.js\"), function () {\n  return require(\"../../schemas/plugins/container/ContainerReferencePlugin.json\");\n}, {\n  name: \"Container Reference Plugin\",\n  baseDataPath: \"options\"\n});\nvar slashCode = \"/\".charCodeAt(0);\n\nvar ContainerReferencePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {ContainerReferencePluginOptions} options options\n   */\n  function ContainerReferencePlugin(options) {\n    _classCallCheck(this, ContainerReferencePlugin);\n\n    validate(options);\n    this._remoteType = options.remoteType;\n    this._remotes = parseOptions(options.remotes, function (item) {\n      return {\n        external: Array.isArray(item) ? item : [item],\n        shareScope: options.shareScope || \"default\"\n      };\n    }, function (item) {\n      return {\n        external: Array.isArray(item.external) ? item.external : [item.external],\n        shareScope: item.shareScope || options.shareScope || \"default\"\n      };\n    });\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(ContainerReferencePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var remotes = this._remotes,\n          remoteType = this._remoteType;\n      /** @type {Record<string, string>} */\n\n      var remoteExternals = {};\n\n      var _iterator = _createForOfIteratorHelper(remotes),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              config = _step$value[1];\n\n          var i = 0;\n\n          var _iterator3 = _createForOfIteratorHelper(config.external),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var external = _step3.value;\n              if (external.startsWith(\"internal \")) continue;\n              remoteExternals[\"webpack/container/reference/\".concat(key).concat(i ? \"/fallback-\".concat(i) : \"\")] = external;\n              i++;\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      new ExternalsPlugin(remoteType, remoteExternals).apply(compiler);\n      compiler.hooks.compilation.tap(\"ContainerReferencePlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(RemoteToExternalDependency, normalModuleFactory);\n        compilation.dependencyFactories.set(FallbackItemDependency, normalModuleFactory);\n        compilation.dependencyFactories.set(FallbackDependency, new FallbackModuleFactory());\n        normalModuleFactory.hooks.factorize.tap(\"ContainerReferencePlugin\", function (data) {\n          if (!data.request.includes(\"!\")) {\n            var _iterator2 = _createForOfIteratorHelper(remotes),\n                _step2;\n\n            try {\n              var _loop = function _loop() {\n                var _step2$value = _slicedToArray(_step2.value, 2),\n                    key = _step2$value[0],\n                    config = _step2$value[1];\n\n                if (data.request.startsWith(\"\".concat(key)) && (data.request.length === key.length || data.request.charCodeAt(key.length) === slashCode)) {\n                  return {\n                    v: new RemoteModule(data.request, config.external.map(function (external, i) {\n                      return external.startsWith(\"internal \") ? external.slice(9) : \"webpack/container/reference/\".concat(key).concat(i ? \"/fallback-\".concat(i) : \"\");\n                    }), \".\".concat(data.request.slice(key.length)), config.shareScope)\n                  };\n                }\n              };\n\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _ret = _loop();\n\n                if (typeof _ret === \"object\") return _ret.v;\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        });\n        compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(\"ContainerReferencePlugin\", function (chunk, set) {\n          set.add(RuntimeGlobals.module);\n          set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n          set.add(RuntimeGlobals.hasOwnProperty);\n          set.add(RuntimeGlobals.initializeSharing);\n          set.add(RuntimeGlobals.shareScopeMap);\n          compilation.addRuntimeModule(chunk, new RemoteRuntimeModule());\n        });\n      });\n    }\n  }]);\n\n  return ContainerReferencePlugin;\n}();\n\nmodule.exports = ContainerReferencePlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/container/ContainerReferencePlugin.js"],"names":["ExternalsPlugin","require","RuntimeGlobals","createSchemaValidation","FallbackDependency","FallbackItemDependency","FallbackModuleFactory","RemoteModule","RemoteRuntimeModule","RemoteToExternalDependency","parseOptions","validate","name","baseDataPath","slashCode","charCodeAt","ContainerReferencePlugin","options","_remoteType","remoteType","_remotes","remotes","item","external","Array","isArray","shareScope","compiler","remoteExternals","key","config","i","startsWith","apply","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","factorize","data","request","includes","length","map","slice","runtimeRequirementInTree","for","ensureChunkHandlers","chunk","add","module","moduleFactoriesAddOnly","hasOwnProperty","initializeSharing","shareScopeMap","addRuntimeModule","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst ExternalsPlugin = require(\"../ExternalsPlugin\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst FallbackDependency = require(\"./FallbackDependency\");\nconst FallbackItemDependency = require(\"./FallbackItemDependency\");\nconst FallbackModuleFactory = require(\"./FallbackModuleFactory\");\nconst RemoteModule = require(\"./RemoteModule\");\nconst RemoteRuntimeModule = require(\"./RemoteRuntimeModule\");\nconst RemoteToExternalDependency = require(\"./RemoteToExternalDependency\");\nconst { parseOptions } = require(\"./options\");\n\n/** @typedef {import(\"../../declarations/plugins/container/ContainerReferencePlugin\").ContainerReferencePluginOptions} ContainerReferencePluginOptions */\n/** @typedef {import(\"../../declarations/plugins/container/ContainerReferencePlugin\").RemotesConfig} RemotesConfig */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/container/ContainerReferencePlugin.check.js\"),\n\t() =>\n\t\trequire(\"../../schemas/plugins/container/ContainerReferencePlugin.json\"),\n\t{\n\t\tname: \"Container Reference Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nconst slashCode = \"/\".charCodeAt(0);\n\nclass ContainerReferencePlugin {\n\t/**\n\t * @param {ContainerReferencePluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\n\t\tthis._remoteType = options.remoteType;\n\t\tthis._remotes = parseOptions(\n\t\t\toptions.remotes,\n\t\t\titem => ({\n\t\t\t\texternal: Array.isArray(item) ? item : [item],\n\t\t\t\tshareScope: options.shareScope || \"default\"\n\t\t\t}),\n\t\t\titem => ({\n\t\t\t\texternal: Array.isArray(item.external)\n\t\t\t\t\t? item.external\n\t\t\t\t\t: [item.external],\n\t\t\t\tshareScope: item.shareScope || options.shareScope || \"default\"\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { _remotes: remotes, _remoteType: remoteType } = this;\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst remoteExternals = {};\n\t\tfor (const [key, config] of remotes) {\n\t\t\tlet i = 0;\n\t\t\tfor (const external of config.external) {\n\t\t\t\tif (external.startsWith(\"internal \")) continue;\n\t\t\t\tremoteExternals[\n\t\t\t\t\t`webpack/container/reference/${key}${i ? `/fallback-${i}` : \"\"}`\n\t\t\t\t] = external;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tnew ExternalsPlugin(remoteType, remoteExternals).apply(compiler);\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ContainerReferencePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRemoteToExternalDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tFallbackItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tFallbackDependency,\n\t\t\t\t\tnew FallbackModuleFactory()\n\t\t\t\t);\n\n\t\t\t\tnormalModuleFactory.hooks.factorize.tap(\n\t\t\t\t\t\"ContainerReferencePlugin\",\n\t\t\t\t\tdata => {\n\t\t\t\t\t\tif (!data.request.includes(\"!\")) {\n\t\t\t\t\t\t\tfor (const [key, config] of remotes) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tdata.request.startsWith(`${key}`) &&\n\t\t\t\t\t\t\t\t\t(data.request.length === key.length ||\n\t\t\t\t\t\t\t\t\t\tdata.request.charCodeAt(key.length) === slashCode)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn new RemoteModule(\n\t\t\t\t\t\t\t\t\t\tdata.request,\n\t\t\t\t\t\t\t\t\t\tconfig.external.map((external, i) =>\n\t\t\t\t\t\t\t\t\t\t\texternal.startsWith(\"internal \")\n\t\t\t\t\t\t\t\t\t\t\t\t? external.slice(9)\n\t\t\t\t\t\t\t\t\t\t\t\t: `webpack/container/reference/${key}${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ti ? `/fallback-${i}` : \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t`.${data.request.slice(key.length)}`,\n\t\t\t\t\t\t\t\t\t\tconfig.shareScope\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap(\"ContainerReferencePlugin\", (chunk, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\t\tset.add(RuntimeGlobals.hasOwnProperty);\n\t\t\t\t\t\tset.add(RuntimeGlobals.initializeSharing);\n\t\t\t\t\t\tset.add(RuntimeGlobals.shareScopeMap);\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new RemoteRuntimeModule());\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ContainerReferencePlugin;\n"]},"metadata":{},"sourceType":"script"}