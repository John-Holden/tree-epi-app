{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\"use strict\";\n\nvar _objectSpread = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _slicedToArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar WebpackError = require(\"../WebpackError\");\n\nvar _require = require(\"../container/options\"),\n    parseOptions = _require.parseOptions;\n\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\n\nvar ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\n\nvar ProvideSharedDependency = require(\"./ProvideSharedDependency\");\n\nvar ProvideSharedModuleFactory = require(\"./ProvideSharedModuleFactory\");\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nvar validate = createSchemaValidation(require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.check.js\"), function () {\n  return require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.json\");\n}, {\n  name: \"Provide Shared Plugin\",\n  baseDataPath: \"options\"\n});\n/**\n * @typedef {Object} ProvideOptions\n * @property {string} shareKey\n * @property {string} shareScope\n * @property {string | undefined | false} version\n * @property {boolean} eager\n */\n\n/** @typedef {Map<string, { config: ProvideOptions, version: string | undefined | false }>} ResolvedProvideMap */\n\nvar ProvideSharedPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {ProvideSharedPluginOptions} options options\n   */\n  function ProvideSharedPlugin(options) {\n    _classCallCheck(this, ProvideSharedPlugin);\n\n    validate(options);\n    /** @type {[string, ProvideOptions][]} */\n\n    this._provides = parseOptions(options.provides, function (item) {\n      if (Array.isArray(item)) throw new Error(\"Unexpected array of provides\");\n      /** @type {ProvideOptions} */\n\n      var result = {\n        shareKey: item,\n        version: undefined,\n        shareScope: options.shareScope || \"default\",\n        eager: false\n      };\n      return result;\n    }, function (item) {\n      return {\n        shareKey: item.shareKey,\n        version: item.version,\n        shareScope: item.shareScope || options.shareScope || \"default\",\n        eager: !!item.eager\n      };\n    });\n\n    this._provides.sort(function (_ref, _ref2) {\n      var _ref3 = _slicedToArray(_ref, 1),\n          a = _ref3[0];\n\n      var _ref4 = _slicedToArray(_ref2, 1),\n          b = _ref4[0];\n\n      if (a < b) return -1;\n      if (b < a) return 1;\n      return 0;\n    });\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(ProvideSharedPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      /** @type {WeakMap<Compilation, ResolvedProvideMap>} */\n      var compilationData = new WeakMap();\n      compiler.hooks.compilation.tap(\"ProvideSharedPlugin\", function (compilation, _ref5) {\n        var normalModuleFactory = _ref5.normalModuleFactory;\n\n        /** @type {ResolvedProvideMap} */\n        var resolvedProvideMap = new Map();\n        /** @type {Map<string, ProvideOptions>} */\n\n        var matchProvides = new Map();\n        /** @type {Map<string, ProvideOptions>} */\n\n        var prefixMatchProvides = new Map();\n\n        var _iterator = _createForOfIteratorHelper(_this._provides),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                request = _step$value[0],\n                config = _step$value[1];\n\n            if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\|\\.\\.?(\\/|$))/.test(request)) {\n              // relative request\n              resolvedProvideMap.set(request, {\n                config: config,\n                version: config.version\n              });\n            } else if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\)/.test(request)) {\n              // absolute path\n              resolvedProvideMap.set(request, {\n                config: config,\n                version: config.version\n              });\n            } else if (request.endsWith(\"/\")) {\n              // module request prefix\n              prefixMatchProvides.set(request, config);\n            } else {\n              // module request\n              matchProvides.set(request, config);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        compilationData.set(compilation, resolvedProvideMap);\n\n        var provideSharedModule = function provideSharedModule(key, config, resource, resourceResolveData) {\n          var version = config.version;\n\n          if (version === undefined) {\n            var details = \"\";\n\n            if (!resourceResolveData) {\n              details = \"No resolve data provided from resolver.\";\n            } else {\n              var descriptionFileData = resourceResolveData.descriptionFileData;\n\n              if (!descriptionFileData) {\n                details = \"No description file (usually package.json) found. Add description file with name and version, or manually specify version in shared config.\";\n              } else if (!descriptionFileData.version) {\n                details = \"No version in description file (usually package.json). Add version to description file, or manually specify version in shared config.\";\n              } else {\n                version = descriptionFileData.version;\n              }\n            }\n\n            if (!version) {\n              var error = new WebpackError(\"No version specified and unable to automatically determine one. \".concat(details));\n              error.file = \"shared module \".concat(key, \" -> \").concat(resource);\n              compilation.warnings.push(error);\n            }\n          }\n\n          resolvedProvideMap.set(resource, {\n            config: config,\n            version: version\n          });\n        };\n\n        normalModuleFactory.hooks.module.tap(\"ProvideSharedPlugin\", function (module, _ref6, resolveData) {\n          var resource = _ref6.resource,\n              resourceResolveData = _ref6.resourceResolveData;\n\n          if (resolvedProvideMap.has(resource)) {\n            return module;\n          }\n\n          var request = resolveData.request;\n          {\n            var config = matchProvides.get(request);\n\n            if (config !== undefined) {\n              provideSharedModule(request, config, resource, resourceResolveData);\n              resolveData.cacheable = false;\n            }\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(prefixMatchProvides),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _step2$value = _slicedToArray(_step2.value, 2),\n                  prefix = _step2$value[0],\n                  _config = _step2$value[1];\n\n              if (request.startsWith(prefix)) {\n                var remainder = request.slice(prefix.length);\n                provideSharedModule(resource, _objectSpread(_objectSpread({}, _config), {}, {\n                  shareKey: _config.shareKey + remainder\n                }), resource, resourceResolveData);\n                resolveData.cacheable = false;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          return module;\n        });\n      });\n      compiler.hooks.finishMake.tapPromise(\"ProvideSharedPlugin\", function (compilation) {\n        var resolvedProvideMap = compilationData.get(compilation);\n        if (!resolvedProvideMap) return Promise.resolve();\n        return Promise.all(Array.from(resolvedProvideMap, function (_ref7) {\n          var _ref8 = _slicedToArray(_ref7, 2),\n              resource = _ref8[0],\n              _ref8$ = _ref8[1],\n              config = _ref8$.config,\n              version = _ref8$.version;\n\n          return new Promise(function (resolve, reject) {\n            compilation.addInclude(compiler.context, new ProvideSharedDependency(config.shareScope, config.shareKey, version || false, resource, config.eager), {\n              name: undefined\n            }, function (err) {\n              if (err) return reject(err);\n              resolve();\n            });\n          });\n        })).then(function () {});\n      });\n      compiler.hooks.compilation.tap(\"ProvideSharedPlugin\", function (compilation, _ref9) {\n        var normalModuleFactory = _ref9.normalModuleFactory;\n        compilation.dependencyFactories.set(ProvideForSharedDependency, normalModuleFactory);\n        compilation.dependencyFactories.set(ProvideSharedDependency, new ProvideSharedModuleFactory());\n      });\n    }\n  }]);\n\n  return ProvideSharedPlugin;\n}();\n\nmodule.exports = ProvideSharedPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/sharing/ProvideSharedPlugin.js"],"names":["WebpackError","require","parseOptions","createSchemaValidation","ProvideForSharedDependency","ProvideSharedDependency","ProvideSharedModuleFactory","validate","name","baseDataPath","ProvideSharedPlugin","options","_provides","provides","item","Array","isArray","Error","result","shareKey","version","undefined","shareScope","eager","sort","a","b","compiler","compilationData","WeakMap","hooks","compilation","tap","normalModuleFactory","resolvedProvideMap","Map","matchProvides","prefixMatchProvides","request","config","test","set","endsWith","provideSharedModule","key","resource","resourceResolveData","details","descriptionFileData","error","file","warnings","push","module","resolveData","has","get","cacheable","prefix","startsWith","remainder","slice","length","finishMake","tapPromise","Promise","resolve","all","from","reject","addInclude","context","err","then","dependencyFactories","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\nconst { parseOptions } = require(\"../container/options\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\nconst ProvideSharedDependency = require(\"./ProvideSharedDependency\");\nconst ProvideSharedModuleFactory = require(\"./ProvideSharedModuleFactory\");\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/sharing/ProvideSharedPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.json\"),\n\t{\n\t\tname: \"Provide Shared Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\n/**\n * @typedef {Object} ProvideOptions\n * @property {string} shareKey\n * @property {string} shareScope\n * @property {string | undefined | false} version\n * @property {boolean} eager\n */\n\n/** @typedef {Map<string, { config: ProvideOptions, version: string | undefined | false }>} ResolvedProvideMap */\n\nclass ProvideSharedPlugin {\n\t/**\n\t * @param {ProvideSharedPluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\n\t\t/** @type {[string, ProvideOptions][]} */\n\t\tthis._provides = parseOptions(\n\t\t\toptions.provides,\n\t\t\titem => {\n\t\t\t\tif (Array.isArray(item))\n\t\t\t\t\tthrow new Error(\"Unexpected array of provides\");\n\t\t\t\t/** @type {ProvideOptions} */\n\t\t\t\tconst result = {\n\t\t\t\t\tshareKey: item,\n\t\t\t\t\tversion: undefined,\n\t\t\t\t\tshareScope: options.shareScope || \"default\",\n\t\t\t\t\teager: false\n\t\t\t\t};\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\titem => ({\n\t\t\t\tshareKey: item.shareKey,\n\t\t\t\tversion: item.version,\n\t\t\t\tshareScope: item.shareScope || options.shareScope || \"default\",\n\t\t\t\teager: !!item.eager\n\t\t\t})\n\t\t);\n\t\tthis._provides.sort(([a], [b]) => {\n\t\t\tif (a < b) return -1;\n\t\t\tif (b < a) return 1;\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\t/** @type {WeakMap<Compilation, ResolvedProvideMap>} */\n\t\tconst compilationData = new WeakMap();\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvideSharedPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/** @type {ResolvedProvideMap} */\n\t\t\t\tconst resolvedProvideMap = new Map();\n\t\t\t\t/** @type {Map<string, ProvideOptions>} */\n\t\t\t\tconst matchProvides = new Map();\n\t\t\t\t/** @type {Map<string, ProvideOptions>} */\n\t\t\t\tconst prefixMatchProvides = new Map();\n\t\t\t\tfor (const [request, config] of this._provides) {\n\t\t\t\t\tif (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\|\\.\\.?(\\/|$))/.test(request)) {\n\t\t\t\t\t\t// relative request\n\t\t\t\t\t\tresolvedProvideMap.set(request, {\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\tversion: config.version\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\)/.test(request)) {\n\t\t\t\t\t\t// absolute path\n\t\t\t\t\t\tresolvedProvideMap.set(request, {\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\tversion: config.version\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (request.endsWith(\"/\")) {\n\t\t\t\t\t\t// module request prefix\n\t\t\t\t\t\tprefixMatchProvides.set(request, config);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// module request\n\t\t\t\t\t\tmatchProvides.set(request, config);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcompilationData.set(compilation, resolvedProvideMap);\n\t\t\t\tconst provideSharedModule = (\n\t\t\t\t\tkey,\n\t\t\t\t\tconfig,\n\t\t\t\t\tresource,\n\t\t\t\t\tresourceResolveData\n\t\t\t\t) => {\n\t\t\t\t\tlet version = config.version;\n\t\t\t\t\tif (version === undefined) {\n\t\t\t\t\t\tlet details = \"\";\n\t\t\t\t\t\tif (!resourceResolveData) {\n\t\t\t\t\t\t\tdetails = `No resolve data provided from resolver.`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst descriptionFileData =\n\t\t\t\t\t\t\t\tresourceResolveData.descriptionFileData;\n\t\t\t\t\t\t\tif (!descriptionFileData) {\n\t\t\t\t\t\t\t\tdetails =\n\t\t\t\t\t\t\t\t\t\"No description file (usually package.json) found. Add description file with name and version, or manually specify version in shared config.\";\n\t\t\t\t\t\t\t} else if (!descriptionFileData.version) {\n\t\t\t\t\t\t\t\tdetails =\n\t\t\t\t\t\t\t\t\t\"No version in description file (usually package.json). Add version to description file, or manually specify version in shared config.\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tversion = descriptionFileData.version;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version) {\n\t\t\t\t\t\t\tconst error = new WebpackError(\n\t\t\t\t\t\t\t\t`No version specified and unable to automatically determine one. ${details}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\terror.file = `shared module ${key} -> ${resource}`;\n\t\t\t\t\t\t\tcompilation.warnings.push(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresolvedProvideMap.set(resource, {\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tversion\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\t\"ProvideSharedPlugin\",\n\t\t\t\t\t(module, { resource, resourceResolveData }, resolveData) => {\n\t\t\t\t\t\tif (resolvedProvideMap.has(resource)) {\n\t\t\t\t\t\t\treturn module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst { request } = resolveData;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst config = matchProvides.get(request);\n\t\t\t\t\t\t\tif (config !== undefined) {\n\t\t\t\t\t\t\t\tprovideSharedModule(\n\t\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tresourceResolveData\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresolveData.cacheable = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const [prefix, config] of prefixMatchProvides) {\n\t\t\t\t\t\t\tif (request.startsWith(prefix)) {\n\t\t\t\t\t\t\t\tconst remainder = request.slice(prefix.length);\n\t\t\t\t\t\t\t\tprovideSharedModule(\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t...config,\n\t\t\t\t\t\t\t\t\t\tshareKey: config.shareKey + remainder\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tresourceResolveData\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresolveData.cacheable = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn module;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.finishMake.tapPromise(\"ProvideSharedPlugin\", compilation => {\n\t\t\tconst resolvedProvideMap = compilationData.get(compilation);\n\t\t\tif (!resolvedProvideMap) return Promise.resolve();\n\t\t\treturn Promise.all(\n\t\t\t\tArray.from(\n\t\t\t\t\tresolvedProvideMap,\n\t\t\t\t\t([resource, { config, version }]) =>\n\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\tcompilation.addInclude(\n\t\t\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\t\t\tnew ProvideSharedDependency(\n\t\t\t\t\t\t\t\t\tconfig.shareScope,\n\t\t\t\t\t\t\t\t\tconfig.shareKey,\n\t\t\t\t\t\t\t\t\tversion || false,\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tconfig.eager\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: undefined\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\tif (err) return reject(err);\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t).then(() => {});\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvideSharedPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tProvideForSharedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tProvideSharedDependency,\n\t\t\t\t\tnew ProvideSharedModuleFactory()\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ProvideSharedPlugin;\n"]},"metadata":{},"sourceType":"script"}