{"ast":null,"code":"var _jsxFileName = \"/home/john/react-stuff/src/components/SimPanel.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/app.css';\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SimulationPanel() {\n  _s();\n\n  const simUrl = 'https://tree-epi-site-bucket.s3.eu-west-2.amazonaws.com/media-manual/sim.mp4';\n  const catImgUrl = 'https://tree-epi-site-bucket.s3.eu-west-2.amazonaws.com/media-manual/Thinking-of-getting-a-cat.png';\n  const vidRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [buttonText, setButtonText] = useState('>');\n\n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n      vidRef.current.play();\n      setButtonText('||');\n    } else {\n      vidRef.current.pause();\n      setButtonText('>');\n    }\n  };\n\n  async function exists(url) {\n    const result = await fetch(url, {\n      method: 'HEAD'\n    });\n    console.log(result.ok);\n    return result.ok;\n  }\n\n  exists(simUrl);\n\n  const isSimGenerated = () => {\n    try {\n      const simulation = require(`${simUrl}`);\n\n      console.log('succces', simUrl);\n      return true;\n    } catch (err) {\n      console.log('fail');\n      return false;\n    }\n  };\n\n  const mySim = isSimGenerated();\n\n  if (mySim == false) {\n    console.log('Sim not generate, rendering cat');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulationPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Image not here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: catImgUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  } else {\n    console.log('rendering vid'); // const mySim = require(`${simulationPath}`) \n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simulationPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: vidRef,\n        src: mySim,\n        type: \"video/mp4\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: buttonRef,\n        onClick: () => onButtonClick(),\n        children: [\" \", buttonText, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(SimulationPanel, \"mdz/ab2YfasBvOPePg2EgSIEMno=\");\n\n_c = SimulationPanel;\nexport default SimulationPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimulationPanel\");","map":{"version":3,"sources":["/home/john/react-stuff/src/components/SimPanel.js"],"names":["React","useState","useRef","SimulationPanel","simUrl","catImgUrl","vidRef","buttonRef","buttonText","setButtonText","onButtonClick","current","paused","play","pause","exists","url","result","fetch","method","console","log","ok","isSimGenerated","simulation","require","err","mySim"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;;;AAGA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAMC,MAAM,GAAG,8EAAf;AACA,QAAMC,SAAS,GAAG,oGAAlB;AAEA,QAAMC,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB;AACA,QAAMK,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,GAAD,CAA5C;;AACA,QAAMS,aAAa,GAAG,MAAM;AAC1B,QAAIJ,MAAM,CAACK,OAAP,CAAeC,MAAnB,EAA2B;AACzBN,MAAAA,MAAM,CAACK,OAAP,CAAeE,IAAf;AACAJ,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAHD,MAIK;AACHH,MAAAA,MAAM,CAACK,OAAP,CAAeG,KAAf;AACAL,MAAAA,aAAa,CAAC,GAAD,CAAb;AACD;AACF,GATD;;AAWA,iBAAeM,MAAf,CAAsBC,GAAtB,EAA2B;AACzB,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAN,CAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,EAAnB;AACA,WAAOL,MAAM,CAACK,EAAd;AACD;;AAEDP,EAAAA,MAAM,CAACX,MAAD,CAAN;;AAEA,QAAMmB,cAAc,GAAG,MAAM;AAC3B,QAAI;AACF,YAAMC,UAAU,GAAGC,OAAO,CAAE,GAAErB,MAAO,EAAX,CAA1B;;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBjB,MAAvB;AACD,aAAO,IAAP;AACA,KAJD,CAIE,OAAOsB,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,aAAO,KAAP;AACA;AACF,GATD;;AAWA,QAAMM,KAAK,GAAGJ,cAAc,EAA5B;;AAEA,MAAMI,KAAK,IAAI,KAAf,EAAsB;AACpBP,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAEhB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMD,GARD,MAUK;AACHe,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADG,CAEH;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAO,QAAA,GAAG,EAAEf,MAAZ;AAAoB,QAAA,GAAG,EAAEqB,KAAzB;AAAgC,QAAA,IAAI,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAQ,QAAA,GAAG,EAAEpB,SAAb;AAAwB,QAAA,OAAO,EAAE,MAAMG,aAAa,EAApD;AAAA,wBAA0DF,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;AAAC;;GA1DOL,e;;KAAAA,e;AA4DT,eAAeA,eAAf","sourcesContent":["import '../styles/app.css'\nimport React, { useState, useRef} from 'react';\n\n\nfunction SimulationPanel() {\n  const simUrl = 'https://tree-epi-site-bucket.s3.eu-west-2.amazonaws.com/media-manual/sim.mp4'\n  const catImgUrl = 'https://tree-epi-site-bucket.s3.eu-west-2.amazonaws.com/media-manual/Thinking-of-getting-a-cat.png'\n\n  const vidRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [buttonText, setButtonText] = useState('>');\n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n      vidRef.current.play()\n      setButtonText('||')\n    }\n    else {\n      vidRef.current.pause()\n      setButtonText('>')\n    }\n  }\n\n  async function exists(url) {\n    const result = await fetch(url, { method: 'HEAD' });\n    console.log(result.ok)\n    return result.ok;\n  }\n\n  exists(simUrl)\n  \n  const isSimGenerated = () => {\n    try {\n      const simulation = require(`${simUrl}`)\n      console.log('succces', simUrl)\n     return true;\n    } catch (err) {\n      console.log('fail')\n     return false;\n    }\n  };\n\n  const mySim = isSimGenerated()\n  \n  if  ( mySim == false) {\n    console.log('Sim not generate, rendering cat')\n    return (\n        <div className='simulationPanel'> \n            <p> Image not here</p> \n            <img src={catImgUrl} />\n          </div>\n    );\n  }\n  \n  else {\n    console.log('rendering vid')\n    // const mySim = require(`${simulationPath}`) \n    return (\n        <div className='simulationPanel'> \n            <video ref={vidRef} src={mySim} type=\"video/mp4\"> </video> \n        <button ref={buttonRef} onClick={() => onButtonClick()}> {buttonText} </button>\n        </div>\n    );\n}}\n\nexport default SimulationPanel;\n"]},"metadata":{},"sourceType":"module"}