{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require(\"webpack-sources\"),\n    ConcatSource = _require.ConcatSource,\n    RawSource = _require.RawSource;\n\nvar ExternalModule = require(\"./ExternalModule\");\n\nvar ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nvar RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nvar JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @type {WeakMap<Source, Source>} */\n\n\nvar cache = new WeakMap();\nvar devtoolWarning = new RawSource(\"/*\\n * ATTENTION: The \\\"eval\\\" devtool has been used (maybe by default in mode: \\\"development\\\").\\n * This devtool is neither made for production nor for readable output files.\\n * It uses \\\"eval()\\\" calls to create a separate source file in the browser devtools.\\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\\n * or disable the default devtool with \\\"devtool: false\\\".\\n * If you are looking for production-ready output files, see mode: \\\"production\\\" (https://webpack.js.org/configuration/mode/).\\n */\\n\");\n\nvar EvalDevToolModulePlugin = /*#__PURE__*/function () {\n  function EvalDevToolModulePlugin(options) {\n    _classCallCheck(this, EvalDevToolModulePlugin);\n\n    this.namespace = options.namespace || \"\";\n    this.sourceUrlComment = options.sourceUrlComment || \"\\n//# sourceURL=[url]\";\n    this.moduleFilenameTemplate = options.moduleFilenameTemplate || \"webpack://[namespace]/[resourcePath]?[loaders]\";\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(EvalDevToolModulePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"EvalDevToolModulePlugin\", function (compilation) {\n        var hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n        hooks.renderModuleContent.tap(\"EvalDevToolModulePlugin\", function (source, module, _ref) {\n          var runtimeTemplate = _ref.runtimeTemplate,\n              chunkGraph = _ref.chunkGraph;\n          var cacheEntry = cache.get(source);\n          if (cacheEntry !== undefined) return cacheEntry;\n\n          if (module instanceof ExternalModule) {\n            cache.set(source, source);\n            return source;\n          }\n\n          var content = source.source();\n          var str = ModuleFilenameHelpers.createFilename(module, {\n            moduleFilenameTemplate: _this.moduleFilenameTemplate,\n            namespace: _this.namespace\n          }, {\n            requestShortener: runtimeTemplate.requestShortener,\n            chunkGraph: chunkGraph,\n            hashFunction: compilation.outputOptions.hashFunction\n          });\n\n          var footer = \"\\n\" + _this.sourceUrlComment.replace(/\\[url\\]/g, encodeURI(str).replace(/%2F/g, \"/\").replace(/%20/g, \"_\").replace(/%5E/g, \"^\").replace(/%5C/g, \"\\\\\").replace(/^\\//, \"\"));\n\n          var result = new RawSource(\"eval(\".concat(compilation.outputOptions.trustedTypes ? \"\".concat(RuntimeGlobals.createScript, \"(\").concat(JSON.stringify(content + footer), \")\") : JSON.stringify(content + footer), \");\"));\n          cache.set(source, result);\n          return result;\n        });\n        hooks.inlineInRuntimeBailout.tap(\"EvalDevToolModulePlugin\", function () {\n          return \"the eval devtool is used.\";\n        });\n        hooks.render.tap(\"EvalDevToolModulePlugin\", function (source) {\n          return new ConcatSource(devtoolWarning, source);\n        });\n        hooks.chunkHash.tap(\"EvalDevToolModulePlugin\", function (chunk, hash) {\n          hash.update(\"EvalDevToolModulePlugin\");\n          hash.update(\"2\");\n        });\n\n        if (compilation.outputOptions.trustedTypes) {\n          compilation.hooks.additionalModuleRuntimeRequirements.tap(\"EvalDevToolModulePlugin\", function (module, set, context) {\n            set.add(RuntimeGlobals.createScript);\n          });\n        }\n      });\n    }\n  }]);\n\n  return EvalDevToolModulePlugin;\n}();\n\nmodule.exports = EvalDevToolModulePlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/EvalDevToolModulePlugin.js"],"names":["require","ConcatSource","RawSource","ExternalModule","ModuleFilenameHelpers","RuntimeGlobals","JavascriptModulesPlugin","cache","WeakMap","devtoolWarning","EvalDevToolModulePlugin","options","namespace","sourceUrlComment","moduleFilenameTemplate","compiler","hooks","compilation","tap","getCompilationHooks","renderModuleContent","source","module","runtimeTemplate","chunkGraph","cacheEntry","get","undefined","set","content","str","createFilename","requestShortener","hashFunction","outputOptions","footer","replace","encodeURI","result","trustedTypes","createScript","JSON","stringify","inlineInRuntimeBailout","render","chunkHash","chunk","hash","update","additionalModuleRuntimeRequirements","context","add","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\nconst ExternalModule = require(\"./ExternalModule\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @type {WeakMap<Source, Source>} */\nconst cache = new WeakMap();\n\nconst devtoolWarning = new RawSource(`/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n`);\n\nclass EvalDevToolModulePlugin {\n\tconstructor(options) {\n\t\tthis.namespace = options.namespace || \"\";\n\t\tthis.sourceUrlComment = options.sourceUrlComment || \"\\n//# sourceURL=[url]\";\n\t\tthis.moduleFilenameTemplate =\n\t\t\toptions.moduleFilenameTemplate ||\n\t\t\t\"webpack://[namespace]/[resourcePath]?[loaders]\";\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"EvalDevToolModulePlugin\", compilation => {\n\t\t\tconst hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n\t\t\thooks.renderModuleContent.tap(\n\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\t(source, module, { runtimeTemplate, chunkGraph }) => {\n\t\t\t\t\tconst cacheEntry = cache.get(source);\n\t\t\t\t\tif (cacheEntry !== undefined) return cacheEntry;\n\t\t\t\t\tif (module instanceof ExternalModule) {\n\t\t\t\t\t\tcache.set(source, source);\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t}\n\t\t\t\t\tconst content = source.source();\n\t\t\t\t\tconst str = ModuleFilenameHelpers.createFilename(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmoduleFilenameTemplate: this.moduleFilenameTemplate,\n\t\t\t\t\t\t\tnamespace: this.namespace\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trequestShortener: runtimeTemplate.requestShortener,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\thashFunction: compilation.outputOptions.hashFunction\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tconst footer =\n\t\t\t\t\t\t\"\\n\" +\n\t\t\t\t\t\tthis.sourceUrlComment.replace(\n\t\t\t\t\t\t\t/\\[url\\]/g,\n\t\t\t\t\t\t\tencodeURI(str)\n\t\t\t\t\t\t\t\t.replace(/%2F/g, \"/\")\n\t\t\t\t\t\t\t\t.replace(/%20/g, \"_\")\n\t\t\t\t\t\t\t\t.replace(/%5E/g, \"^\")\n\t\t\t\t\t\t\t\t.replace(/%5C/g, \"\\\\\")\n\t\t\t\t\t\t\t\t.replace(/^\\//, \"\")\n\t\t\t\t\t\t);\n\t\t\t\t\tconst result = new RawSource(\n\t\t\t\t\t\t`eval(${\n\t\t\t\t\t\t\tcompilation.outputOptions.trustedTypes\n\t\t\t\t\t\t\t\t? `${RuntimeGlobals.createScript}(${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\tcontent + footer\n\t\t\t\t\t\t\t\t  )})`\n\t\t\t\t\t\t\t\t: JSON.stringify(content + footer)\n\t\t\t\t\t\t});`\n\t\t\t\t\t);\n\t\t\t\t\tcache.set(source, result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t);\n\t\t\thooks.inlineInRuntimeBailout.tap(\n\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\t() => \"the eval devtool is used.\"\n\t\t\t);\n\t\t\thooks.render.tap(\n\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\tsource => new ConcatSource(devtoolWarning, source)\n\t\t\t);\n\t\t\thooks.chunkHash.tap(\"EvalDevToolModulePlugin\", (chunk, hash) => {\n\t\t\t\thash.update(\"EvalDevToolModulePlugin\");\n\t\t\t\thash.update(\"2\");\n\t\t\t});\n\t\t\tif (compilation.outputOptions.trustedTypes) {\n\t\t\t\tcompilation.hooks.additionalModuleRuntimeRequirements.tap(\n\t\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\t\t(module, set, context) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.createScript);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = EvalDevToolModulePlugin;\n"]},"metadata":{},"sourceType":"script"}