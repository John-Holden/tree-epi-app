{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar Dependency = require(\"../Dependency\");\n\nvar DependencyTemplate = require(\"../DependencyTemplate\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n\nvar NullDependency = /*#__PURE__*/function (_Dependency) {\n  _inherits(NullDependency, _Dependency);\n\n  var _super = _createSuper(NullDependency);\n\n  function NullDependency() {\n    _classCallCheck(this, NullDependency);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullDependency, [{\n    key: \"type\",\n    get: function get() {\n      return \"null\";\n    }\n    /**\n     * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n     */\n\n  }, {\n    key: \"couldAffectReferencingModule\",\n    value: function couldAffectReferencingModule() {\n      return false;\n    }\n  }]);\n\n  return NullDependency;\n}(Dependency);\n\nNullDependency.Template = /*#__PURE__*/function (_DependencyTemplate) {\n  _inherits(NullDependencyTemplate, _DependencyTemplate);\n\n  var _super2 = _createSuper(NullDependencyTemplate);\n\n  function NullDependencyTemplate() {\n    _classCallCheck(this, NullDependencyTemplate);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(NullDependencyTemplate, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Dependency} dependency the dependency for which the template should be applied\n     * @param {ReplaceSource} source the current replace source which can be modified\n     * @param {DependencyTemplateContext} templateContext the context object\n     * @returns {void}\n     */\n    function apply(dependency, source, templateContext) {}\n  }]);\n\n  return NullDependencyTemplate;\n}(DependencyTemplate);\n\nmodule.exports = NullDependency;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/dependencies/NullDependency.js"],"names":["Dependency","require","DependencyTemplate","NullDependency","Template","dependency","source","templateContext","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAD,CAAlC;AAEA;;AACA;;AACA;;;IAEME,c;;;;;;;;;;;;;SACL,eAAW;AACV,aAAO,MAAP;AACA;AAED;AACD;AACA;;;;WACC,wCAA+B;AAC9B,aAAO,KAAP;AACA;;;;EAV2BH,U;;AAa7BG,cAAc,CAACC,QAAf;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAGC;AACD;AACA;AACA;AACA;AACA;AACC,mBAAMC,UAAN,EAAkBC,MAAlB,EAA0BC,eAA1B,EAA2C,CAAE;AAT9C;;AAAA;AAAA,EACCL,kBADD;;AAYAM,MAAM,CAACC,OAAP,GAAiBN,cAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst DependencyTemplate = require(\"../DependencyTemplate\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass NullDependency extends Dependency {\n\tget type() {\n\t\treturn \"null\";\n\t}\n\n\t/**\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n\t */\n\tcouldAffectReferencingModule() {\n\t\treturn false;\n\t}\n}\n\nNullDependency.Template = class NullDependencyTemplate extends (\n\tDependencyTemplate\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {}\n};\n\nmodule.exports = NullDependency;\n"]},"metadata":{},"sourceType":"script"}