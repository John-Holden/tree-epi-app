{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\n\nvar ProvidedDependency = require(\"./dependencies/ProvidedDependency\");\n\nvar _require = require(\"./javascript/JavascriptParserHelpers\"),\n    approve = _require.approve;\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nvar ProvidePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {Record<string, string | string[]>} definitions the provided identifiers\n   */\n  function ProvidePlugin(definitions) {\n    _classCallCheck(this, ProvidePlugin);\n\n    this.definitions = definitions;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(ProvidePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var definitions = this.definitions;\n      compiler.hooks.compilation.tap(\"ProvidePlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n        compilation.dependencyFactories.set(ProvidedDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ProvidedDependency, new ProvidedDependency.Template());\n\n        var handler = function handler(parser, parserOptions) {\n          Object.keys(definitions).forEach(function (name) {\n            var request = [].concat(definitions[name]);\n            var splittedName = name.split(\".\");\n\n            if (splittedName.length > 0) {\n              splittedName.slice(1).forEach(function (_, i) {\n                var name = splittedName.slice(0, i + 1).join(\".\");\n                parser.hooks.canRename.for(name).tap(\"ProvidePlugin\", approve);\n              });\n            }\n\n            parser.hooks.expression.for(name).tap(\"ProvidePlugin\", function (expr) {\n              var nameIdentifier = name.includes(\".\") ? \"__webpack_provided_\".concat(name.replace(/\\./g, \"_dot_\")) : name;\n              var dep = new ProvidedDependency(request[0], nameIdentifier, request.slice(1), expr.range);\n              dep.loc = expr.loc;\n              parser.state.module.addDependency(dep);\n              return true;\n            });\n            parser.hooks.call.for(name).tap(\"ProvidePlugin\", function (expr) {\n              var nameIdentifier = name.includes(\".\") ? \"__webpack_provided_\".concat(name.replace(/\\./g, \"_dot_\")) : name;\n              var dep = new ProvidedDependency(request[0], nameIdentifier, request.slice(1), expr.callee.range);\n              dep.loc = expr.callee.loc;\n              parser.state.module.addDependency(dep);\n              parser.walkExpressions(expr.arguments);\n              return true;\n            });\n          });\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ProvidePlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ProvidePlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ProvidePlugin\", handler);\n      });\n    }\n  }]);\n\n  return ProvidePlugin;\n}();\n\nmodule.exports = ProvidePlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/ProvidePlugin.js"],"names":["ConstDependency","require","ProvidedDependency","approve","ProvidePlugin","definitions","compiler","hooks","compilation","tap","normalModuleFactory","dependencyTemplates","set","Template","dependencyFactories","handler","parser","parserOptions","Object","keys","forEach","name","request","concat","splittedName","split","length","slice","_","i","join","canRename","for","expression","expr","nameIdentifier","includes","replace","dep","range","loc","state","module","addDependency","call","callee","walkExpressions","arguments","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ProvidedDependency = require(\"./dependencies/ProvidedDependency\");\nconst { approve } = require(\"./javascript/JavascriptParserHelpers\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass ProvidePlugin {\n\t/**\n\t * @param {Record<string, string | string[]>} definitions the provided identifiers\n\t */\n\tconstructor(definitions) {\n\t\tthis.definitions = definitions;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst definitions = this.definitions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvidePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tProvidedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tProvidedDependency,\n\t\t\t\t\tnew ProvidedDependency.Template()\n\t\t\t\t);\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tObject.keys(definitions).forEach(name => {\n\t\t\t\t\t\tconst request = [].concat(definitions[name]);\n\t\t\t\t\t\tconst splittedName = name.split(\".\");\n\t\t\t\t\t\tif (splittedName.length > 0) {\n\t\t\t\t\t\t\tsplittedName.slice(1).forEach((_, i) => {\n\t\t\t\t\t\t\t\tconst name = splittedName.slice(0, i + 1).join(\".\");\n\t\t\t\t\t\t\t\tparser.hooks.canRename.for(name).tap(\"ProvidePlugin\", approve);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparser.hooks.expression.for(name).tap(\"ProvidePlugin\", expr => {\n\t\t\t\t\t\t\tconst nameIdentifier = name.includes(\".\")\n\t\t\t\t\t\t\t\t? `__webpack_provided_${name.replace(/\\./g, \"_dot_\")}`\n\t\t\t\t\t\t\t\t: name;\n\t\t\t\t\t\t\tconst dep = new ProvidedDependency(\n\t\t\t\t\t\t\t\trequest[0],\n\t\t\t\t\t\t\t\tnameIdentifier,\n\t\t\t\t\t\t\t\trequest.slice(1),\n\t\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tparser.hooks.call.for(name).tap(\"ProvidePlugin\", expr => {\n\t\t\t\t\t\t\tconst nameIdentifier = name.includes(\".\")\n\t\t\t\t\t\t\t\t? `__webpack_provided_${name.replace(/\\./g, \"_dot_\")}`\n\t\t\t\t\t\t\t\t: name;\n\t\t\t\t\t\t\tconst dep = new ProvidedDependency(\n\t\t\t\t\t\t\t\trequest[0],\n\t\t\t\t\t\t\t\tnameIdentifier,\n\t\t\t\t\t\t\t\trequest.slice(1),\n\t\t\t\t\t\t\t\texpr.callee.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = expr.callee.loc;\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\tparser.walkExpressions(expr.arguments);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ProvidePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ProvidePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ProvidePlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ProvidePlugin;\n"]},"metadata":{},"sourceType":"script"}