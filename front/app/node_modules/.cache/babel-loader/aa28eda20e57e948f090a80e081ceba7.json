{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _toConsumableArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _objectSpread = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar path = require(\"path\");\n\nvar webpackSchema = require(\"../schemas/WebpackOptions.json\"); // TODO add originPath to PathItem for better errors\n\n/**\n * @typedef {Object} PathItem\n * @property {any} schema the part of the schema\n * @property {string} path the path in the config\n */\n\n/** @typedef {\"unknown-argument\" | \"unexpected-non-array-in-path\" | \"unexpected-non-object-in-path\" | \"multiple-values-unexpected\" | \"invalid-value\"} ProblemType */\n\n/**\n * @typedef {Object} Problem\n * @property {ProblemType} type\n * @property {string} path\n * @property {string} argument\n * @property {any=} value\n * @property {number=} index\n * @property {string=} expected\n */\n\n/**\n * @typedef {Object} LocalProblem\n * @property {ProblemType} type\n * @property {string} path\n * @property {string=} expected\n */\n\n/**\n * @typedef {Object} ArgumentConfig\n * @property {string} description\n * @property {string} [negatedDescription]\n * @property {string} path\n * @property {boolean} multiple\n * @property {\"enum\"|\"string\"|\"path\"|\"number\"|\"boolean\"|\"RegExp\"|\"reset\"} type\n * @property {any[]=} values\n */\n\n/**\n * @typedef {Object} Argument\n * @property {string} description\n * @property {\"string\"|\"number\"|\"boolean\"} simpleType\n * @property {boolean} multiple\n * @property {ArgumentConfig[]} configs\n */\n\n/**\n * @param {any=} schema a json schema to create arguments for (by default webpack schema is used)\n * @returns {Record<string, Argument>} object of arguments\n */\n\n\nvar getArguments = function getArguments() {\n  var schema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : webpackSchema;\n\n  /** @type {Record<string, Argument>} */\n  var flags = {};\n\n  var pathToArgumentName = function pathToArgumentName(input) {\n    return input.replace(/\\./g, \"-\").replace(/\\[\\]/g, \"\").replace(/((?:[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2F\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uA7B8\\uA7BA\\uA7BC\\uA7BE\\uA7C0\\uA7C2\\uA7C4-\\uA7C7\\uA7C9\\uA7D0\\uA7D6\\uA7D8\\uA7F5\\uFF21-\\uFF3A]|\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD81B[\\uDE40-\\uDE5F]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21])+|(?:[a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5F\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C1\\uA7C3\\uA7C8\\uA7CA\\uA7D1\\uA7D3\\uA7D5\\uA7D7\\uA7D9\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]|\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD81B[\\uDE60-\\uDE7F]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E]|\\uD83A[\\uDD22-\\uDD43])|[0-9])((?:[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2F\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uA7B8\\uA7BA\\uA7BC\\uA7BE\\uA7C0\\uA7C2\\uA7C4-\\uA7C7\\uA7C9\\uA7D0\\uA7D6\\uA7D8\\uA7F5\\uFF21-\\uFF3A]|\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD81B[\\uDE40-\\uDE5F]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21])+)/g, \"$1-$2\").replace(/\\x2D?(?:(?![0-9A-Za-z\\xB5\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u01BA\\u01BC-\\u01BF\\u01C4\\u01C6\\u01C7\\u01C9\\u01CA\\u01CC-\\u01F1\\u01F3-\\u0293\\u0295-\\u02AF\\u0370-\\u0373\\u0376\\u0377\\u037B-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0560-\\u0588\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6-\\u1FBB\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCB\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFB\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2134\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C7B\\u2C7E-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA640-\\uA66D\\uA680-\\uA69B\\uA722-\\uA76F\\uA771-\\uA787\\uA78B-\\uA78E\\uA790-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F5\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A]|\\uD801[\\uDC00-\\uDC4F\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]|\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD806[\\uDCA0-\\uDCDF]|\\uD81B[\\uDE40-\\uDE7F]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E]|\\uD83A[\\uDD00-\\uDD43])[\\s\\S])+/g, \"-\").toLowerCase();\n  };\n\n  var getSchemaPart = function getSchemaPart(path) {\n    var newPath = path.split(\"/\");\n    var schemaPart = schema;\n\n    for (var i = 1; i < newPath.length; i++) {\n      var inner = schemaPart[newPath[i]];\n\n      if (!inner) {\n        break;\n      }\n\n      schemaPart = inner;\n    }\n\n    return schemaPart;\n  };\n  /**\n   *\n   * @param {PathItem[]} path path in the schema\n   * @returns {string | undefined} description\n   */\n\n\n  var getDescription = function getDescription(path) {\n    var _iterator = _createForOfIteratorHelper(path),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _schema = _step.value.schema;\n\n        if (_schema.cli) {\n          if (_schema.cli.helper) continue;\n          if (_schema.cli.description) return _schema.cli.description;\n        }\n\n        if (_schema.description) return _schema.description;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n  /**\n   *\n   * @param {PathItem[]} path path in the schema\n   * @returns {string | undefined} negative description\n   */\n\n\n  var getNegatedDescription = function getNegatedDescription(path) {\n    var _iterator2 = _createForOfIteratorHelper(path),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _schema2 = _step2.value.schema;\n\n        if (_schema2.cli) {\n          if (_schema2.cli.helper) continue;\n          if (_schema2.cli.negatedDescription) return _schema2.cli.negatedDescription;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  };\n  /**\n   *\n   * @param {PathItem[]} path path in the schema\n   * @returns {string | undefined} reset description\n   */\n\n\n  var getResetDescription = function getResetDescription(path) {\n    var _iterator3 = _createForOfIteratorHelper(path),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _schema3 = _step3.value.schema;\n\n        if (_schema3.cli) {\n          if (_schema3.cli.helper) continue;\n          if (_schema3.cli.resetDescription) return _schema3.cli.resetDescription;\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  };\n  /**\n   *\n   * @param {any} schemaPart schema\n   * @returns {Pick<ArgumentConfig, \"type\"|\"values\">} partial argument config\n   */\n\n\n  var schemaToArgumentConfig = function schemaToArgumentConfig(schemaPart) {\n    if (schemaPart.enum) {\n      return {\n        type: \"enum\",\n        values: schemaPart.enum\n      };\n    }\n\n    switch (schemaPart.type) {\n      case \"number\":\n        return {\n          type: \"number\"\n        };\n\n      case \"string\":\n        return {\n          type: schemaPart.absolutePath ? \"path\" : \"string\"\n        };\n\n      case \"boolean\":\n        return {\n          type: \"boolean\"\n        };\n    }\n\n    if (schemaPart.instanceof === \"RegExp\") {\n      return {\n        type: \"RegExp\"\n      };\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {PathItem[]} path path in the schema\n   * @returns {void}\n   */\n\n\n  var addResetFlag = function addResetFlag(path) {\n    var schemaPath = path[0].path;\n    var name = pathToArgumentName(\"\".concat(schemaPath, \".reset\"));\n    var description = getResetDescription(path) || \"Clear all items provided in '\".concat(schemaPath, \"' configuration. \").concat(getDescription(path));\n    flags[name] = {\n      configs: [{\n        type: \"reset\",\n        multiple: false,\n        description: description,\n        path: schemaPath\n      }],\n      description: undefined,\n      simpleType: undefined,\n      multiple: undefined\n    };\n  };\n  /**\n   * @param {PathItem[]} path full path in schema\n   * @param {boolean} multiple inside of an array\n   * @returns {number} number of arguments added\n   */\n\n\n  var addFlag = function addFlag(path, multiple) {\n    var argConfigBase = schemaToArgumentConfig(path[0].schema);\n    if (!argConfigBase) return 0;\n    var negatedDescription = getNegatedDescription(path);\n    var name = pathToArgumentName(path[0].path);\n    /** @type {ArgumentConfig} */\n\n    var argConfig = _objectSpread(_objectSpread({}, argConfigBase), {}, {\n      multiple: multiple,\n      description: getDescription(path),\n      path: path[0].path\n    });\n\n    if (negatedDescription) {\n      argConfig.negatedDescription = negatedDescription;\n    }\n\n    if (!flags[name]) {\n      flags[name] = {\n        configs: [],\n        description: undefined,\n        simpleType: undefined,\n        multiple: undefined\n      };\n    }\n\n    if (flags[name].configs.some(function (item) {\n      return JSON.stringify(item) === JSON.stringify(argConfig);\n    })) {\n      return 0;\n    }\n\n    if (flags[name].configs.some(function (item) {\n      return item.type === argConfig.type && item.multiple !== multiple;\n    })) {\n      if (multiple) {\n        throw new Error(\"Conflicting schema for \".concat(path[0].path, \" with \").concat(argConfig.type, \" type (array type must be before single item type)\"));\n      }\n\n      return 0;\n    }\n\n    flags[name].configs.push(argConfig);\n    return 1;\n  }; // TODO support `not` and `if/then/else`\n  // TODO support `const`, but we don't use it on our schema\n\n  /**\n   *\n   * @param {object} schemaPart the current schema\n   * @param {string} schemaPath the current path in the schema\n   * @param {{schema: object, path: string}[]} path all previous visited schemaParts\n   * @param {string | null} inArray if inside of an array, the path to the array\n   * @returns {number} added arguments\n   */\n\n\n  var traverse = function traverse(schemaPart) {\n    var schemaPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var inArray = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    while (schemaPart.$ref) {\n      schemaPart = getSchemaPart(schemaPart.$ref);\n    }\n\n    var repetitions = path.filter(function (_ref) {\n      var schema = _ref.schema;\n      return schema === schemaPart;\n    });\n\n    if (repetitions.length >= 2 || repetitions.some(function (_ref2) {\n      var path = _ref2.path;\n      return path === schemaPath;\n    })) {\n      return 0;\n    }\n\n    if (schemaPart.cli && schemaPart.cli.exclude) return 0;\n    var fullPath = [{\n      schema: schemaPart,\n      path: schemaPath\n    }].concat(_toConsumableArray(path));\n    var addedArguments = 0;\n    addedArguments += addFlag(fullPath, !!inArray);\n\n    if (schemaPart.type === \"object\") {\n      if (schemaPart.properties) {\n        for (var _i = 0, _Object$keys = Object.keys(schemaPart.properties); _i < _Object$keys.length; _i++) {\n          var property = _Object$keys[_i];\n          addedArguments += traverse(schemaPart.properties[property], schemaPath ? \"\".concat(schemaPath, \".\").concat(property) : property, fullPath, inArray);\n        }\n      }\n\n      return addedArguments;\n    }\n\n    if (schemaPart.type === \"array\") {\n      if (inArray) {\n        return 0;\n      }\n\n      if (Array.isArray(schemaPart.items)) {\n        var i = 0;\n\n        var _iterator4 = _createForOfIteratorHelper(schemaPart.items),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var item = _step4.value;\n            addedArguments += traverse(item, \"\".concat(schemaPath, \".\").concat(i), fullPath, schemaPath);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        return addedArguments;\n      }\n\n      addedArguments += traverse(schemaPart.items, \"\".concat(schemaPath, \"[]\"), fullPath, schemaPath);\n\n      if (addedArguments > 0) {\n        addResetFlag(fullPath);\n        addedArguments++;\n      }\n\n      return addedArguments;\n    }\n\n    var maybeOf = schemaPart.oneOf || schemaPart.anyOf || schemaPart.allOf;\n\n    if (maybeOf) {\n      var items = maybeOf;\n\n      for (var _i2 = 0; _i2 < items.length; _i2++) {\n        addedArguments += traverse(items[_i2], schemaPath, fullPath, inArray);\n      }\n\n      return addedArguments;\n    }\n\n    return addedArguments;\n  };\n\n  traverse(schema); // Summarize flags\n\n  for (var _i3 = 0, _Object$keys2 = Object.keys(flags); _i3 < _Object$keys2.length; _i3++) {\n    var name = _Object$keys2[_i3];\n    var argument = flags[name];\n    argument.description = argument.configs.reduce(function (desc, _ref3) {\n      var description = _ref3.description;\n      if (!desc) return description;\n      if (!description) return desc;\n      if (desc.includes(description)) return desc;\n      return \"\".concat(desc, \" \").concat(description);\n    },\n    /** @type {string | undefined} */\n    undefined);\n    argument.simpleType = argument.configs.reduce(function (t, argConfig) {\n      /** @type {\"string\" | \"number\" | \"boolean\"} */\n      var type = \"string\";\n\n      switch (argConfig.type) {\n        case \"number\":\n          type = \"number\";\n          break;\n\n        case \"reset\":\n        case \"boolean\":\n          type = \"boolean\";\n          break;\n\n        case \"enum\":\n          if (argConfig.values.every(function (v) {\n            return typeof v === \"boolean\";\n          })) type = \"boolean\";\n          if (argConfig.values.every(function (v) {\n            return typeof v === \"number\";\n          })) type = \"number\";\n          break;\n      }\n\n      if (t === undefined) return type;\n      return t === type ? t : \"string\";\n    },\n    /** @type {\"string\" | \"number\" | \"boolean\" | undefined} */\n    undefined);\n    argument.multiple = argument.configs.some(function (c) {\n      return c.multiple;\n    });\n  }\n\n  return flags;\n};\n\nvar cliAddedItems = new WeakMap();\n/**\n * @param {any} config configuration\n * @param {string} schemaPath path in the config\n * @param {number | undefined} index index of value when multiple values are provided, otherwise undefined\n * @returns {{ problem?: LocalProblem, object?: any, property?: string | number, value?: any }} problem or object with property and value\n */\n\nvar getObjectAndProperty = function getObjectAndProperty(config, schemaPath) {\n  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  if (!schemaPath) return {\n    value: config\n  };\n  var parts = schemaPath.split(\".\");\n  var property = parts.pop();\n  var current = config;\n  var i = 0;\n\n  var _iterator5 = _createForOfIteratorHelper(parts),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var part = _step5.value;\n      var isArray = part.endsWith(\"[]\");\n\n      var _name = isArray ? part.slice(0, -2) : part;\n\n      var _value2 = current[_name];\n\n      if (isArray) {\n        if (_value2 === undefined) {\n          _value2 = {};\n          current[_name] = [].concat(_toConsumableArray(Array.from({\n            length: index\n          })), [_value2]);\n          cliAddedItems.set(current[_name], index + 1);\n        } else if (!Array.isArray(_value2)) {\n          return {\n            problem: {\n              type: \"unexpected-non-array-in-path\",\n              path: parts.slice(0, i).join(\".\")\n            }\n          };\n        } else {\n          var _addedItems = cliAddedItems.get(_value2) || 0;\n\n          while (_addedItems <= index) {\n            _value2.push(undefined);\n\n            _addedItems++;\n          }\n\n          cliAddedItems.set(_value2, _addedItems);\n\n          var _x = _value2.length - _addedItems + index;\n\n          if (_value2[_x] === undefined) {\n            _value2[_x] = {};\n          } else if (_value2[_x] === null || typeof _value2[_x] !== \"object\") {\n            return {\n              problem: {\n                type: \"unexpected-non-object-in-path\",\n                path: parts.slice(0, i).join(\".\")\n              }\n            };\n          }\n\n          _value2 = _value2[_x];\n        }\n      } else {\n        if (_value2 === undefined) {\n          _value2 = current[_name] = {};\n        } else if (_value2 === null || typeof _value2 !== \"object\") {\n          return {\n            problem: {\n              type: \"unexpected-non-object-in-path\",\n              path: parts.slice(0, i).join(\".\")\n            }\n          };\n        }\n      }\n\n      current = _value2;\n      i++;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  var value = current[property];\n\n  if (property.endsWith(\"[]\")) {\n    var name = property.slice(0, -2);\n    var _value = current[name];\n\n    if (_value === undefined) {\n      current[name] = [].concat(_toConsumableArray(Array.from({\n        length: index\n      })), [undefined]);\n      cliAddedItems.set(current[name], index + 1);\n      return {\n        object: current[name],\n        property: index,\n        value: undefined\n      };\n    } else if (!Array.isArray(_value)) {\n      current[name] = [_value].concat(_toConsumableArray(Array.from({\n        length: index\n      })), [undefined]);\n      cliAddedItems.set(current[name], index + 1);\n      return {\n        object: current[name],\n        property: index + 1,\n        value: undefined\n      };\n    } else {\n      var addedItems = cliAddedItems.get(_value) || 0;\n\n      while (addedItems <= index) {\n        _value.push(undefined);\n\n        addedItems++;\n      }\n\n      cliAddedItems.set(_value, addedItems);\n      var x = _value.length - addedItems + index;\n\n      if (_value[x] === undefined) {\n        _value[x] = {};\n      } else if (_value[x] === null || typeof _value[x] !== \"object\") {\n        return {\n          problem: {\n            type: \"unexpected-non-object-in-path\",\n            path: schemaPath\n          }\n        };\n      }\n\n      return {\n        object: _value,\n        property: x,\n        value: _value[x]\n      };\n    }\n  }\n\n  return {\n    object: current,\n    property: property,\n    value: value\n  };\n};\n/**\n * @param {any} config configuration\n * @param {string} schemaPath path in the config\n * @param {any} value parsed value\n * @param {number | undefined} index index of value when multiple values are provided, otherwise undefined\n * @returns {LocalProblem | null} problem or null for success\n */\n\n\nvar setValue = function setValue(config, schemaPath, value, index) {\n  var _getObjectAndProperty = getObjectAndProperty(config, schemaPath, index),\n      problem = _getObjectAndProperty.problem,\n      object = _getObjectAndProperty.object,\n      property = _getObjectAndProperty.property;\n\n  if (problem) return problem;\n  object[property] = value;\n  return null;\n};\n/**\n * @param {ArgumentConfig} argConfig processing instructions\n * @param {any} config configuration\n * @param {any} value the value\n * @param {number | undefined} index the index if multiple values provided\n * @returns {LocalProblem | null} a problem if any\n */\n\n\nvar processArgumentConfig = function processArgumentConfig(argConfig, config, value, index) {\n  if (index !== undefined && !argConfig.multiple) {\n    return {\n      type: \"multiple-values-unexpected\",\n      path: argConfig.path\n    };\n  }\n\n  var parsed = parseValueForArgumentConfig(argConfig, value);\n\n  if (parsed === undefined) {\n    return {\n      type: \"invalid-value\",\n      path: argConfig.path,\n      expected: getExpectedValue(argConfig)\n    };\n  }\n\n  var problem = setValue(config, argConfig.path, parsed, index);\n  if (problem) return problem;\n  return null;\n};\n/**\n * @param {ArgumentConfig} argConfig processing instructions\n * @returns {string | undefined} expected message\n */\n\n\nvar getExpectedValue = function getExpectedValue(argConfig) {\n  switch (argConfig.type) {\n    default:\n      return argConfig.type;\n\n    case \"boolean\":\n      return \"true | false\";\n\n    case \"RegExp\":\n      return \"regular expression (example: /ab?c*/)\";\n\n    case \"enum\":\n      return argConfig.values.map(function (v) {\n        return \"\".concat(v);\n      }).join(\" | \");\n\n    case \"reset\":\n      return \"true (will reset the previous value to an empty array)\";\n  }\n};\n/**\n * @param {ArgumentConfig} argConfig processing instructions\n * @param {any} value the value\n * @returns {any | undefined} parsed value\n */\n\n\nvar parseValueForArgumentConfig = function parseValueForArgumentConfig(argConfig, value) {\n  switch (argConfig.type) {\n    case \"string\":\n      if (typeof value === \"string\") {\n        return value;\n      }\n\n      break;\n\n    case \"path\":\n      if (typeof value === \"string\") {\n        return path.resolve(value);\n      }\n\n      break;\n\n    case \"number\":\n      if (typeof value === \"number\") return value;\n\n      if (typeof value === \"string\" && /^[+-]?\\d*(\\.\\d*)[eE]\\d+$/) {\n        var n = +value;\n        if (!isNaN(n)) return n;\n      }\n\n      break;\n\n    case \"boolean\":\n      if (typeof value === \"boolean\") return value;\n      if (value === \"true\") return true;\n      if (value === \"false\") return false;\n      break;\n\n    case \"RegExp\":\n      if (value instanceof RegExp) return value;\n\n      if (typeof value === \"string\") {\n        // cspell:word yugi\n        var match = /^\\/(.*)\\/([yugi]*)$/.exec(value);\n        if (match && !/[^\\\\]\\//.test(match[1])) return new RegExp(match[1], match[2]);\n      }\n\n      break;\n\n    case \"enum\":\n      if (argConfig.values.includes(value)) return value;\n\n      var _iterator6 = _createForOfIteratorHelper(argConfig.values),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var item = _step6.value;\n          if (\"\".concat(item) === value) return item;\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      break;\n\n    case \"reset\":\n      if (value === true) return [];\n      break;\n  }\n};\n/**\n * @param {Record<string, Argument>} args object of arguments\n * @param {any} config configuration\n * @param {Record<string, string | number | boolean | RegExp | (string | number | boolean | RegExp)[]>} values object with values\n * @returns {Problem[] | null} problems or null for success\n */\n\n\nvar processArguments = function processArguments(args, config, values) {\n  /** @type {Problem[]} */\n  var problems = [];\n\n  var _loop = function _loop() {\n    var key = _Object$keys3[_i4];\n    var arg = args[key];\n\n    if (!arg) {\n      problems.push({\n        type: \"unknown-argument\",\n        path: \"\",\n        argument: key\n      });\n      return \"continue\";\n    }\n\n    var processValue = function processValue(value, i) {\n      var currentProblems = [];\n\n      var _iterator7 = _createForOfIteratorHelper(arg.configs),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var argConfig = _step7.value;\n          var problem = processArgumentConfig(argConfig, config, value, i);\n\n          if (!problem) {\n            return;\n          }\n\n          currentProblems.push(_objectSpread(_objectSpread({}, problem), {}, {\n            argument: key,\n            value: value,\n            index: i\n          }));\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      problems.push.apply(problems, currentProblems);\n    };\n\n    var value = values[key];\n\n    if (Array.isArray(value)) {\n      for (var i = 0; i < value.length; i++) {\n        processValue(value[i], i);\n      }\n    } else {\n      processValue(value, undefined);\n    }\n  };\n\n  for (var _i4 = 0, _Object$keys3 = Object.keys(values); _i4 < _Object$keys3.length; _i4++) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  if (problems.length === 0) return null;\n  return problems;\n};\n\nexports.getArguments = getArguments;\nexports.processArguments = processArguments;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/cli.js"],"names":["path","require","webpackSchema","getArguments","schema","flags","pathToArgumentName","input","replace","toLowerCase","getSchemaPart","newPath","split","schemaPart","i","length","inner","getDescription","cli","helper","description","getNegatedDescription","negatedDescription","getResetDescription","resetDescription","schemaToArgumentConfig","enum","type","values","absolutePath","instanceof","undefined","addResetFlag","schemaPath","name","configs","multiple","simpleType","addFlag","argConfigBase","argConfig","some","item","JSON","stringify","Error","push","traverse","inArray","$ref","repetitions","filter","exclude","fullPath","addedArguments","properties","Object","keys","property","Array","isArray","items","maybeOf","oneOf","anyOf","allOf","argument","reduce","desc","includes","t","every","v","c","cliAddedItems","WeakMap","getObjectAndProperty","config","index","value","parts","pop","current","part","endsWith","slice","from","set","problem","join","addedItems","get","x","object","setValue","processArgumentConfig","parsed","parseValueForArgumentConfig","expected","getExpectedValue","map","resolve","n","isNaN","RegExp","match","exec","test","processArguments","args","problems","key","arg","processValue","currentProblems","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\nconst webpackSchema = require(\"../schemas/WebpackOptions.json\");\n\n// TODO add originPath to PathItem for better errors\n/**\n * @typedef {Object} PathItem\n * @property {any} schema the part of the schema\n * @property {string} path the path in the config\n */\n\n/** @typedef {\"unknown-argument\" | \"unexpected-non-array-in-path\" | \"unexpected-non-object-in-path\" | \"multiple-values-unexpected\" | \"invalid-value\"} ProblemType */\n\n/**\n * @typedef {Object} Problem\n * @property {ProblemType} type\n * @property {string} path\n * @property {string} argument\n * @property {any=} value\n * @property {number=} index\n * @property {string=} expected\n */\n\n/**\n * @typedef {Object} LocalProblem\n * @property {ProblemType} type\n * @property {string} path\n * @property {string=} expected\n */\n\n/**\n * @typedef {Object} ArgumentConfig\n * @property {string} description\n * @property {string} [negatedDescription]\n * @property {string} path\n * @property {boolean} multiple\n * @property {\"enum\"|\"string\"|\"path\"|\"number\"|\"boolean\"|\"RegExp\"|\"reset\"} type\n * @property {any[]=} values\n */\n\n/**\n * @typedef {Object} Argument\n * @property {string} description\n * @property {\"string\"|\"number\"|\"boolean\"} simpleType\n * @property {boolean} multiple\n * @property {ArgumentConfig[]} configs\n */\n\n/**\n * @param {any=} schema a json schema to create arguments for (by default webpack schema is used)\n * @returns {Record<string, Argument>} object of arguments\n */\nconst getArguments = (schema = webpackSchema) => {\n\t/** @type {Record<string, Argument>} */\n\tconst flags = {};\n\n\tconst pathToArgumentName = input => {\n\t\treturn input\n\t\t\t.replace(/\\./g, \"-\")\n\t\t\t.replace(/\\[\\]/g, \"\")\n\t\t\t.replace(\n\t\t\t\t/(\\p{Uppercase_Letter}+|\\p{Lowercase_Letter}|\\d)(\\p{Uppercase_Letter}+)/gu,\n\t\t\t\t\"$1-$2\"\n\t\t\t)\n\t\t\t.replace(/-?[^\\p{Uppercase_Letter}\\p{Lowercase_Letter}\\d]+/gu, \"-\")\n\t\t\t.toLowerCase();\n\t};\n\n\tconst getSchemaPart = path => {\n\t\tconst newPath = path.split(\"/\");\n\n\t\tlet schemaPart = schema;\n\n\t\tfor (let i = 1; i < newPath.length; i++) {\n\t\t\tconst inner = schemaPart[newPath[i]];\n\n\t\t\tif (!inner) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tschemaPart = inner;\n\t\t}\n\n\t\treturn schemaPart;\n\t};\n\n\t/**\n\t *\n\t * @param {PathItem[]} path path in the schema\n\t * @returns {string | undefined} description\n\t */\n\tconst getDescription = path => {\n\t\tfor (const { schema } of path) {\n\t\t\tif (schema.cli) {\n\t\t\t\tif (schema.cli.helper) continue;\n\t\t\t\tif (schema.cli.description) return schema.cli.description;\n\t\t\t}\n\t\t\tif (schema.description) return schema.description;\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * @param {PathItem[]} path path in the schema\n\t * @returns {string | undefined} negative description\n\t */\n\tconst getNegatedDescription = path => {\n\t\tfor (const { schema } of path) {\n\t\t\tif (schema.cli) {\n\t\t\t\tif (schema.cli.helper) continue;\n\t\t\t\tif (schema.cli.negatedDescription) return schema.cli.negatedDescription;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * @param {PathItem[]} path path in the schema\n\t * @returns {string | undefined} reset description\n\t */\n\tconst getResetDescription = path => {\n\t\tfor (const { schema } of path) {\n\t\t\tif (schema.cli) {\n\t\t\t\tif (schema.cli.helper) continue;\n\t\t\t\tif (schema.cli.resetDescription) return schema.cli.resetDescription;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * @param {any} schemaPart schema\n\t * @returns {Pick<ArgumentConfig, \"type\"|\"values\">} partial argument config\n\t */\n\tconst schemaToArgumentConfig = schemaPart => {\n\t\tif (schemaPart.enum) {\n\t\t\treturn {\n\t\t\t\ttype: \"enum\",\n\t\t\t\tvalues: schemaPart.enum\n\t\t\t};\n\t\t}\n\t\tswitch (schemaPart.type) {\n\t\t\tcase \"number\":\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"number\"\n\t\t\t\t};\n\t\t\tcase \"string\":\n\t\t\t\treturn {\n\t\t\t\t\ttype: schemaPart.absolutePath ? \"path\" : \"string\"\n\t\t\t\t};\n\t\t\tcase \"boolean\":\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"boolean\"\n\t\t\t\t};\n\t\t}\n\t\tif (schemaPart.instanceof === \"RegExp\") {\n\t\t\treturn {\n\t\t\t\ttype: \"RegExp\"\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t};\n\n\t/**\n\t * @param {PathItem[]} path path in the schema\n\t * @returns {void}\n\t */\n\tconst addResetFlag = path => {\n\t\tconst schemaPath = path[0].path;\n\t\tconst name = pathToArgumentName(`${schemaPath}.reset`);\n\t\tconst description =\n\t\t\tgetResetDescription(path) ||\n\t\t\t`Clear all items provided in '${schemaPath}' configuration. ${getDescription(\n\t\t\t\tpath\n\t\t\t)}`;\n\t\tflags[name] = {\n\t\t\tconfigs: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"reset\",\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tdescription,\n\t\t\t\t\tpath: schemaPath\n\t\t\t\t}\n\t\t\t],\n\t\t\tdescription: undefined,\n\t\t\tsimpleType: undefined,\n\t\t\tmultiple: undefined\n\t\t};\n\t};\n\n\t/**\n\t * @param {PathItem[]} path full path in schema\n\t * @param {boolean} multiple inside of an array\n\t * @returns {number} number of arguments added\n\t */\n\tconst addFlag = (path, multiple) => {\n\t\tconst argConfigBase = schemaToArgumentConfig(path[0].schema);\n\t\tif (!argConfigBase) return 0;\n\n\t\tconst negatedDescription = getNegatedDescription(path);\n\t\tconst name = pathToArgumentName(path[0].path);\n\t\t/** @type {ArgumentConfig} */\n\t\tconst argConfig = {\n\t\t\t...argConfigBase,\n\t\t\tmultiple,\n\t\t\tdescription: getDescription(path),\n\t\t\tpath: path[0].path\n\t\t};\n\n\t\tif (negatedDescription) {\n\t\t\targConfig.negatedDescription = negatedDescription;\n\t\t}\n\n\t\tif (!flags[name]) {\n\t\t\tflags[name] = {\n\t\t\t\tconfigs: [],\n\t\t\t\tdescription: undefined,\n\t\t\t\tsimpleType: undefined,\n\t\t\t\tmultiple: undefined\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tflags[name].configs.some(\n\t\t\t\titem => JSON.stringify(item) === JSON.stringify(argConfig)\n\t\t\t)\n\t\t) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (\n\t\t\tflags[name].configs.some(\n\t\t\t\titem => item.type === argConfig.type && item.multiple !== multiple\n\t\t\t)\n\t\t) {\n\t\t\tif (multiple) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Conflicting schema for ${path[0].path} with ${argConfig.type} type (array type must be before single item type)`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\n\t\tflags[name].configs.push(argConfig);\n\n\t\treturn 1;\n\t};\n\n\t// TODO support `not` and `if/then/else`\n\t// TODO support `const`, but we don't use it on our schema\n\t/**\n\t *\n\t * @param {object} schemaPart the current schema\n\t * @param {string} schemaPath the current path in the schema\n\t * @param {{schema: object, path: string}[]} path all previous visited schemaParts\n\t * @param {string | null} inArray if inside of an array, the path to the array\n\t * @returns {number} added arguments\n\t */\n\tconst traverse = (schemaPart, schemaPath = \"\", path = [], inArray = null) => {\n\t\twhile (schemaPart.$ref) {\n\t\t\tschemaPart = getSchemaPart(schemaPart.$ref);\n\t\t}\n\n\t\tconst repetitions = path.filter(({ schema }) => schema === schemaPart);\n\t\tif (\n\t\t\trepetitions.length >= 2 ||\n\t\t\trepetitions.some(({ path }) => path === schemaPath)\n\t\t) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (schemaPart.cli && schemaPart.cli.exclude) return 0;\n\n\t\tconst fullPath = [{ schema: schemaPart, path: schemaPath }, ...path];\n\n\t\tlet addedArguments = 0;\n\n\t\taddedArguments += addFlag(fullPath, !!inArray);\n\n\t\tif (schemaPart.type === \"object\") {\n\t\t\tif (schemaPart.properties) {\n\t\t\t\tfor (const property of Object.keys(schemaPart.properties)) {\n\t\t\t\t\taddedArguments += traverse(\n\t\t\t\t\t\tschemaPart.properties[property],\n\t\t\t\t\t\tschemaPath ? `${schemaPath}.${property}` : property,\n\t\t\t\t\t\tfullPath,\n\t\t\t\t\t\tinArray\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn addedArguments;\n\t\t}\n\n\t\tif (schemaPart.type === \"array\") {\n\t\t\tif (inArray) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (Array.isArray(schemaPart.items)) {\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const item of schemaPart.items) {\n\t\t\t\t\taddedArguments += traverse(\n\t\t\t\t\t\titem,\n\t\t\t\t\t\t`${schemaPath}.${i}`,\n\t\t\t\t\t\tfullPath,\n\t\t\t\t\t\tschemaPath\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn addedArguments;\n\t\t\t}\n\n\t\t\taddedArguments += traverse(\n\t\t\t\tschemaPart.items,\n\t\t\t\t`${schemaPath}[]`,\n\t\t\t\tfullPath,\n\t\t\t\tschemaPath\n\t\t\t);\n\n\t\t\tif (addedArguments > 0) {\n\t\t\t\taddResetFlag(fullPath);\n\t\t\t\taddedArguments++;\n\t\t\t}\n\n\t\t\treturn addedArguments;\n\t\t}\n\n\t\tconst maybeOf = schemaPart.oneOf || schemaPart.anyOf || schemaPart.allOf;\n\n\t\tif (maybeOf) {\n\t\t\tconst items = maybeOf;\n\n\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\taddedArguments += traverse(items[i], schemaPath, fullPath, inArray);\n\t\t\t}\n\n\t\t\treturn addedArguments;\n\t\t}\n\n\t\treturn addedArguments;\n\t};\n\n\ttraverse(schema);\n\n\t// Summarize flags\n\tfor (const name of Object.keys(flags)) {\n\t\tconst argument = flags[name];\n\t\targument.description = argument.configs.reduce((desc, { description }) => {\n\t\t\tif (!desc) return description;\n\t\t\tif (!description) return desc;\n\t\t\tif (desc.includes(description)) return desc;\n\t\t\treturn `${desc} ${description}`;\n\t\t}, /** @type {string | undefined} */ (undefined));\n\t\targument.simpleType = argument.configs.reduce((t, argConfig) => {\n\t\t\t/** @type {\"string\" | \"number\" | \"boolean\"} */\n\t\t\tlet type = \"string\";\n\t\t\tswitch (argConfig.type) {\n\t\t\t\tcase \"number\":\n\t\t\t\t\ttype = \"number\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"reset\":\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\ttype = \"boolean\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"enum\":\n\t\t\t\t\tif (argConfig.values.every(v => typeof v === \"boolean\"))\n\t\t\t\t\t\ttype = \"boolean\";\n\t\t\t\t\tif (argConfig.values.every(v => typeof v === \"number\"))\n\t\t\t\t\t\ttype = \"number\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (t === undefined) return type;\n\t\t\treturn t === type ? t : \"string\";\n\t\t}, /** @type {\"string\" | \"number\" | \"boolean\" | undefined} */ (undefined));\n\t\targument.multiple = argument.configs.some(c => c.multiple);\n\t}\n\n\treturn flags;\n};\n\nconst cliAddedItems = new WeakMap();\n\n/**\n * @param {any} config configuration\n * @param {string} schemaPath path in the config\n * @param {number | undefined} index index of value when multiple values are provided, otherwise undefined\n * @returns {{ problem?: LocalProblem, object?: any, property?: string | number, value?: any }} problem or object with property and value\n */\nconst getObjectAndProperty = (config, schemaPath, index = 0) => {\n\tif (!schemaPath) return { value: config };\n\tconst parts = schemaPath.split(\".\");\n\tlet property = parts.pop();\n\tlet current = config;\n\tlet i = 0;\n\tfor (const part of parts) {\n\t\tconst isArray = part.endsWith(\"[]\");\n\t\tconst name = isArray ? part.slice(0, -2) : part;\n\t\tlet value = current[name];\n\t\tif (isArray) {\n\t\t\tif (value === undefined) {\n\t\t\t\tvalue = {};\n\t\t\t\tcurrent[name] = [...Array.from({ length: index }), value];\n\t\t\t\tcliAddedItems.set(current[name], index + 1);\n\t\t\t} else if (!Array.isArray(value)) {\n\t\t\t\treturn {\n\t\t\t\t\tproblem: {\n\t\t\t\t\t\ttype: \"unexpected-non-array-in-path\",\n\t\t\t\t\t\tpath: parts.slice(0, i).join(\".\")\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlet addedItems = cliAddedItems.get(value) || 0;\n\t\t\t\twhile (addedItems <= index) {\n\t\t\t\t\tvalue.push(undefined);\n\t\t\t\t\taddedItems++;\n\t\t\t\t}\n\t\t\t\tcliAddedItems.set(value, addedItems);\n\t\t\t\tconst x = value.length - addedItems + index;\n\t\t\t\tif (value[x] === undefined) {\n\t\t\t\t\tvalue[x] = {};\n\t\t\t\t} else if (value[x] === null || typeof value[x] !== \"object\") {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tproblem: {\n\t\t\t\t\t\t\ttype: \"unexpected-non-object-in-path\",\n\t\t\t\t\t\t\tpath: parts.slice(0, i).join(\".\")\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvalue = value[x];\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) {\n\t\t\t\tvalue = current[name] = {};\n\t\t\t} else if (value === null || typeof value !== \"object\") {\n\t\t\t\treturn {\n\t\t\t\t\tproblem: {\n\t\t\t\t\t\ttype: \"unexpected-non-object-in-path\",\n\t\t\t\t\t\tpath: parts.slice(0, i).join(\".\")\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tcurrent = value;\n\t\ti++;\n\t}\n\tlet value = current[property];\n\tif (property.endsWith(\"[]\")) {\n\t\tconst name = property.slice(0, -2);\n\t\tconst value = current[name];\n\t\tif (value === undefined) {\n\t\t\tcurrent[name] = [...Array.from({ length: index }), undefined];\n\t\t\tcliAddedItems.set(current[name], index + 1);\n\t\t\treturn { object: current[name], property: index, value: undefined };\n\t\t} else if (!Array.isArray(value)) {\n\t\t\tcurrent[name] = [value, ...Array.from({ length: index }), undefined];\n\t\t\tcliAddedItems.set(current[name], index + 1);\n\t\t\treturn { object: current[name], property: index + 1, value: undefined };\n\t\t} else {\n\t\t\tlet addedItems = cliAddedItems.get(value) || 0;\n\t\t\twhile (addedItems <= index) {\n\t\t\t\tvalue.push(undefined);\n\t\t\t\taddedItems++;\n\t\t\t}\n\t\t\tcliAddedItems.set(value, addedItems);\n\t\t\tconst x = value.length - addedItems + index;\n\t\t\tif (value[x] === undefined) {\n\t\t\t\tvalue[x] = {};\n\t\t\t} else if (value[x] === null || typeof value[x] !== \"object\") {\n\t\t\t\treturn {\n\t\t\t\t\tproblem: {\n\t\t\t\t\t\ttype: \"unexpected-non-object-in-path\",\n\t\t\t\t\t\tpath: schemaPath\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tobject: value,\n\t\t\t\tproperty: x,\n\t\t\t\tvalue: value[x]\n\t\t\t};\n\t\t}\n\t}\n\treturn { object: current, property, value };\n};\n\n/**\n * @param {any} config configuration\n * @param {string} schemaPath path in the config\n * @param {any} value parsed value\n * @param {number | undefined} index index of value when multiple values are provided, otherwise undefined\n * @returns {LocalProblem | null} problem or null for success\n */\nconst setValue = (config, schemaPath, value, index) => {\n\tconst { problem, object, property } = getObjectAndProperty(\n\t\tconfig,\n\t\tschemaPath,\n\t\tindex\n\t);\n\tif (problem) return problem;\n\tobject[property] = value;\n\treturn null;\n};\n\n/**\n * @param {ArgumentConfig} argConfig processing instructions\n * @param {any} config configuration\n * @param {any} value the value\n * @param {number | undefined} index the index if multiple values provided\n * @returns {LocalProblem | null} a problem if any\n */\nconst processArgumentConfig = (argConfig, config, value, index) => {\n\tif (index !== undefined && !argConfig.multiple) {\n\t\treturn {\n\t\t\ttype: \"multiple-values-unexpected\",\n\t\t\tpath: argConfig.path\n\t\t};\n\t}\n\tconst parsed = parseValueForArgumentConfig(argConfig, value);\n\tif (parsed === undefined) {\n\t\treturn {\n\t\t\ttype: \"invalid-value\",\n\t\t\tpath: argConfig.path,\n\t\t\texpected: getExpectedValue(argConfig)\n\t\t};\n\t}\n\tconst problem = setValue(config, argConfig.path, parsed, index);\n\tif (problem) return problem;\n\treturn null;\n};\n\n/**\n * @param {ArgumentConfig} argConfig processing instructions\n * @returns {string | undefined} expected message\n */\nconst getExpectedValue = argConfig => {\n\tswitch (argConfig.type) {\n\t\tdefault:\n\t\t\treturn argConfig.type;\n\t\tcase \"boolean\":\n\t\t\treturn \"true | false\";\n\t\tcase \"RegExp\":\n\t\t\treturn \"regular expression (example: /ab?c*/)\";\n\t\tcase \"enum\":\n\t\t\treturn argConfig.values.map(v => `${v}`).join(\" | \");\n\t\tcase \"reset\":\n\t\t\treturn \"true (will reset the previous value to an empty array)\";\n\t}\n};\n\n/**\n * @param {ArgumentConfig} argConfig processing instructions\n * @param {any} value the value\n * @returns {any | undefined} parsed value\n */\nconst parseValueForArgumentConfig = (argConfig, value) => {\n\tswitch (argConfig.type) {\n\t\tcase \"string\":\n\t\t\tif (typeof value === \"string\") {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"path\":\n\t\t\tif (typeof value === \"string\") {\n\t\t\t\treturn path.resolve(value);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif (typeof value === \"number\") return value;\n\t\t\tif (typeof value === \"string\" && /^[+-]?\\d*(\\.\\d*)[eE]\\d+$/) {\n\t\t\t\tconst n = +value;\n\t\t\t\tif (!isNaN(n)) return n;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"boolean\":\n\t\t\tif (typeof value === \"boolean\") return value;\n\t\t\tif (value === \"true\") return true;\n\t\t\tif (value === \"false\") return false;\n\t\t\tbreak;\n\t\tcase \"RegExp\":\n\t\t\tif (value instanceof RegExp) return value;\n\t\t\tif (typeof value === \"string\") {\n\t\t\t\t// cspell:word yugi\n\t\t\t\tconst match = /^\\/(.*)\\/([yugi]*)$/.exec(value);\n\t\t\t\tif (match && !/[^\\\\]\\//.test(match[1]))\n\t\t\t\t\treturn new RegExp(match[1], match[2]);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"enum\":\n\t\t\tif (argConfig.values.includes(value)) return value;\n\t\t\tfor (const item of argConfig.values) {\n\t\t\t\tif (`${item}` === value) return item;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"reset\":\n\t\t\tif (value === true) return [];\n\t\t\tbreak;\n\t}\n};\n\n/**\n * @param {Record<string, Argument>} args object of arguments\n * @param {any} config configuration\n * @param {Record<string, string | number | boolean | RegExp | (string | number | boolean | RegExp)[]>} values object with values\n * @returns {Problem[] | null} problems or null for success\n */\nconst processArguments = (args, config, values) => {\n\t/** @type {Problem[]} */\n\tconst problems = [];\n\tfor (const key of Object.keys(values)) {\n\t\tconst arg = args[key];\n\t\tif (!arg) {\n\t\t\tproblems.push({\n\t\t\t\ttype: \"unknown-argument\",\n\t\t\t\tpath: \"\",\n\t\t\t\targument: key\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tconst processValue = (value, i) => {\n\t\t\tconst currentProblems = [];\n\t\t\tfor (const argConfig of arg.configs) {\n\t\t\t\tconst problem = processArgumentConfig(argConfig, config, value, i);\n\t\t\t\tif (!problem) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentProblems.push({\n\t\t\t\t\t...problem,\n\t\t\t\t\targument: key,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tindex: i\n\t\t\t\t});\n\t\t\t}\n\t\t\tproblems.push(...currentProblems);\n\t\t};\n\t\tlet value = values[key];\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tprocessValue(value[i], i);\n\t\t\t}\n\t\t} else {\n\t\t\tprocessValue(value, undefined);\n\t\t}\n\t}\n\tif (problems.length === 0) return null;\n\treturn problems;\n};\n\nexports.getArguments = getArguments;\nexports.processArguments = processArguments;\n"]},"metadata":{},"sourceType":"script"}