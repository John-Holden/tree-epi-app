{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _get = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _require = require(\"webpack-sources\"),\n    OriginalSource = _require.OriginalSource,\n    RawSource = _require.RawSource;\n\nvar ConcatenationScope = require(\"./ConcatenationScope\");\n\nvar _require2 = require(\"./ExportsInfo\"),\n    UsageState = _require2.UsageState;\n\nvar InitFragment = require(\"./InitFragment\");\n\nvar Module = require(\"./Module\");\n\nvar RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nvar Template = require(\"./Template\");\n\nvar StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\n\nvar createHash = require(\"./util/createHash\");\n\nvar extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\n\nvar makeSerializable = require(\"./util/makeSerializable\");\n\nvar propertyAccess = require(\"./util/propertyAccess\");\n\nvar _require3 = require(\"./util/serialization\"),\n    register = _require3.register;\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceData\n * @property {boolean=} iife\n * @property {string=} init\n * @property {string} expression\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\n * @property {ReadonlySet<string>=} runtimeRequirements\n */\n\n\nvar TYPES = new Set([\"javascript\"]);\nvar CSS_TYPES = new Set([\"css-import\"]);\nvar RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nvar RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nvar RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([RuntimeGlobals.definePropertyGetters]);\nvar EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n/**\n * @param {string|string[]} variableName the variable name or path\n * @param {string} type the module system\n * @returns {SourceData} the generated source\n */\n\nvar getSourceForGlobalVariableExternal = function getSourceForGlobalVariableExternal(variableName, type) {\n  if (!Array.isArray(variableName)) {\n    // make it an array as the look up works the same basically\n    variableName = [variableName];\n  } // needed for e.g. window[\"some\"][\"thing\"]\n\n\n  var objectLookup = variableName.map(function (r) {\n    return \"[\".concat(JSON.stringify(r), \"]\");\n  }).join(\"\");\n  return {\n    iife: type === \"this\",\n    expression: \"\".concat(type).concat(objectLookup)\n  };\n};\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\n\n\nvar getSourceForCommonJsExternal = function getSourceForCommonJsExternal(moduleAndSpecifiers) {\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: \"require(\".concat(JSON.stringify(moduleAndSpecifiers), \")\")\n    };\n  }\n\n  var moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: \"require(\".concat(JSON.stringify(moduleName), \")\").concat(propertyAccess(moduleAndSpecifiers, 1))\n  };\n};\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\n\n\nvar getSourceForCommonJsExternalInNodeModule = function getSourceForCommonJsExternalInNodeModule(moduleAndSpecifiers) {\n  var chunkInitFragments = [new InitFragment('import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"module\";\\n', InitFragment.STAGE_HARMONY_IMPORTS, 0, \"external module node-commonjs\")];\n\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: \"__WEBPACK_EXTERNAL_createRequire(import.meta.url)(\".concat(JSON.stringify(moduleAndSpecifiers), \")\"),\n      chunkInitFragments: chunkInitFragments\n    };\n  }\n\n  var moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: \"__WEBPACK_EXTERNAL_createRequire(import.meta.url)(\".concat(JSON.stringify(moduleName), \")\").concat(propertyAccess(moduleAndSpecifiers, 1)),\n    chunkInitFragments: chunkInitFragments\n  };\n};\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\n\n\nvar getSourceForImportExternal = function getSourceForImportExternal(moduleAndSpecifiers, runtimeTemplate) {\n  var importName = runtimeTemplate.outputOptions.importFunctionName;\n\n  if (!runtimeTemplate.supportsDynamicImport() && importName === \"import\") {\n    throw new Error(\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\");\n  }\n\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: \"\".concat(importName, \"(\").concat(JSON.stringify(moduleAndSpecifiers), \");\")\n    };\n  }\n\n  if (moduleAndSpecifiers.length === 1) {\n    return {\n      expression: \"\".concat(importName, \"(\").concat(JSON.stringify(moduleAndSpecifiers[0]), \");\")\n    };\n  }\n\n  var moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: \"\".concat(importName, \"(\").concat(JSON.stringify(moduleName), \").then(\").concat(runtimeTemplate.returningFunction(\"module\".concat(propertyAccess(moduleAndSpecifiers, 1)), \"module\"), \");\")\n  };\n};\n\nvar ModuleExternalInitFragment = /*#__PURE__*/function (_InitFragment) {\n  _inherits(ModuleExternalInitFragment, _InitFragment);\n\n  var _super = _createSuper(ModuleExternalInitFragment);\n\n  /**\n   * @param {string} request import source\n   * @param {string=} ident recomputed ident\n   * @param {string | HashConstructor=} hashFunction the hash function to use\n   */\n  function ModuleExternalInitFragment(request, ident) {\n    var _this;\n\n    var hashFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"md4\";\n\n    _classCallCheck(this, ModuleExternalInitFragment);\n\n    if (ident === undefined) {\n      ident = Template.toIdentifier(request);\n\n      if (ident !== request) {\n        ident += \"_\".concat(createHash(hashFunction).update(request).digest(\"hex\").slice(0, 8));\n      }\n    }\n\n    var identifier = \"__WEBPACK_EXTERNAL_MODULE_\".concat(ident, \"__\");\n    _this = _super.call(this, \"import * as \".concat(identifier, \" from \").concat(JSON.stringify(request), \";\\n\"), InitFragment.STAGE_HARMONY_IMPORTS, 0, \"external module import \".concat(ident));\n    _this._ident = ident;\n    _this._identifier = identifier;\n    _this._request = request;\n    return _this;\n  }\n\n  _createClass(ModuleExternalInitFragment, [{\n    key: \"getNamespaceIdentifier\",\n    value: function getNamespaceIdentifier() {\n      return this._identifier;\n    }\n  }]);\n\n  return ModuleExternalInitFragment;\n}(InitFragment);\n\nregister(ModuleExternalInitFragment, \"webpack/lib/ExternalModule\", \"ModuleExternalInitFragment\", {\n  serialize: function serialize(obj, _ref) {\n    var write = _ref.write;\n    write(obj._request);\n    write(obj._ident);\n  },\n  deserialize: function deserialize(_ref2) {\n    var read = _ref2.read;\n    return new ModuleExternalInitFragment(read(), read());\n  }\n});\n\nvar generateModuleRemapping = function generateModuleRemapping(input, exportsInfo, runtime) {\n  if (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n    var properties = [];\n\n    var _iterator = _createForOfIteratorHelper(exportsInfo.orderedExports),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var exportInfo = _step.value;\n        var used = exportInfo.getUsedName(exportInfo.name, runtime);\n        if (!used) continue;\n        var nestedInfo = exportInfo.getNestedExportsInfo();\n\n        if (nestedInfo) {\n          var nestedExpr = generateModuleRemapping(\"\".concat(input).concat(propertyAccess([exportInfo.name])), nestedInfo);\n\n          if (nestedExpr) {\n            properties.push(\"[\".concat(JSON.stringify(used), \"]: y(\").concat(nestedExpr, \")\"));\n            continue;\n          }\n        }\n\n        properties.push(\"[\".concat(JSON.stringify(used), \"]: () => \").concat(input).concat(propertyAccess([exportInfo.name])));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return \"x({ \".concat(properties.join(\", \"), \" })\");\n  }\n};\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {ExportsInfo} exportsInfo exports info of this module\n * @param {RuntimeSpec} runtime the runtime\n * @param {string | HashConstructor=} hashFunction the hash function to use\n * @returns {SourceData} the generated source\n */\n\n\nvar getSourceForModuleExternal = function getSourceForModuleExternal(moduleAndSpecifiers, exportsInfo, runtime, hashFunction) {\n  if (!Array.isArray(moduleAndSpecifiers)) moduleAndSpecifiers = [moduleAndSpecifiers];\n  var initFragment = new ModuleExternalInitFragment(moduleAndSpecifiers[0], undefined, hashFunction);\n  var baseAccess = \"\".concat(initFragment.getNamespaceIdentifier()).concat(propertyAccess(moduleAndSpecifiers, 1));\n  var moduleRemapping = generateModuleRemapping(baseAccess, exportsInfo, runtime);\n  var expression = moduleRemapping || baseAccess;\n  return {\n    expression: expression,\n    init: \"var x = y => { var x = {}; \".concat(RuntimeGlobals.definePropertyGetters, \"(x, y); return x; }\\nvar y = x => () => x\"),\n    runtimeRequirements: moduleRemapping ? RUNTIME_REQUIREMENTS_FOR_MODULE : undefined,\n    chunkInitFragments: [initFragment]\n  };\n};\n/**\n * @param {string|string[]} urlAndGlobal the script request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\n\n\nvar getSourceForScriptExternal = function getSourceForScriptExternal(urlAndGlobal, runtimeTemplate) {\n  if (typeof urlAndGlobal === \"string\") {\n    urlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n  }\n\n  var url = urlAndGlobal[0];\n  var globalName = urlAndGlobal[1];\n  return {\n    init: \"var __webpack_error__ = new Error();\",\n    expression: \"new Promise(\".concat(runtimeTemplate.basicFunction(\"resolve, reject\", [\"if(typeof \".concat(globalName, \" !== \\\"undefined\\\") return resolve();\"), \"\".concat(RuntimeGlobals.loadScript, \"(\").concat(JSON.stringify(url), \", \").concat(runtimeTemplate.basicFunction(\"event\", [\"if(typeof \".concat(globalName, \" !== \\\"undefined\\\") return resolve();\"), \"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"__webpack_error__.name = 'ScriptExternalLoadError';\", \"__webpack_error__.type = errorType;\", \"__webpack_error__.request = realSrc;\", \"reject(__webpack_error__);\"]), \", \").concat(JSON.stringify(globalName), \");\")]), \").then(\").concat(runtimeTemplate.returningFunction(\"\".concat(globalName).concat(propertyAccess(urlAndGlobal, 2))), \")\"),\n    runtimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n  };\n};\n/**\n * @param {string} variableName the variable name to check\n * @param {string} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {string} the generated source\n */\n\n\nvar checkExternalVariable = function checkExternalVariable(variableName, request, runtimeTemplate) {\n  return \"if(typeof \".concat(variableName, \" === 'undefined') { \").concat(runtimeTemplate.throwMissingModuleErrorBlock({\n    request: request\n  }), \" }\\n\");\n};\n/**\n * @param {string|number} id the module id\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\n\n\nvar getSourceForAmdOrUmdExternal = function getSourceForAmdOrUmdExternal(id, optional, request, runtimeTemplate) {\n  var externalVariable = \"__WEBPACK_EXTERNAL_MODULE_\".concat(Template.toIdentifier(\"\".concat(id)), \"__\");\n  return {\n    init: optional ? checkExternalVariable(externalVariable, Array.isArray(request) ? request.join(\".\") : request, runtimeTemplate) : undefined,\n    expression: externalVariable\n  };\n};\n/**\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\n\n\nvar getSourceForDefaultCase = function getSourceForDefaultCase(optional, request, runtimeTemplate) {\n  if (!Array.isArray(request)) {\n    // make it an array as the look up works the same basically\n    request = [request];\n  }\n\n  var variableName = request[0];\n  var objectLookup = propertyAccess(request, 1);\n  return {\n    init: optional ? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate) : undefined,\n    expression: \"\".concat(variableName).concat(objectLookup)\n  };\n};\n\nvar ExternalModule = /*#__PURE__*/function (_Module) {\n  _inherits(ExternalModule, _Module);\n\n  var _super2 = _createSuper(ExternalModule);\n\n  function ExternalModule(request, type, userRequest) {\n    var _this2;\n\n    _classCallCheck(this, ExternalModule);\n\n    _this2 = _super2.call(this, \"javascript/dynamic\", null); // Info from Factory\n\n    /** @type {string | string[] | Record<string, string | string[]>} */\n\n    _this2.request = request;\n    /** @type {string} */\n\n    _this2.externalType = type;\n    /** @type {string} */\n\n    _this2.userRequest = userRequest;\n    return _this2;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  _createClass(ExternalModule, [{\n    key: \"getSourceTypes\",\n    value: function getSourceTypes() {\n      return this.externalType === \"css-import\" ? CSS_TYPES : TYPES;\n    }\n    /**\n     * @param {LibIdentOptions} options options\n     * @returns {string | null} an identifier for library inclusion\n     */\n\n  }, {\n    key: \"libIdent\",\n    value: function libIdent(options) {\n      return this.userRequest;\n    }\n    /**\n     * @param {Chunk} chunk the chunk which condition should be checked\n     * @param {Compilation} compilation the compilation\n     * @returns {boolean} true, if the chunk is ok for the module\n     */\n\n  }, {\n    key: \"chunkCondition\",\n    value: function chunkCondition(chunk, _ref3) {\n      var chunkGraph = _ref3.chunkGraph;\n      return this.externalType === \"css-import\" ? true : chunkGraph.getNumberOfEntryModules(chunk) > 0;\n    }\n    /**\n     * @returns {string} a unique identifier of the module\n     */\n\n  }, {\n    key: \"identifier\",\n    value: function identifier() {\n      return \"external \".concat(this.externalType, \" \").concat(JSON.stringify(this.request));\n    }\n    /**\n     * @param {RequestShortener} requestShortener the request shortener\n     * @returns {string} a user readable identifier of the module\n     */\n\n  }, {\n    key: \"readableIdentifier\",\n    value: function readableIdentifier(requestShortener) {\n      return \"external \" + JSON.stringify(this.request);\n    }\n    /**\n     * @param {NeedBuildContext} context context info\n     * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n     * @returns {void}\n     */\n\n  }, {\n    key: \"needBuild\",\n    value: function needBuild(context, callback) {\n      return callback(null, !this.buildMeta);\n    }\n    /**\n     * @param {WebpackOptions} options webpack options\n     * @param {Compilation} compilation the compilation\n     * @param {ResolverWithOptions} resolver the resolver\n     * @param {InputFileSystem} fs the file system\n     * @param {function(WebpackError=): void} callback callback function\n     * @returns {void}\n     */\n\n  }, {\n    key: \"build\",\n    value: function build(options, compilation, resolver, fs, callback) {\n      this.buildMeta = {\n        async: false,\n        exportsType: undefined\n      };\n      this.buildInfo = {\n        strict: true,\n        topLevelDeclarations: new Set(),\n        module: compilation.outputOptions.module\n      };\n\n      var _this$_getRequestAndE = this._getRequestAndExternalType(),\n          request = _this$_getRequestAndE.request,\n          externalType = _this$_getRequestAndE.externalType;\n\n      this.buildMeta.exportsType = \"dynamic\";\n      var canMangle = false;\n      this.clearDependenciesAndBlocks();\n\n      switch (externalType) {\n        case \"this\":\n          this.buildInfo.strict = false;\n          break;\n\n        case \"system\":\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = true;\n          }\n\n          break;\n\n        case \"module\":\n          if (this.buildInfo.module) {\n            if (!Array.isArray(request) || request.length === 1) {\n              this.buildMeta.exportsType = \"namespace\";\n              canMangle = true;\n            }\n          } else {\n            this.buildMeta.async = true;\n\n            if (!Array.isArray(request) || request.length === 1) {\n              this.buildMeta.exportsType = \"namespace\";\n              canMangle = false;\n            }\n          }\n\n          break;\n\n        case \"script\":\n        case \"promise\":\n          this.buildMeta.async = true;\n          break;\n\n        case \"import\":\n          this.buildMeta.async = true;\n\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = false;\n          }\n\n          break;\n      }\n\n      this.addDependency(new StaticExportsDependency(true, canMangle));\n      callback();\n    }\n  }, {\n    key: \"restoreFromUnsafeCache\",\n    value: function restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n      this._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n    }\n    /**\n     * @param {ConcatenationBailoutReasonContext} context context\n     * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n     */\n\n  }, {\n    key: \"getConcatenationBailoutReason\",\n    value: function getConcatenationBailoutReason(_ref4) {\n      var moduleGraph = _ref4.moduleGraph;\n\n      switch (this.externalType) {\n        case \"amd\":\n        case \"amd-require\":\n        case \"umd\":\n        case \"umd2\":\n        case \"system\":\n        case \"jsonp\":\n          return \"\".concat(this.externalType, \" externals can't be concatenated\");\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_getRequestAndExternalType\",\n    value: function _getRequestAndExternalType() {\n      var request = this.request,\n          externalType = this.externalType;\n      if (typeof request === \"object\" && !Array.isArray(request)) request = request[externalType];\n      return {\n        request: request,\n        externalType: externalType\n      };\n    }\n  }, {\n    key: \"_getSourceData\",\n    value: function _getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime) {\n      switch (externalType) {\n        case \"this\":\n        case \"window\":\n        case \"self\":\n          return getSourceForGlobalVariableExternal(request, this.externalType);\n\n        case \"global\":\n          return getSourceForGlobalVariableExternal(request, runtimeTemplate.globalObject);\n\n        case \"commonjs\":\n        case \"commonjs2\":\n        case \"commonjs-module\":\n        case \"commonjs-static\":\n          return getSourceForCommonJsExternal(request);\n\n        case \"node-commonjs\":\n          return this.buildInfo.module ? getSourceForCommonJsExternalInNodeModule(request) : getSourceForCommonJsExternal(request);\n\n        case \"amd\":\n        case \"amd-require\":\n        case \"umd\":\n        case \"umd2\":\n        case \"system\":\n        case \"jsonp\":\n          {\n            var id = chunkGraph.getModuleId(this);\n            return getSourceForAmdOrUmdExternal(id !== null ? id : this.identifier(), this.isOptional(moduleGraph), request, runtimeTemplate);\n          }\n\n        case \"import\":\n          return getSourceForImportExternal(request, runtimeTemplate);\n\n        case \"script\":\n          return getSourceForScriptExternal(request, runtimeTemplate);\n\n        case \"module\":\n          {\n            if (!this.buildInfo.module) {\n              if (!runtimeTemplate.supportsDynamicImport()) {\n                throw new Error(\"The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script\" + (runtimeTemplate.supportsEcmaScriptModuleSyntax() ? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\" : \"\"));\n              }\n\n              return getSourceForImportExternal(request, runtimeTemplate);\n            }\n\n            if (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n              throw new Error(\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\");\n            }\n\n            return getSourceForModuleExternal(request, moduleGraph.getExportsInfo(this), runtime, runtimeTemplate.outputOptions.hashFunction);\n          }\n\n        case \"var\":\n        case \"promise\":\n        case \"const\":\n        case \"let\":\n        case \"assign\":\n        default:\n          return getSourceForDefaultCase(this.isOptional(moduleGraph), request, runtimeTemplate);\n      }\n    }\n    /**\n     * @param {CodeGenerationContext} context context for code generation\n     * @returns {CodeGenerationResult} result\n     */\n\n  }, {\n    key: \"codeGeneration\",\n    value: function codeGeneration(_ref5) {\n      var runtimeTemplate = _ref5.runtimeTemplate,\n          moduleGraph = _ref5.moduleGraph,\n          chunkGraph = _ref5.chunkGraph,\n          runtime = _ref5.runtime,\n          concatenationScope = _ref5.concatenationScope;\n\n      var _this$_getRequestAndE2 = this._getRequestAndExternalType(),\n          request = _this$_getRequestAndE2.request,\n          externalType = _this$_getRequestAndE2.externalType;\n\n      switch (externalType) {\n        case \"asset\":\n          {\n            var sources = new Map();\n            sources.set(\"javascript\", new RawSource(\"module.exports = \".concat(JSON.stringify(request), \";\")));\n            var data = new Map();\n            data.set(\"url\", request);\n            return {\n              sources: sources,\n              runtimeRequirements: RUNTIME_REQUIREMENTS,\n              data: data\n            };\n          }\n\n        case \"css-import\":\n          {\n            var _sources = new Map();\n\n            _sources.set(\"css-import\", new RawSource(\"@import url(\".concat(JSON.stringify(request), \");\")));\n\n            return {\n              sources: _sources,\n              runtimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n            };\n          }\n\n        default:\n          {\n            var sourceData = this._getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime);\n\n            var sourceString = sourceData.expression;\n            if (sourceData.iife) sourceString = \"(function() { return \".concat(sourceString, \"; }())\");\n\n            if (concatenationScope) {\n              sourceString = \"\".concat(runtimeTemplate.supportsConst() ? \"const\" : \"var\", \" \").concat(ConcatenationScope.NAMESPACE_OBJECT_EXPORT, \" = \").concat(sourceString, \";\");\n              concatenationScope.registerNamespaceExport(ConcatenationScope.NAMESPACE_OBJECT_EXPORT);\n            } else {\n              sourceString = \"module.exports = \".concat(sourceString, \";\");\n            }\n\n            if (sourceData.init) sourceString = \"\".concat(sourceData.init, \"\\n\").concat(sourceString);\n            var _data = undefined;\n\n            if (sourceData.chunkInitFragments) {\n              _data = new Map();\n\n              _data.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n            }\n\n            var _sources2 = new Map();\n\n            if (this.useSourceMap || this.useSimpleSourceMap) {\n              _sources2.set(\"javascript\", new OriginalSource(sourceString, this.identifier()));\n            } else {\n              _sources2.set(\"javascript\", new RawSource(sourceString));\n            }\n\n            var runtimeRequirements = sourceData.runtimeRequirements;\n\n            if (!concatenationScope) {\n              if (!runtimeRequirements) {\n                runtimeRequirements = RUNTIME_REQUIREMENTS;\n              } else {\n                var set = new Set(runtimeRequirements);\n                set.add(RuntimeGlobals.module);\n                runtimeRequirements = set;\n              }\n            }\n\n            return {\n              sources: _sources2,\n              runtimeRequirements: runtimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n              data: _data\n            };\n          }\n      }\n    }\n    /**\n     * @param {string=} type the source type for which the size should be estimated\n     * @returns {number} the estimated size of the module (must be non-zero)\n     */\n\n  }, {\n    key: \"size\",\n    value: function size(type) {\n      return 42;\n    }\n    /**\n     * @param {Hash} hash the hash used to track dependencies\n     * @param {UpdateHashContext} context context\n     * @returns {void}\n     */\n\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, context) {\n      var chunkGraph = context.chunkGraph;\n      hash.update(\"\".concat(this.externalType).concat(JSON.stringify(this.request)).concat(this.isOptional(chunkGraph.moduleGraph)));\n\n      _get(_getPrototypeOf(ExternalModule.prototype), \"updateHash\", this).call(this, hash, context);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.request);\n      write(this.externalType);\n      write(this.userRequest);\n\n      _get(_getPrototypeOf(ExternalModule.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.request = read();\n      this.externalType = read();\n      this.userRequest = read();\n\n      _get(_getPrototypeOf(ExternalModule.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n\n  return ExternalModule;\n}(Module);\n\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\nmodule.exports = ExternalModule;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/ExternalModule.js"],"names":["require","OriginalSource","RawSource","ConcatenationScope","UsageState","InitFragment","Module","RuntimeGlobals","Template","StaticExportsDependency","createHash","extractUrlAndGlobal","makeSerializable","propertyAccess","register","TYPES","Set","CSS_TYPES","RUNTIME_REQUIREMENTS","module","RUNTIME_REQUIREMENTS_FOR_SCRIPT","loadScript","RUNTIME_REQUIREMENTS_FOR_MODULE","definePropertyGetters","EMPTY_RUNTIME_REQUIREMENTS","getSourceForGlobalVariableExternal","variableName","type","Array","isArray","objectLookup","map","r","JSON","stringify","join","iife","expression","getSourceForCommonJsExternal","moduleAndSpecifiers","moduleName","getSourceForCommonJsExternalInNodeModule","chunkInitFragments","STAGE_HARMONY_IMPORTS","getSourceForImportExternal","runtimeTemplate","importName","outputOptions","importFunctionName","supportsDynamicImport","Error","length","returningFunction","ModuleExternalInitFragment","request","ident","hashFunction","undefined","toIdentifier","update","digest","slice","identifier","_ident","_identifier","_request","serialize","obj","write","deserialize","read","generateModuleRemapping","input","exportsInfo","runtime","otherExportsInfo","getUsed","Unused","properties","orderedExports","exportInfo","used","getUsedName","name","nestedInfo","getNestedExportsInfo","nestedExpr","push","getSourceForModuleExternal","initFragment","baseAccess","getNamespaceIdentifier","moduleRemapping","init","runtimeRequirements","getSourceForScriptExternal","urlAndGlobal","url","globalName","basicFunction","checkExternalVariable","throwMissingModuleErrorBlock","getSourceForAmdOrUmdExternal","id","optional","externalVariable","getSourceForDefaultCase","ExternalModule","userRequest","externalType","options","chunk","chunkGraph","getNumberOfEntryModules","requestShortener","context","callback","buildMeta","compilation","resolver","fs","async","exportsType","buildInfo","strict","topLevelDeclarations","_getRequestAndExternalType","canMangle","clearDependenciesAndBlocks","addDependency","unsafeCacheData","normalModuleFactory","_restoreFromUnsafeCache","moduleGraph","globalObject","getModuleId","isOptional","supportsEcmaScriptModuleSyntax","getExportsInfo","concatenationScope","sources","Map","set","data","sourceData","_getSourceData","sourceString","supportsConst","NAMESPACE_OBJECT_EXPORT","registerNamespaceExport","useSourceMap","useSimpleSourceMap","add","hash","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"./ConcatenationScope\");\nconst { UsageState } = require(\"./ExportsInfo\");\nconst InitFragment = require(\"./InitFragment\");\nconst Module = require(\"./Module\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\nconst createHash = require(\"./util/createHash\");\nconst extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst { register } = require(\"./util/serialization\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceData\n * @property {boolean=} iife\n * @property {string=} init\n * @property {string} expression\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\n * @property {ReadonlySet<string>=} runtimeRequirements\n */\n\nconst TYPES = new Set([\"javascript\"]);\nconst CSS_TYPES = new Set([\"css-import\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nconst RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nconst RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([\n\tRuntimeGlobals.definePropertyGetters\n]);\nconst EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n\n/**\n * @param {string|string[]} variableName the variable name or path\n * @param {string} type the module system\n * @returns {SourceData} the generated source\n */\nconst getSourceForGlobalVariableExternal = (variableName, type) => {\n\tif (!Array.isArray(variableName)) {\n\t\t// make it an array as the look up works the same basically\n\t\tvariableName = [variableName];\n\t}\n\n\t// needed for e.g. window[\"some\"][\"thing\"]\n\tconst objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\n\treturn {\n\t\tiife: type === \"this\",\n\t\texpression: `${type}${objectLookup}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternal = moduleAndSpecifiers => {\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `require(${JSON.stringify(moduleAndSpecifiers)})`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `require(${JSON.stringify(moduleName)})${propertyAccess(\n\t\t\tmoduleAndSpecifiers,\n\t\t\t1\n\t\t)}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternalInNodeModule = moduleAndSpecifiers => {\n\tconst chunkInitFragments = [\n\t\tnew InitFragment(\n\t\t\t'import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"module\";\\n',\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t0,\n\t\t\t\"external module node-commonjs\"\n\t\t)\n\t];\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `__WEBPACK_EXTERNAL_createRequire(import.meta.url)(${JSON.stringify(\n\t\t\t\tmoduleAndSpecifiers\n\t\t\t)})`,\n\t\t\tchunkInitFragments\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `__WEBPACK_EXTERNAL_createRequire(import.meta.url)(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)})${propertyAccess(moduleAndSpecifiers, 1)}`,\n\t\tchunkInitFragments\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForImportExternal = (moduleAndSpecifiers, runtimeTemplate) => {\n\tconst importName = runtimeTemplate.outputOptions.importFunctionName;\n\tif (!runtimeTemplate.supportsDynamicImport() && importName === \"import\") {\n\t\tthrow new Error(\n\t\t\t\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\"\n\t\t);\n\t}\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `${importName}(${JSON.stringify(moduleAndSpecifiers)});`\n\t\t};\n\t}\n\tif (moduleAndSpecifiers.length === 1) {\n\t\treturn {\n\t\t\texpression: `${importName}(${JSON.stringify(moduleAndSpecifiers[0])});`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `${importName}(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)}).then(${runtimeTemplate.returningFunction(\n\t\t\t`module${propertyAccess(moduleAndSpecifiers, 1)}`,\n\t\t\t\"module\"\n\t\t)});`\n\t};\n};\n\nclass ModuleExternalInitFragment extends InitFragment {\n\t/**\n\t * @param {string} request import source\n\t * @param {string=} ident recomputed ident\n\t * @param {string | HashConstructor=} hashFunction the hash function to use\n\t */\n\tconstructor(request, ident, hashFunction = \"md4\") {\n\t\tif (ident === undefined) {\n\t\t\tident = Template.toIdentifier(request);\n\t\t\tif (ident !== request) {\n\t\t\t\tident += `_${createHash(hashFunction)\n\t\t\t\t\t.update(request)\n\t\t\t\t\t.digest(\"hex\")\n\t\t\t\t\t.slice(0, 8)}`;\n\t\t\t}\n\t\t}\n\t\tconst identifier = `__WEBPACK_EXTERNAL_MODULE_${ident}__`;\n\t\tsuper(\n\t\t\t`import * as ${identifier} from ${JSON.stringify(request)};\\n`,\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t0,\n\t\t\t`external module import ${ident}`\n\t\t);\n\t\tthis._ident = ident;\n\t\tthis._identifier = identifier;\n\t\tthis._request = request;\n\t}\n\n\tgetNamespaceIdentifier() {\n\t\treturn this._identifier;\n\t}\n}\n\nregister(\n\tModuleExternalInitFragment,\n\t\"webpack/lib/ExternalModule\",\n\t\"ModuleExternalInitFragment\",\n\t{\n\t\tserialize(obj, { write }) {\n\t\t\twrite(obj._request);\n\t\t\twrite(obj._ident);\n\t\t},\n\t\tdeserialize({ read }) {\n\t\t\treturn new ModuleExternalInitFragment(read(), read());\n\t\t}\n\t}\n);\n\nconst generateModuleRemapping = (input, exportsInfo, runtime) => {\n\tif (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n\t\tconst properties = [];\n\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\tconst used = exportInfo.getUsedName(exportInfo.name, runtime);\n\t\t\tif (!used) continue;\n\t\t\tconst nestedInfo = exportInfo.getNestedExportsInfo();\n\t\t\tif (nestedInfo) {\n\t\t\t\tconst nestedExpr = generateModuleRemapping(\n\t\t\t\t\t`${input}${propertyAccess([exportInfo.name])}`,\n\t\t\t\t\tnestedInfo\n\t\t\t\t);\n\t\t\t\tif (nestedExpr) {\n\t\t\t\t\tproperties.push(`[${JSON.stringify(used)}]: y(${nestedExpr})`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tproperties.push(\n\t\t\t\t`[${JSON.stringify(used)}]: () => ${input}${propertyAccess([\n\t\t\t\t\texportInfo.name\n\t\t\t\t])}`\n\t\t\t);\n\t\t}\n\t\treturn `x({ ${properties.join(\", \")} })`;\n\t}\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {ExportsInfo} exportsInfo exports info of this module\n * @param {RuntimeSpec} runtime the runtime\n * @param {string | HashConstructor=} hashFunction the hash function to use\n * @returns {SourceData} the generated source\n */\nconst getSourceForModuleExternal = (\n\tmoduleAndSpecifiers,\n\texportsInfo,\n\truntime,\n\thashFunction\n) => {\n\tif (!Array.isArray(moduleAndSpecifiers))\n\t\tmoduleAndSpecifiers = [moduleAndSpecifiers];\n\tconst initFragment = new ModuleExternalInitFragment(\n\t\tmoduleAndSpecifiers[0],\n\t\tundefined,\n\t\thashFunction\n\t);\n\tconst baseAccess = `${initFragment.getNamespaceIdentifier()}${propertyAccess(\n\t\tmoduleAndSpecifiers,\n\t\t1\n\t)}`;\n\tconst moduleRemapping = generateModuleRemapping(\n\t\tbaseAccess,\n\t\texportsInfo,\n\t\truntime\n\t);\n\tlet expression = moduleRemapping || baseAccess;\n\treturn {\n\t\texpression,\n\t\tinit: `var x = y => { var x = {}; ${RuntimeGlobals.definePropertyGetters}(x, y); return x; }\\nvar y = x => () => x`,\n\t\truntimeRequirements: moduleRemapping\n\t\t\t? RUNTIME_REQUIREMENTS_FOR_MODULE\n\t\t\t: undefined,\n\t\tchunkInitFragments: [initFragment]\n\t};\n};\n\n/**\n * @param {string|string[]} urlAndGlobal the script request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForScriptExternal = (urlAndGlobal, runtimeTemplate) => {\n\tif (typeof urlAndGlobal === \"string\") {\n\t\turlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n\t}\n\tconst url = urlAndGlobal[0];\n\tconst globalName = urlAndGlobal[1];\n\treturn {\n\t\tinit: \"var __webpack_error__ = new Error();\",\n\t\texpression: `new Promise(${runtimeTemplate.basicFunction(\n\t\t\t\"resolve, reject\",\n\t\t\t[\n\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\n\t\t\t\t`${RuntimeGlobals.loadScript}(${JSON.stringify(\n\t\t\t\t\turl\n\t\t\t\t)}, ${runtimeTemplate.basicFunction(\"event\", [\n\t\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\n\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\"__webpack_error__.name = 'ScriptExternalLoadError';\",\n\t\t\t\t\t\"__webpack_error__.type = errorType;\",\n\t\t\t\t\t\"__webpack_error__.request = realSrc;\",\n\t\t\t\t\t\"reject(__webpack_error__);\"\n\t\t\t\t])}, ${JSON.stringify(globalName)});`\n\t\t\t]\n\t\t)}).then(${runtimeTemplate.returningFunction(\n\t\t\t`${globalName}${propertyAccess(urlAndGlobal, 2)}`\n\t\t)})`,\n\t\truntimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n\t};\n};\n\n/**\n * @param {string} variableName the variable name to check\n * @param {string} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {string} the generated source\n */\nconst checkExternalVariable = (variableName, request, runtimeTemplate) => {\n\treturn `if(typeof ${variableName} === 'undefined') { ${runtimeTemplate.throwMissingModuleErrorBlock(\n\t\t{ request }\n\t)} }\\n`;\n};\n\n/**\n * @param {string|number} id the module id\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForAmdOrUmdExternal = (\n\tid,\n\toptional,\n\trequest,\n\truntimeTemplate\n) => {\n\tconst externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\n\t\t`${id}`\n\t)}__`;\n\treturn {\n\t\tinit: optional\n\t\t\t? checkExternalVariable(\n\t\t\t\t\texternalVariable,\n\t\t\t\t\tArray.isArray(request) ? request.join(\".\") : request,\n\t\t\t\t\truntimeTemplate\n\t\t\t  )\n\t\t\t: undefined,\n\t\texpression: externalVariable\n\t};\n};\n\n/**\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForDefaultCase = (optional, request, runtimeTemplate) => {\n\tif (!Array.isArray(request)) {\n\t\t// make it an array as the look up works the same basically\n\t\trequest = [request];\n\t}\n\n\tconst variableName = request[0];\n\tconst objectLookup = propertyAccess(request, 1);\n\treturn {\n\t\tinit: optional\n\t\t\t? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate)\n\t\t\t: undefined,\n\t\texpression: `${variableName}${objectLookup}`\n\t};\n};\n\nclass ExternalModule extends Module {\n\tconstructor(request, type, userRequest) {\n\t\tsuper(\"javascript/dynamic\", null);\n\n\t\t// Info from Factory\n\t\t/** @type {string | string[] | Record<string, string | string[]>} */\n\t\tthis.request = request;\n\t\t/** @type {string} */\n\t\tthis.externalType = type;\n\t\t/** @type {string} */\n\t\tthis.userRequest = userRequest;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn this.externalType === \"css-import\" ? CSS_TYPES : TYPES;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn this.userRequest;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk which condition should be checked\n\t * @param {Compilation} compilation the compilation\n\t * @returns {boolean} true, if the chunk is ok for the module\n\t */\n\tchunkCondition(chunk, { chunkGraph }) {\n\t\treturn this.externalType === \"css-import\"\n\t\t\t? true\n\t\t\t: chunkGraph.getNumberOfEntryModules(chunk) > 0;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `external ${this.externalType} ${JSON.stringify(this.request)}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn \"external \" + JSON.stringify(this.request);\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, !this.buildMeta);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {\n\t\t\tasync: false,\n\t\t\texportsType: undefined\n\t\t};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true,\n\t\t\ttopLevelDeclarations: new Set(),\n\t\t\tmodule: compilation.outputOptions.module\n\t\t};\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\n\t\tthis.buildMeta.exportsType = \"dynamic\";\n\t\tlet canMangle = false;\n\t\tthis.clearDependenciesAndBlocks();\n\t\tswitch (externalType) {\n\t\t\tcase \"this\":\n\t\t\t\tthis.buildInfo.strict = false;\n\t\t\t\tbreak;\n\t\t\tcase \"system\":\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\tcanMangle = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"module\":\n\t\t\t\tif (this.buildInfo.module) {\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\t\tcanMangle = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\t\tcanMangle = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"script\":\n\t\t\tcase \"promise\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tbreak;\n\t\t\tcase \"import\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\tcanMangle = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.addDependency(new StaticExportsDependency(true, canMangle));\n\t\tcallback();\n\t}\n\n\trestoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tthis._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t}\n\n\t/**\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason({ moduleGraph }) {\n\t\tswitch (this.externalType) {\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\tcase \"jsonp\":\n\t\t\t\treturn `${this.externalType} externals can't be concatenated`;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t_getRequestAndExternalType() {\n\t\tlet { request, externalType } = this;\n\t\tif (typeof request === \"object\" && !Array.isArray(request))\n\t\t\trequest = request[externalType];\n\t\treturn { request, externalType };\n\t}\n\n\t_getSourceData(\n\t\trequest,\n\t\texternalType,\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime\n\t) {\n\t\tswitch (externalType) {\n\t\t\tcase \"this\":\n\t\t\tcase \"window\":\n\t\t\tcase \"self\":\n\t\t\t\treturn getSourceForGlobalVariableExternal(request, this.externalType);\n\t\t\tcase \"global\":\n\t\t\t\treturn getSourceForGlobalVariableExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate.globalObject\n\t\t\t\t);\n\t\t\tcase \"commonjs\":\n\t\t\tcase \"commonjs2\":\n\t\t\tcase \"commonjs-module\":\n\t\t\tcase \"commonjs-static\":\n\t\t\t\treturn getSourceForCommonJsExternal(request);\n\t\t\tcase \"node-commonjs\":\n\t\t\t\treturn this.buildInfo.module\n\t\t\t\t\t? getSourceForCommonJsExternalInNodeModule(request)\n\t\t\t\t\t: getSourceForCommonJsExternal(request);\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\tcase \"jsonp\": {\n\t\t\t\tconst id = chunkGraph.getModuleId(this);\n\t\t\t\treturn getSourceForAmdOrUmdExternal(\n\t\t\t\t\tid !== null ? id : this.identifier(),\n\t\t\t\t\tthis.isOptional(moduleGraph),\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"import\":\n\t\t\t\treturn getSourceForImportExternal(request, runtimeTemplate);\n\t\t\tcase \"script\":\n\t\t\t\treturn getSourceForScriptExternal(request, runtimeTemplate);\n\t\t\tcase \"module\": {\n\t\t\t\tif (!this.buildInfo.module) {\n\t\t\t\t\tif (!runtimeTemplate.supportsDynamicImport()) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script\" +\n\t\t\t\t\t\t\t\t(runtimeTemplate.supportsEcmaScriptModuleSyntax()\n\t\t\t\t\t\t\t\t\t? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\"\n\t\t\t\t\t\t\t\t\t: \"\")\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn getSourceForImportExternal(request, runtimeTemplate);\n\t\t\t\t}\n\t\t\t\tif (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn getSourceForModuleExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\tmoduleGraph.getExportsInfo(this),\n\t\t\t\t\truntime,\n\t\t\t\t\truntimeTemplate.outputOptions.hashFunction\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"var\":\n\t\t\tcase \"promise\":\n\t\t\tcase \"const\":\n\t\t\tcase \"let\":\n\t\t\tcase \"assign\":\n\t\t\tdefault:\n\t\t\t\treturn getSourceForDefaultCase(\n\t\t\t\t\tthis.isOptional(moduleGraph),\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime,\n\t\tconcatenationScope\n\t}) {\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\n\t\tswitch (externalType) {\n\t\t\tcase \"asset\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tsources.set(\n\t\t\t\t\t\"javascript\",\n\t\t\t\t\tnew RawSource(`module.exports = ${JSON.stringify(request)};`)\n\t\t\t\t);\n\t\t\t\tconst data = new Map();\n\t\t\t\tdata.set(\"url\", request);\n\t\t\t\treturn { sources, runtimeRequirements: RUNTIME_REQUIREMENTS, data };\n\t\t\t}\n\t\t\tcase \"css-import\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tsources.set(\n\t\t\t\t\t\"css-import\",\n\t\t\t\t\tnew RawSource(`@import url(${JSON.stringify(request)});`)\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tsources,\n\t\t\t\t\truntimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n\t\t\t\t};\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst sourceData = this._getSourceData(\n\t\t\t\t\trequest,\n\t\t\t\t\texternalType,\n\t\t\t\t\truntimeTemplate,\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime\n\t\t\t\t);\n\n\t\t\t\tlet sourceString = sourceData.expression;\n\t\t\t\tif (sourceData.iife)\n\t\t\t\t\tsourceString = `(function() { return ${sourceString}; }())`;\n\t\t\t\tif (concatenationScope) {\n\t\t\t\t\tsourceString = `${\n\t\t\t\t\t\truntimeTemplate.supportsConst() ? \"const\" : \"var\"\n\t\t\t\t\t} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${sourceString};`;\n\t\t\t\t\tconcatenationScope.registerNamespaceExport(\n\t\t\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsourceString = `module.exports = ${sourceString};`;\n\t\t\t\t}\n\t\t\t\tif (sourceData.init)\n\t\t\t\t\tsourceString = `${sourceData.init}\\n${sourceString}`;\n\n\t\t\t\tlet data = undefined;\n\t\t\t\tif (sourceData.chunkInitFragments) {\n\t\t\t\t\tdata = new Map();\n\t\t\t\t\tdata.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n\t\t\t\t}\n\n\t\t\t\tconst sources = new Map();\n\t\t\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\tnew OriginalSource(sourceString, this.identifier())\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsources.set(\"javascript\", new RawSource(sourceString));\n\t\t\t\t}\n\n\t\t\t\tlet runtimeRequirements = sourceData.runtimeRequirements;\n\t\t\t\tif (!concatenationScope) {\n\t\t\t\t\tif (!runtimeRequirements) {\n\t\t\t\t\t\truntimeRequirements = RUNTIME_REQUIREMENTS;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst set = new Set(runtimeRequirements);\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\n\t\t\t\t\t\truntimeRequirements = set;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsources,\n\t\t\t\t\truntimeRequirements:\n\t\t\t\t\t\truntimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n\t\t\t\t\tdata\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tconst { chunkGraph } = context;\n\t\thash.update(\n\t\t\t`${this.externalType}${JSON.stringify(this.request)}${this.isOptional(\n\t\t\t\tchunkGraph.moduleGraph\n\t\t\t)}`\n\t\t);\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.request);\n\t\twrite(this.externalType);\n\t\twrite(this.userRequest);\n\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.request = read();\n\t\tthis.externalType = read();\n\t\tthis.userRequest = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\n\nmodule.exports = ExternalModule;\n"]},"metadata":{},"sourceType":"script"}