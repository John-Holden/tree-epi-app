{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _slicedToArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nvar JavascriptModulesPlugin = require(\"../javascript/JavascriptModulesPlugin\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n\nvar COMMON_LIBRARY_NAME_MESSAGE = \"Common configuration options that specific library names are 'output.library[.name]', 'entry.xyz.library[.name]', 'ModuleFederationPlugin.name' and 'ModuleFederationPlugin.library[.name]'.\";\n/**\n * @template T\n * @typedef {Object} LibraryContext\n * @property {Compilation} compilation\n * @property {ChunkGraph} chunkGraph\n * @property {T} options\n */\n\n/**\n * @template T\n */\n\nvar AbstractLibraryPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {Object} options options\n   * @param {string} options.pluginName name of the plugin\n   * @param {LibraryType} options.type used library type\n   */\n  function AbstractLibraryPlugin(_ref) {\n    var pluginName = _ref.pluginName,\n        type = _ref.type;\n\n    _classCallCheck(this, AbstractLibraryPlugin);\n\n    this._pluginName = pluginName;\n    this._type = type;\n    this._parseCache = new WeakMap();\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(AbstractLibraryPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      var _pluginName = this._pluginName;\n      compiler.hooks.thisCompilation.tap(_pluginName, function (compilation) {\n        compilation.hooks.finishModules.tap({\n          name: _pluginName,\n          stage: 10\n        }, function () {\n          var _iterator = _createForOfIteratorHelper(compilation.entries),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                  name = _step$value[0],\n                  _step$value$ = _step$value[1],\n                  deps = _step$value$.dependencies,\n                  library = _step$value$.options.library;\n\n              var options = _this._parseOptionsCached(library !== undefined ? library : compilation.outputOptions.library);\n\n              if (options !== false) {\n                var dep = deps[deps.length - 1];\n\n                if (dep) {\n                  var _module = compilation.moduleGraph.getModule(dep);\n\n                  if (_module) {\n                    _this.finishEntryModule(_module, name, {\n                      options: options,\n                      compilation: compilation,\n                      chunkGraph: compilation.chunkGraph\n                    });\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n\n        var getOptionsForChunk = function getOptionsForChunk(chunk) {\n          if (compilation.chunkGraph.getNumberOfEntryModules(chunk) === 0) return false;\n          var options = chunk.getEntryOptions();\n          var library = options && options.library;\n          return _this._parseOptionsCached(library !== undefined ? library : compilation.outputOptions.library);\n        };\n\n        if (_this.render !== AbstractLibraryPlugin.prototype.render || _this.runtimeRequirements !== AbstractLibraryPlugin.prototype.runtimeRequirements) {\n          compilation.hooks.additionalChunkRuntimeRequirements.tap(_pluginName, function (chunk, set, _ref2) {\n            var chunkGraph = _ref2.chunkGraph;\n            var options = getOptionsForChunk(chunk);\n\n            if (options !== false) {\n              _this.runtimeRequirements(chunk, set, {\n                options: options,\n                compilation: compilation,\n                chunkGraph: chunkGraph\n              });\n            }\n          });\n        }\n\n        var hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n\n        if (_this.render !== AbstractLibraryPlugin.prototype.render) {\n          hooks.render.tap(_pluginName, function (source, renderContext) {\n            var options = getOptionsForChunk(renderContext.chunk);\n            if (options === false) return source;\n            return _this.render(source, renderContext, {\n              options: options,\n              compilation: compilation,\n              chunkGraph: compilation.chunkGraph\n            });\n          });\n        }\n\n        if (_this.embedInRuntimeBailout !== AbstractLibraryPlugin.prototype.embedInRuntimeBailout) {\n          hooks.embedInRuntimeBailout.tap(_pluginName, function (module, renderContext) {\n            var options = getOptionsForChunk(renderContext.chunk);\n            if (options === false) return;\n            return _this.embedInRuntimeBailout(module, renderContext, {\n              options: options,\n              compilation: compilation,\n              chunkGraph: compilation.chunkGraph\n            });\n          });\n        }\n\n        if (_this.strictRuntimeBailout !== AbstractLibraryPlugin.prototype.strictRuntimeBailout) {\n          hooks.strictRuntimeBailout.tap(_pluginName, function (renderContext) {\n            var options = getOptionsForChunk(renderContext.chunk);\n            if (options === false) return;\n            return _this.strictRuntimeBailout(renderContext, {\n              options: options,\n              compilation: compilation,\n              chunkGraph: compilation.chunkGraph\n            });\n          });\n        }\n\n        if (_this.renderStartup !== AbstractLibraryPlugin.prototype.renderStartup) {\n          hooks.renderStartup.tap(_pluginName, function (source, module, renderContext) {\n            var options = getOptionsForChunk(renderContext.chunk);\n            if (options === false) return source;\n            return _this.renderStartup(source, module, renderContext, {\n              options: options,\n              compilation: compilation,\n              chunkGraph: compilation.chunkGraph\n            });\n          });\n        }\n\n        hooks.chunkHash.tap(_pluginName, function (chunk, hash, context) {\n          var options = getOptionsForChunk(chunk);\n          if (options === false) return;\n\n          _this.chunkHash(chunk, hash, context, {\n            options: options,\n            compilation: compilation,\n            chunkGraph: compilation.chunkGraph\n          });\n        });\n      });\n    }\n    /**\n     * @param {LibraryOptions=} library normalized library option\n     * @returns {T | false} preprocess as needed by overriding\n     */\n\n  }, {\n    key: \"_parseOptionsCached\",\n    value: function _parseOptionsCached(library) {\n      if (!library) return false;\n      if (library.type !== this._type) return false;\n\n      var cacheEntry = this._parseCache.get(library);\n\n      if (cacheEntry !== undefined) return cacheEntry;\n      var result = this.parseOptions(library);\n\n      this._parseCache.set(library, result);\n\n      return result;\n    }\n    /* istanbul ignore next */\n\n    /**\n     * @abstract\n     * @param {LibraryOptions} library normalized library option\n     * @returns {T | false} preprocess as needed by overriding\n     */\n\n  }, {\n    key: \"parseOptions\",\n    value: function parseOptions(library) {\n      var AbstractMethodError = require(\"../AbstractMethodError\");\n\n      throw new AbstractMethodError();\n    }\n    /**\n     * @param {Module} module the exporting entry module\n     * @param {string} entryName the name of the entrypoint\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {void}\n     */\n\n  }, {\n    key: \"finishEntryModule\",\n    value: function finishEntryModule(module, entryName, libraryContext) {}\n    /**\n     * @param {Module} module the exporting entry module\n     * @param {RenderContext} renderContext render context\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {string | undefined} bailout reason\n     */\n\n  }, {\n    key: \"embedInRuntimeBailout\",\n    value: function embedInRuntimeBailout(module, renderContext, libraryContext) {\n      return undefined;\n    }\n    /**\n     * @param {RenderContext} renderContext render context\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {string | undefined} bailout reason\n     */\n\n  }, {\n    key: \"strictRuntimeBailout\",\n    value: function strictRuntimeBailout(renderContext, libraryContext) {\n      return undefined;\n    }\n    /**\n     * @param {Chunk} chunk the chunk\n     * @param {Set<string>} set runtime requirements\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {void}\n     */\n\n  }, {\n    key: \"runtimeRequirements\",\n    value: function runtimeRequirements(chunk, set, libraryContext) {\n      if (this.render !== AbstractLibraryPlugin.prototype.render) set.add(RuntimeGlobals.returnExportsFromRuntime);\n    }\n    /**\n     * @param {Source} source source\n     * @param {RenderContext} renderContext render context\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {Source} source with library export\n     */\n\n  }, {\n    key: \"render\",\n    value: function render(source, renderContext, libraryContext) {\n      return source;\n    }\n    /**\n     * @param {Source} source source\n     * @param {Module} module module\n     * @param {StartupRenderContext} renderContext render context\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {Source} source with library export\n     */\n\n  }, {\n    key: \"renderStartup\",\n    value: function renderStartup(source, module, renderContext, libraryContext) {\n      return source;\n    }\n    /**\n     * @param {Chunk} chunk the chunk\n     * @param {Hash} hash hash\n     * @param {ChunkHashContext} chunkHashContext chunk hash context\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {void}\n     */\n\n  }, {\n    key: \"chunkHash\",\n    value: function chunkHash(chunk, hash, chunkHashContext, libraryContext) {\n      var options = this._parseOptionsCached(libraryContext.compilation.outputOptions.library);\n\n      hash.update(this._pluginName);\n      hash.update(JSON.stringify(options));\n    }\n  }]);\n\n  return AbstractLibraryPlugin;\n}();\n\nAbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE = COMMON_LIBRARY_NAME_MESSAGE;\nmodule.exports = AbstractLibraryPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/library/AbstractLibraryPlugin.js"],"names":["RuntimeGlobals","require","JavascriptModulesPlugin","COMMON_LIBRARY_NAME_MESSAGE","AbstractLibraryPlugin","pluginName","type","_pluginName","_type","_parseCache","WeakMap","compiler","hooks","thisCompilation","tap","compilation","finishModules","name","stage","entries","deps","dependencies","library","options","_parseOptionsCached","undefined","outputOptions","dep","length","module","moduleGraph","getModule","finishEntryModule","chunkGraph","getOptionsForChunk","chunk","getNumberOfEntryModules","getEntryOptions","render","prototype","runtimeRequirements","additionalChunkRuntimeRequirements","set","getCompilationHooks","source","renderContext","embedInRuntimeBailout","strictRuntimeBailout","renderStartup","chunkHash","hash","context","cacheEntry","get","result","parseOptions","AbstractMethodError","entryName","libraryContext","add","returnExportsFromRuntime","chunkHashContext","update","JSON","stringify","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst JavascriptModulesPlugin = require(\"../javascript/JavascriptModulesPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nconst COMMON_LIBRARY_NAME_MESSAGE =\n\t\"Common configuration options that specific library names are 'output.library[.name]', 'entry.xyz.library[.name]', 'ModuleFederationPlugin.name' and 'ModuleFederationPlugin.library[.name]'.\";\n\n/**\n * @template T\n * @typedef {Object} LibraryContext\n * @property {Compilation} compilation\n * @property {ChunkGraph} chunkGraph\n * @property {T} options\n */\n\n/**\n * @template T\n */\nclass AbstractLibraryPlugin {\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.pluginName name of the plugin\n\t * @param {LibraryType} options.type used library type\n\t */\n\tconstructor({ pluginName, type }) {\n\t\tthis._pluginName = pluginName;\n\t\tthis._type = type;\n\t\tthis._parseCache = new WeakMap();\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { _pluginName } = this;\n\t\tcompiler.hooks.thisCompilation.tap(_pluginName, compilation => {\n\t\t\tcompilation.hooks.finishModules.tap(\n\t\t\t\t{ name: _pluginName, stage: 10 },\n\t\t\t\t() => {\n\t\t\t\t\tfor (const [\n\t\t\t\t\t\tname,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdependencies: deps,\n\t\t\t\t\t\t\toptions: { library }\n\t\t\t\t\t\t}\n\t\t\t\t\t] of compilation.entries) {\n\t\t\t\t\t\tconst options = this._parseOptionsCached(\n\t\t\t\t\t\t\tlibrary !== undefined\n\t\t\t\t\t\t\t\t? library\n\t\t\t\t\t\t\t\t: compilation.outputOptions.library\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (options !== false) {\n\t\t\t\t\t\t\tconst dep = deps[deps.length - 1];\n\t\t\t\t\t\t\tif (dep) {\n\t\t\t\t\t\t\t\tconst module = compilation.moduleGraph.getModule(dep);\n\t\t\t\t\t\t\t\tif (module) {\n\t\t\t\t\t\t\t\t\tthis.finishEntryModule(module, name, {\n\t\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst getOptionsForChunk = chunk => {\n\t\t\t\tif (compilation.chunkGraph.getNumberOfEntryModules(chunk) === 0)\n\t\t\t\t\treturn false;\n\t\t\t\tconst options = chunk.getEntryOptions();\n\t\t\t\tconst library = options && options.library;\n\t\t\t\treturn this._parseOptionsCached(\n\t\t\t\t\tlibrary !== undefined ? library : compilation.outputOptions.library\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tthis.render !== AbstractLibraryPlugin.prototype.render ||\n\t\t\t\tthis.runtimeRequirements !==\n\t\t\t\t\tAbstractLibraryPlugin.prototype.runtimeRequirements\n\t\t\t) {\n\t\t\t\tcompilation.hooks.additionalChunkRuntimeRequirements.tap(\n\t\t\t\t\t_pluginName,\n\t\t\t\t\t(chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tconst options = getOptionsForChunk(chunk);\n\t\t\t\t\t\tif (options !== false) {\n\t\t\t\t\t\t\tthis.runtimeRequirements(chunk, set, {\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\t\tchunkGraph\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n\n\t\t\tif (this.render !== AbstractLibraryPlugin.prototype.render) {\n\t\t\t\thooks.render.tap(_pluginName, (source, renderContext) => {\n\t\t\t\t\tconst options = getOptionsForChunk(renderContext.chunk);\n\t\t\t\t\tif (options === false) return source;\n\t\t\t\t\treturn this.render(source, renderContext, {\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.embedInRuntimeBailout !==\n\t\t\t\tAbstractLibraryPlugin.prototype.embedInRuntimeBailout\n\t\t\t) {\n\t\t\t\thooks.embedInRuntimeBailout.tap(\n\t\t\t\t\t_pluginName,\n\t\t\t\t\t(module, renderContext) => {\n\t\t\t\t\t\tconst options = getOptionsForChunk(renderContext.chunk);\n\t\t\t\t\t\tif (options === false) return;\n\t\t\t\t\t\treturn this.embedInRuntimeBailout(module, renderContext, {\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.strictRuntimeBailout !==\n\t\t\t\tAbstractLibraryPlugin.prototype.strictRuntimeBailout\n\t\t\t) {\n\t\t\t\thooks.strictRuntimeBailout.tap(_pluginName, renderContext => {\n\t\t\t\t\tconst options = getOptionsForChunk(renderContext.chunk);\n\t\t\t\t\tif (options === false) return;\n\t\t\t\t\treturn this.strictRuntimeBailout(renderContext, {\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.renderStartup !== AbstractLibraryPlugin.prototype.renderStartup\n\t\t\t) {\n\t\t\t\thooks.renderStartup.tap(\n\t\t\t\t\t_pluginName,\n\t\t\t\t\t(source, module, renderContext) => {\n\t\t\t\t\t\tconst options = getOptionsForChunk(renderContext.chunk);\n\t\t\t\t\t\tif (options === false) return source;\n\t\t\t\t\t\treturn this.renderStartup(source, module, renderContext, {\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\thooks.chunkHash.tap(_pluginName, (chunk, hash, context) => {\n\t\t\t\tconst options = getOptionsForChunk(chunk);\n\t\t\t\tif (options === false) return;\n\t\t\t\tthis.chunkHash(chunk, hash, context, {\n\t\t\t\t\toptions,\n\t\t\t\t\tcompilation,\n\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {LibraryOptions=} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\t_parseOptionsCached(library) {\n\t\tif (!library) return false;\n\t\tif (library.type !== this._type) return false;\n\t\tconst cacheEntry = this._parseCache.get(library);\n\t\tif (cacheEntry !== undefined) return cacheEntry;\n\t\tconst result = this.parseOptions(library);\n\t\tthis._parseCache.set(library, result);\n\t\treturn result;\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {LibraryOptions} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\tparseOptions(library) {\n\t\tconst AbstractMethodError = require(\"../AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @param {Module} module the exporting entry module\n\t * @param {string} entryName the name of the entrypoint\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\tfinishEntryModule(module, entryName, libraryContext) {}\n\n\t/**\n\t * @param {Module} module the exporting entry module\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {string | undefined} bailout reason\n\t */\n\tembedInRuntimeBailout(module, renderContext, libraryContext) {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {string | undefined} bailout reason\n\t */\n\tstrictRuntimeBailout(renderContext, libraryContext) {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk\n\t * @param {Set<string>} set runtime requirements\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\truntimeRequirements(chunk, set, libraryContext) {\n\t\tif (this.render !== AbstractLibraryPlugin.prototype.render)\n\t\t\tset.add(RuntimeGlobals.returnExportsFromRuntime);\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trender(source, renderContext, libraryContext) {\n\t\treturn source;\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {Module} module module\n\t * @param {StartupRenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trenderStartup(source, module, renderContext, libraryContext) {\n\t\treturn source;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk\n\t * @param {Hash} hash hash\n\t * @param {ChunkHashContext} chunkHashContext chunk hash context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\tchunkHash(chunk, hash, chunkHashContext, libraryContext) {\n\t\tconst options = this._parseOptionsCached(\n\t\t\tlibraryContext.compilation.outputOptions.library\n\t\t);\n\t\thash.update(this._pluginName);\n\t\thash.update(JSON.stringify(options));\n\t}\n}\n\nAbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE = COMMON_LIBRARY_NAME_MESSAGE;\nmodule.exports = AbstractLibraryPlugin;\n"]},"metadata":{},"sourceType":"script"}