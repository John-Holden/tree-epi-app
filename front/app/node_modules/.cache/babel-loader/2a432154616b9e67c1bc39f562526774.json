{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require(\"./util/fs\"),\n    join = _require.join,\n    dirname = _require.dirname;\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {function(TODO): void} ModuleReplacer */\n\n\nvar NormalModuleReplacementPlugin = /*#__PURE__*/function () {\n  /**\n   * Create an instance of the plugin\n   * @param {RegExp} resourceRegExp the resource matcher\n   * @param {string|ModuleReplacer} newResource the resource replacement\n   */\n  function NormalModuleReplacementPlugin(resourceRegExp, newResource) {\n    _classCallCheck(this, NormalModuleReplacementPlugin);\n\n    this.resourceRegExp = resourceRegExp;\n    this.newResource = newResource;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(NormalModuleReplacementPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var resourceRegExp = this.resourceRegExp;\n      var newResource = this.newResource;\n      compiler.hooks.normalModuleFactory.tap(\"NormalModuleReplacementPlugin\", function (nmf) {\n        nmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", function (result) {\n          if (resourceRegExp.test(result.request)) {\n            if (typeof newResource === \"function\") {\n              newResource(result);\n            } else {\n              result.request = newResource;\n            }\n          }\n        });\n        nmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", function (result) {\n          var createData = result.createData;\n\n          if (resourceRegExp.test(createData.resource)) {\n            if (typeof newResource === \"function\") {\n              newResource(result);\n            } else {\n              var fs = compiler.inputFileSystem;\n\n              if (newResource.startsWith(\"/\") || newResource.length > 1 && newResource[1] === \":\") {\n                createData.resource = newResource;\n              } else {\n                createData.resource = join(fs, dirname(fs, createData.resource), newResource);\n              }\n            }\n          }\n        });\n      });\n    }\n  }]);\n\n  return NormalModuleReplacementPlugin;\n}();\n\nmodule.exports = NormalModuleReplacementPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/NormalModuleReplacementPlugin.js"],"names":["require","join","dirname","NormalModuleReplacementPlugin","resourceRegExp","newResource","compiler","hooks","normalModuleFactory","tap","nmf","beforeResolve","result","test","request","afterResolve","createData","resource","fs","inputFileSystem","startsWith","length","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;AAEA,eAA0BA,OAAO,CAAC,WAAD,CAAjC;AAAA,IAAQC,IAAR,YAAQA,IAAR;AAAA,IAAcC,OAAd,YAAcA,OAAd;AAEA;;AACA;;;IAEMC,6B;AACL;AACD;AACA;AACA;AACA;AACC,yCAAYC,cAAZ,EAA4BC,WAA5B,EAAyC;AAAA;;AACxC,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA;AAED;AACD;AACA;AACA;AACA;;;;;WACC,eAAMC,QAAN,EAAgB;AACf,UAAMF,cAAc,GAAG,KAAKA,cAA5B;AACA,UAAMC,WAAW,GAAG,KAAKA,WAAzB;AACAC,MAAAA,QAAQ,CAACC,KAAT,CAAeC,mBAAf,CAAmCC,GAAnC,CACC,+BADD,EAEC,UAAAC,GAAG,EAAI;AACNA,QAAAA,GAAG,CAACH,KAAJ,CAAUI,aAAV,CAAwBF,GAAxB,CAA4B,+BAA5B,EAA6D,UAAAG,MAAM,EAAI;AACtE,cAAIR,cAAc,CAACS,IAAf,CAAoBD,MAAM,CAACE,OAA3B,CAAJ,EAAyC;AACxC,gBAAI,OAAOT,WAAP,KAAuB,UAA3B,EAAuC;AACtCA,cAAAA,WAAW,CAACO,MAAD,CAAX;AACA,aAFD,MAEO;AACNA,cAAAA,MAAM,CAACE,OAAP,GAAiBT,WAAjB;AACA;AACD;AACD,SARD;AASAK,QAAAA,GAAG,CAACH,KAAJ,CAAUQ,YAAV,CAAuBN,GAAvB,CAA2B,+BAA3B,EAA4D,UAAAG,MAAM,EAAI;AACrE,cAAMI,UAAU,GAAGJ,MAAM,CAACI,UAA1B;;AACA,cAAIZ,cAAc,CAACS,IAAf,CAAoBG,UAAU,CAACC,QAA/B,CAAJ,EAA8C;AAC7C,gBAAI,OAAOZ,WAAP,KAAuB,UAA3B,EAAuC;AACtCA,cAAAA,WAAW,CAACO,MAAD,CAAX;AACA,aAFD,MAEO;AACN,kBAAMM,EAAE,GAAGZ,QAAQ,CAACa,eAApB;;AACA,kBACCd,WAAW,CAACe,UAAZ,CAAuB,GAAvB,KACCf,WAAW,CAACgB,MAAZ,GAAqB,CAArB,IAA0BhB,WAAW,CAAC,CAAD,CAAX,KAAmB,GAF/C,EAGE;AACDW,gBAAAA,UAAU,CAACC,QAAX,GAAsBZ,WAAtB;AACA,eALD,MAKO;AACNW,gBAAAA,UAAU,CAACC,QAAX,GAAsBhB,IAAI,CACzBiB,EADyB,EAEzBhB,OAAO,CAACgB,EAAD,EAAKF,UAAU,CAACC,QAAhB,CAFkB,EAGzBZ,WAHyB,CAA1B;AAKA;AACD;AACD;AACD,SArBD;AAsBA,OAlCF;AAoCA;;;;;;AAGFiB,MAAM,CAACC,OAAP,GAAiBpB,6BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { join, dirname } = require(\"./util/fs\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {function(TODO): void} ModuleReplacer */\n\nclass NormalModuleReplacementPlugin {\n\t/**\n\t * Create an instance of the plugin\n\t * @param {RegExp} resourceRegExp the resource matcher\n\t * @param {string|ModuleReplacer} newResource the resource replacement\n\t */\n\tconstructor(resourceRegExp, newResource) {\n\t\tthis.resourceRegExp = resourceRegExp;\n\t\tthis.newResource = newResource;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst resourceRegExp = this.resourceRegExp;\n\t\tconst newResource = this.newResource;\n\t\tcompiler.hooks.normalModuleFactory.tap(\n\t\t\t\"NormalModuleReplacementPlugin\",\n\t\t\tnmf => {\n\t\t\t\tnmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n\t\t\t\t\tif (resourceRegExp.test(result.request)) {\n\t\t\t\t\t\tif (typeof newResource === \"function\") {\n\t\t\t\t\t\t\tnewResource(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.request = newResource;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tnmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n\t\t\t\t\tconst createData = result.createData;\n\t\t\t\t\tif (resourceRegExp.test(createData.resource)) {\n\t\t\t\t\t\tif (typeof newResource === \"function\") {\n\t\t\t\t\t\t\tnewResource(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst fs = compiler.inputFileSystem;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tnewResource.startsWith(\"/\") ||\n\t\t\t\t\t\t\t\t(newResource.length > 1 && newResource[1] === \":\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcreateData.resource = newResource;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcreateData.resource = join(\n\t\t\t\t\t\t\t\t\tfs,\n\t\t\t\t\t\t\t\t\tdirname(fs, createData.resource),\n\t\t\t\t\t\t\t\t\tnewResource\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = NormalModuleReplacementPlugin;\n"]},"metadata":{},"sourceType":"script"}