{"ast":null,"code":"var _jsxFileName = \"/home/john/react-stuff/src/components/InputParams.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/app.css';\nimport 'katex/dist/katex.min.css';\nimport React, { useState } from 'react';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst divTableCell = {\n  display: 'table-cell'\n};\nconst labelSize = {\n  fontSize: 15\n};\nconst domainInputform = {\n  fontSize: 12,\n  padding: 1,\n  width: 30,\n  marginLeft: 30\n};\nconst domainInputformR = {\n  fontSize: 12,\n  padding: 1,\n  width: 30,\n  marginLeft: 4\n};\n\nfunction InputParameters() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [dispersaType, setDispersal] = useState('gaussian');\n  const [domainX, setDomainX] = useState(0);\n  const [domainY, setDomainY] = useState(0);\n  const [hostNumber, setHostNumber] = useState(0);\n  const [secondaryR0, setSecondaryR0] = useState(0);\n  const [infectiousLT, setInfectiousLT] = useState(0);\n  const [simulationRT, setSimulationRT] = useState(0);\n  const secondaryR0Label = 'R\\_{0}';\n\n  let handleDomainInput = e => {\n    const re = /^[0-9\\b]+$/;\n\n    if (re.test(e.target.value)) {\n      setDomainY(e.target.value);\n    }\n  };\n\n  let handleSubmitResp = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"http://localhost:5000\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"dispersal_type\": dispersaType,\n          \"domain_size\": [domainX, domainY],\n          \"host_number\": hostNumber,\n          \"secondary_R0\": secondaryR0,\n          \"infectious_lifetime\": infectiousLT,\n          \"simulation_runtime\": simulationRT\n        })\n      });\n      console.log(res);\n\n      if (res.status === 200) {\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\"); // todo address CORs issue on api gateway...\n      }\n    } catch (err) {\n      console.log(err);\n      alert(`${message}, dispersal type is ${dispersaType}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputParamPanel\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitResp,\n      style: {\n        width: 175\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: \" Dispersal type \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dispersaType,\n        onChange: e => setDispersal(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"gaussian\",\n          children: \"Gaussian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"exponential\",\n          children: \"Exponential\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"inverse_power_Law\",\n          children: \"Inverse power law\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: \" Domain size L x L\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divTableCell,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: domainInputform,\n          onChange: e => setDomainX(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 40\n        }, this), \" x \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divTableCell,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: domainInputformR,\n          onChange: handleDomainInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: [\" Host Number : \", hostNumber, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"2000\",\n        value: hostNumber,\n        onChange: e => setHostNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: [\" \", /*#__PURE__*/_jsxDEV(InlineMath, {\n          math: secondaryR0Label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }, this), \" : \", secondaryR0, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"20\",\n        value: secondaryR0,\n        onChange: e => setSecondaryR0(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: [\" Infectious lifetime: \", infectiousLT, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"100\",\n        value: infectiousLT,\n        onChange: e => setInfectiousLT(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: labelSize,\n        children: [\" Simulation Runtime: \", simulationRT, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"1000\",\n        value: simulationRT,\n        onChange: e => setSimulationRT(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Simulate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n\n_s(InputParameters, \"2moUPrwZMjorhh+tkj5qM4DBufQ=\");\n\n_c = InputParameters;\nexport default InputParameters;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputParameters\");","map":{"version":3,"sources":["/home/john/react-stuff/src/components/InputParams.js"],"names":["React","useState","InlineMath","BlockMath","divTableCell","display","labelSize","fontSize","domainInputform","padding","width","marginLeft","domainInputformR","InputParameters","message","setMessage","dispersaType","setDispersal","domainX","setDomainX","domainY","setDomainY","hostNumber","setHostNumber","secondaryR0","setSecondaryR0","infectiousLT","setInfectiousLT","simulationRT","setSimulationRT","secondaryR0Label","handleDomainInput","e","re","test","target","value","handleSubmitResp","preventDefault","res","fetch","method","body","JSON","stringify","console","log","status","err","alert"],"mappings":"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","sourcesContent":["import '../styles/app.css';\nimport 'katex/dist/katex.min.css';\nimport React, { useState } from 'react';\nimport { InlineMath, BlockMath } from 'react-katex';\n\nconst divTableCell = {\n  display: 'table-cell',\n};\n\nconst labelSize = {\n  fontSize: 15\n}\nconst domainInputform = {\n  fontSize: 12, \n  padding: 1, \n  width: 30 ,\n  marginLeft: 30}\n\n  const domainInputformR = {\n    fontSize: 12, \n    padding: 1, \n    width: 30,\n    marginLeft: 4 }\n\nfunction InputParameters() {\n\n  const [message, setMessage] = useState(\"\");\n  const [dispersaType, setDispersal] = useState('gaussian');\n  const [domainX, setDomainX] = useState(0);\n  const [domainY, setDomainY] = useState(0);\n  const [hostNumber, setHostNumber] = useState(0);\n  const [secondaryR0, setSecondaryR0] = useState(0);\n  const [infectiousLT, setInfectiousLT] = useState(0);\n  const [simulationRT, setSimulationRT] = useState(0);\n\n  const secondaryR0Label = 'R\\_{0}';\n\n  let handleDomainInput = (e) => {\n    const re = /^[0-9\\b]+$/;\n    if (re.test(e.target.value)) {\n       setDomainY(e.target.value)\n    }\n }\n\n  let handleSubmitResp = async (e) => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost:5000\", \n      { \n        method: \"POST\",\n        body: JSON.stringify({\"dispersal_type\": dispersaType,\n                              \"domain_size\": [domainX, domainY],\n                              \"host_number\": hostNumber,\n                              \"secondary_R0\": secondaryR0,\n                              \"infectious_lifetime\": infectiousLT,\n                              \"simulation_runtime\": simulationRT}),\n      });\n      console.log(res)\n      if (res.status === 200) {\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n        // todo address CORs issue on api gateway...\n      }\n    } catch (err) {\n      console.log(err);\n      alert(`${message}, dispersal type is ${dispersaType}`)\n    }\n  };\n\n  return (\n      <div className='inputParamPanel'>\n        <form onSubmit={handleSubmitResp} style={{width: 175}}>\n          <label style={labelSize} > Dispersal type </label> \n          \n          <select value={dispersaType} onChange={e => setDispersal(e.target.value)}> \n            <option value=\"gaussian\">Gaussian</option>  \n            <option value=\"exponential\">Exponential</option>\n            <option value=\"inverse_power_Law\">Inverse power law</option>\n          </select>\n          <p></p>\n          <label style={labelSize}> Domain size L x L</label>\n            <div style={divTableCell}> <input type=\"text\" style={domainInputform} onChange={e => setDomainX(e.target.value)} /> x </div>  \n            <div style={divTableCell}> <input type=\"text\" style={domainInputformR} onChange={handleDomainInput(e.target.value)} /> </div> \n          <br></br>\n          <label style={labelSize}> Host Number : {hostNumber} </label>\n          <input type=\"range\" min=\"1\" max=\"2000\" value={hostNumber}  onChange={e => setHostNumber(e.target.value)}/>   \n          <br></br>\n          <label style={labelSize}> <InlineMath math={secondaryR0Label} /> : {secondaryR0} </label>\n          <input type=\"range\" min=\"0\" max=\"20\" value={secondaryR0}  onChange={e => setSecondaryR0(e.target.value)}/>   \n          <br></br>\n          <label style={labelSize}> Infectious lifetime: {infectiousLT} </label>\n          <input type=\"range\" min=\"1\" max=\"100\" value={infectiousLT}  onChange={e => setInfectiousLT(e.target.value)}/> \n          <br></br>\n          <label style={labelSize}> Simulation Runtime: {simulationRT} </label>\n          <input type=\"range\" min=\"1\" max=\"1000\" value={simulationRT}  onChange={e => setSimulationRT(e.target.value)}/> \n          <br></br>\n          <input type=\"submit\" value=\"Simulate\" />\n        </form>\n      </div>\n  );\n}\n\nexport default InputParameters;\n"]},"metadata":{},"sourceType":"module"}