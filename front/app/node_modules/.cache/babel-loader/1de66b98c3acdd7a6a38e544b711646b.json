{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar NoEmitOnErrorsPlugin = /*#__PURE__*/function () {\n  function NoEmitOnErrorsPlugin() {\n    _classCallCheck(this, NoEmitOnErrorsPlugin);\n  }\n\n  _createClass(NoEmitOnErrorsPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.shouldEmit.tap(\"NoEmitOnErrorsPlugin\", function (compilation) {\n        if (compilation.getStats().hasErrors()) return false;\n      });\n      compiler.hooks.compilation.tap(\"NoEmitOnErrorsPlugin\", function (compilation) {\n        compilation.hooks.shouldRecord.tap(\"NoEmitOnErrorsPlugin\", function () {\n          if (compilation.getStats().hasErrors()) return false;\n        });\n      });\n    }\n  }]);\n\n  return NoEmitOnErrorsPlugin;\n}();\n\nmodule.exports = NoEmitOnErrorsPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/NoEmitOnErrorsPlugin.js"],"names":["NoEmitOnErrorsPlugin","compiler","hooks","shouldEmit","tap","compilation","getStats","hasErrors","shouldRecord","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;;;;;IAEMA,oB;;;;;;;;AACL;AACD;AACA;AACA;AACA;AACC,mBAAMC,QAAN,EAAgB;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,UAAf,CAA0BC,GAA1B,CAA8B,sBAA9B,EAAsD,UAAAC,WAAW,EAAI;AACpE,YAAIA,WAAW,CAACC,QAAZ,GAAuBC,SAAvB,EAAJ,EAAwC,OAAO,KAAP;AACxC,OAFD;AAGAN,MAAAA,QAAQ,CAACC,KAAT,CAAeG,WAAf,CAA2BD,GAA3B,CAA+B,sBAA/B,EAAuD,UAAAC,WAAW,EAAI;AACrEA,QAAAA,WAAW,CAACH,KAAZ,CAAkBM,YAAlB,CAA+BJ,GAA/B,CAAmC,sBAAnC,EAA2D,YAAM;AAChE,cAAIC,WAAW,CAACC,QAAZ,GAAuBC,SAAvB,EAAJ,EAAwC,OAAO,KAAP;AACxC,SAFD;AAGA,OAJD;AAKA;;;;;;AAGFE,MAAM,CAACC,OAAP,GAAiBV,oBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass NoEmitOnErrorsPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.shouldEmit.tap(\"NoEmitOnErrorsPlugin\", compilation => {\n\t\t\tif (compilation.getStats().hasErrors()) return false;\n\t\t});\n\t\tcompiler.hooks.compilation.tap(\"NoEmitOnErrorsPlugin\", compilation => {\n\t\t\tcompilation.hooks.shouldRecord.tap(\"NoEmitOnErrorsPlugin\", () => {\n\t\t\t\tif (compilation.getStats().hasErrors()) return false;\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NoEmitOnErrorsPlugin;\n"]},"metadata":{},"sourceType":"script"}