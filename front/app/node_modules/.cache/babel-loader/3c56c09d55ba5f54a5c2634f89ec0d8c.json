{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\n/** @typedef {import(\"../declarations/WebpackOptions\").Externals} Externals */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nvar ExternalsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string | undefined} type default external type\n   * @param {Externals} externals externals config\n   */\n  function ExternalsPlugin(type, externals) {\n    _classCallCheck(this, ExternalsPlugin);\n\n    this.type = type;\n    this.externals = externals;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(ExternalsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compile.tap(\"ExternalsPlugin\", function (_ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        new ExternalModuleFactoryPlugin(_this.type, _this.externals).apply(normalModuleFactory);\n      });\n    }\n  }]);\n\n  return ExternalsPlugin;\n}();\n\nmodule.exports = ExternalsPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/ExternalsPlugin.js"],"names":["ExternalModuleFactoryPlugin","require","ExternalsPlugin","type","externals","compiler","hooks","compile","tap","normalModuleFactory","apply","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;AAEA,IAAMA,2BAA2B,GAAGC,OAAO,CAAC,+BAAD,CAA3C;AAEA;;AACA;;;IAEMC,e;AACL;AACD;AACA;AACA;AACC,2BAAYC,IAAZ,EAAkBC,SAAlB,EAA6B;AAAA;;AAC5B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA;AAED;AACD;AACA;AACA;AACA;;;;;WACC,eAAMC,QAAN,EAAgB;AAAA;;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,OAAf,CAAuBC,GAAvB,CAA2B,iBAA3B,EAA8C,gBAA6B;AAAA,YAA1BC,mBAA0B,QAA1BA,mBAA0B;AAC1E,YAAIT,2BAAJ,CAAgC,KAAI,CAACG,IAArC,EAA2C,KAAI,CAACC,SAAhD,EAA2DM,KAA3D,CACCD,mBADD;AAGA,OAJD;AAKA;;;;;;AAGFE,MAAM,CAACC,OAAP,GAAiBV,eAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Externals} Externals */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass ExternalsPlugin {\n\t/**\n\t * @param {string | undefined} type default external type\n\t * @param {Externals} externals externals config\n\t */\n\tconstructor(type, externals) {\n\t\tthis.type = type;\n\t\tthis.externals = externals;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compile.tap(\"ExternalsPlugin\", ({ normalModuleFactory }) => {\n\t\t\tnew ExternalModuleFactoryPlugin(this.type, this.externals).apply(\n\t\t\t\tnormalModuleFactory\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = ExternalsPlugin;\n"]},"metadata":{},"sourceType":"script"}