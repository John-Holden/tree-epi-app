{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _objectSpread = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require(\"webpack-sources\"),\n    ConcatSource = _require.ConcatSource,\n    RawSource = _require.RawSource;\n\nvar ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nvar NormalModule = require(\"./NormalModule\");\n\nvar RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nvar SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\n\nvar JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n\nvar ConcatenatedModule = require(\"./optimize/ConcatenatedModule\");\n\nvar _require2 = require(\"./util/identifier\"),\n    makePathsAbsolute = _require2.makePathsAbsolute;\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").DevTool} DevToolOptions */\n\n/** @typedef {import(\"../declarations/plugins/SourceMapDevToolPlugin\").SourceMapDevToolPluginOptions} SourceMapDevToolPluginOptions */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @type {WeakMap<Source, Source>} */\n\n\nvar cache = new WeakMap();\nvar devtoolWarning = new RawSource(\"/*\\n * ATTENTION: An \\\"eval-source-map\\\" devtool has been used.\\n * This devtool is neither made for production nor for readable output files.\\n * It uses \\\"eval()\\\" calls to create a separate source file with attached SourceMaps in the browser devtools.\\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\\n * or disable the default devtool with \\\"devtool: false\\\".\\n * If you are looking for production-ready output files, see mode: \\\"production\\\" (https://webpack.js.org/configuration/mode/).\\n */\\n\");\n\nvar EvalSourceMapDevToolPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {SourceMapDevToolPluginOptions|string} inputOptions Options object\n   */\n  function EvalSourceMapDevToolPlugin(inputOptions) {\n    _classCallCheck(this, EvalSourceMapDevToolPlugin);\n\n    /** @type {SourceMapDevToolPluginOptions} */\n    var options;\n\n    if (typeof inputOptions === \"string\") {\n      options = {\n        append: inputOptions\n      };\n    } else {\n      options = inputOptions;\n    }\n\n    this.sourceMapComment = options.append || \"//# sourceURL=[module]\\n//# sourceMappingURL=[url]\";\n    this.moduleFilenameTemplate = options.moduleFilenameTemplate || \"webpack://[namespace]/[resource-path]?[hash]\";\n    this.namespace = options.namespace || \"\";\n    this.options = options;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(EvalSourceMapDevToolPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      var options = this.options;\n      compiler.hooks.compilation.tap(\"EvalSourceMapDevToolPlugin\", function (compilation) {\n        var hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n        new SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n        var matchModule = ModuleFilenameHelpers.matchObject.bind(ModuleFilenameHelpers, options);\n        hooks.renderModuleContent.tap(\"EvalSourceMapDevToolPlugin\", function (source, m, _ref) {\n          var runtimeTemplate = _ref.runtimeTemplate,\n              chunkGraph = _ref.chunkGraph;\n          var cachedSource = cache.get(source);\n\n          if (cachedSource !== undefined) {\n            return cachedSource;\n          }\n\n          var result = function result(r) {\n            cache.set(source, r);\n            return r;\n          };\n\n          if (m instanceof NormalModule) {\n            var _module =\n            /** @type {NormalModule} */\n            m;\n\n            if (!matchModule(_module.resource)) {\n              return result(source);\n            }\n          } else if (m instanceof ConcatenatedModule) {\n            var concatModule =\n            /** @type {ConcatenatedModule} */\n            m;\n\n            if (concatModule.rootModule instanceof NormalModule) {\n              var _module2 =\n              /** @type {NormalModule} */\n              concatModule.rootModule;\n\n              if (!matchModule(_module2.resource)) {\n                return result(source);\n              }\n            } else {\n              return result(source);\n            }\n          } else {\n            return result(source);\n          }\n          /** @type {{ [key: string]: TODO; }} */\n\n\n          var sourceMap;\n          var content;\n\n          if (source.sourceAndMap) {\n            var sourceAndMap = source.sourceAndMap(options);\n            sourceMap = sourceAndMap.map;\n            content = sourceAndMap.source;\n          } else {\n            sourceMap = source.map(options);\n            content = source.source();\n          }\n\n          if (!sourceMap) {\n            return result(source);\n          } // Clone (flat) the sourcemap to ensure that the mutations below do not persist.\n\n\n          sourceMap = _objectSpread({}, sourceMap);\n          var context = compiler.options.context;\n          var root = compiler.root;\n          var modules = sourceMap.sources.map(function (source) {\n            if (!source.startsWith(\"webpack://\")) return source;\n            source = makePathsAbsolute(context, source.slice(10), root);\n            var module = compilation.findModule(source);\n            return module || source;\n          });\n          var moduleFilenames = modules.map(function (module) {\n            return ModuleFilenameHelpers.createFilename(module, {\n              moduleFilenameTemplate: _this.moduleFilenameTemplate,\n              namespace: _this.namespace\n            }, {\n              requestShortener: runtimeTemplate.requestShortener,\n              chunkGraph: chunkGraph,\n              hashFunction: compilation.outputOptions.hashFunction\n            });\n          });\n          moduleFilenames = ModuleFilenameHelpers.replaceDuplicates(moduleFilenames, function (filename, i, n) {\n            for (var j = 0; j < n; j++) {\n              filename += \"*\";\n            }\n\n            return filename;\n          });\n          sourceMap.sources = moduleFilenames;\n          sourceMap.sourceRoot = options.sourceRoot || \"\";\n          var moduleId = chunkGraph.getModuleId(m);\n          sourceMap.file = \"\".concat(moduleId, \".js\");\n          var footer = _this.sourceMapComment.replace(/\\[url\\]/g, \"data:application/json;charset=utf-8;base64,\".concat(Buffer.from(JSON.stringify(sourceMap), \"utf8\").toString(\"base64\"))) + \"\\n//# sourceURL=webpack-internal:///\".concat(moduleId, \"\\n\"); // workaround for chrome bug\n\n          return result(new RawSource(\"eval(\".concat(compilation.outputOptions.trustedTypes ? \"\".concat(RuntimeGlobals.createScript, \"(\").concat(JSON.stringify(content + footer), \")\") : JSON.stringify(content + footer), \");\")));\n        });\n        hooks.inlineInRuntimeBailout.tap(\"EvalDevToolModulePlugin\", function () {\n          return \"the eval-source-map devtool is used.\";\n        });\n        hooks.render.tap(\"EvalSourceMapDevToolPlugin\", function (source) {\n          return new ConcatSource(devtoolWarning, source);\n        });\n        hooks.chunkHash.tap(\"EvalSourceMapDevToolPlugin\", function (chunk, hash) {\n          hash.update(\"EvalSourceMapDevToolPlugin\");\n          hash.update(\"2\");\n        });\n\n        if (compilation.outputOptions.trustedTypes) {\n          compilation.hooks.additionalModuleRuntimeRequirements.tap(\"EvalSourceMapDevToolPlugin\", function (module, set, context) {\n            set.add(RuntimeGlobals.createScript);\n          });\n        }\n      });\n    }\n  }]);\n\n  return EvalSourceMapDevToolPlugin;\n}();\n\nmodule.exports = EvalSourceMapDevToolPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/EvalSourceMapDevToolPlugin.js"],"names":["require","ConcatSource","RawSource","ModuleFilenameHelpers","NormalModule","RuntimeGlobals","SourceMapDevToolModuleOptionsPlugin","JavascriptModulesPlugin","ConcatenatedModule","makePathsAbsolute","cache","WeakMap","devtoolWarning","EvalSourceMapDevToolPlugin","inputOptions","options","append","sourceMapComment","moduleFilenameTemplate","namespace","compiler","hooks","compilation","tap","getCompilationHooks","apply","matchModule","matchObject","bind","renderModuleContent","source","m","runtimeTemplate","chunkGraph","cachedSource","get","undefined","result","r","set","module","resource","concatModule","rootModule","sourceMap","content","sourceAndMap","map","context","root","modules","sources","startsWith","slice","findModule","moduleFilenames","createFilename","requestShortener","hashFunction","outputOptions","replaceDuplicates","filename","i","n","j","sourceRoot","moduleId","getModuleId","file","footer","replace","Buffer","from","JSON","stringify","toString","trustedTypes","createScript","inlineInRuntimeBailout","render","chunkHash","chunk","hash","update","additionalModuleRuntimeRequirements","add","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst NormalModule = require(\"./NormalModule\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\nconst ConcatenatedModule = require(\"./optimize/ConcatenatedModule\");\nconst { makePathsAbsolute } = require(\"./util/identifier\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").DevTool} DevToolOptions */\n/** @typedef {import(\"../declarations/plugins/SourceMapDevToolPlugin\").SourceMapDevToolPluginOptions} SourceMapDevToolPluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @type {WeakMap<Source, Source>} */\nconst cache = new WeakMap();\n\nconst devtoolWarning = new RawSource(`/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n`);\n\nclass EvalSourceMapDevToolPlugin {\n\t/**\n\t * @param {SourceMapDevToolPluginOptions|string} inputOptions Options object\n\t */\n\tconstructor(inputOptions) {\n\t\t/** @type {SourceMapDevToolPluginOptions} */\n\t\tlet options;\n\t\tif (typeof inputOptions === \"string\") {\n\t\t\toptions = {\n\t\t\t\tappend: inputOptions\n\t\t\t};\n\t\t} else {\n\t\t\toptions = inputOptions;\n\t\t}\n\t\tthis.sourceMapComment =\n\t\t\toptions.append || \"//# sourceURL=[module]\\n//# sourceMappingURL=[url]\";\n\t\tthis.moduleFilenameTemplate =\n\t\t\toptions.moduleFilenameTemplate ||\n\t\t\t\"webpack://[namespace]/[resource-path]?[hash]\";\n\t\tthis.namespace = options.namespace || \"\";\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EvalSourceMapDevToolPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n\t\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n\t\t\t\tconst matchModule = ModuleFilenameHelpers.matchObject.bind(\n\t\t\t\t\tModuleFilenameHelpers,\n\t\t\t\t\toptions\n\t\t\t\t);\n\t\t\t\thooks.renderModuleContent.tap(\n\t\t\t\t\t\"EvalSourceMapDevToolPlugin\",\n\t\t\t\t\t(source, m, { runtimeTemplate, chunkGraph }) => {\n\t\t\t\t\t\tconst cachedSource = cache.get(source);\n\t\t\t\t\t\tif (cachedSource !== undefined) {\n\t\t\t\t\t\t\treturn cachedSource;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = r => {\n\t\t\t\t\t\t\tcache.set(source, r);\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (m instanceof NormalModule) {\n\t\t\t\t\t\t\tconst module = /** @type {NormalModule} */ (m);\n\t\t\t\t\t\t\tif (!matchModule(module.resource)) {\n\t\t\t\t\t\t\t\treturn result(source);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (m instanceof ConcatenatedModule) {\n\t\t\t\t\t\t\tconst concatModule = /** @type {ConcatenatedModule} */ (m);\n\t\t\t\t\t\t\tif (concatModule.rootModule instanceof NormalModule) {\n\t\t\t\t\t\t\t\tconst module = /** @type {NormalModule} */ (\n\t\t\t\t\t\t\t\t\tconcatModule.rootModule\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (!matchModule(module.resource)) {\n\t\t\t\t\t\t\t\t\treturn result(source);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn result(source);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn result(source);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/** @type {{ [key: string]: TODO; }} */\n\t\t\t\t\t\tlet sourceMap;\n\t\t\t\t\t\tlet content;\n\t\t\t\t\t\tif (source.sourceAndMap) {\n\t\t\t\t\t\t\tconst sourceAndMap = source.sourceAndMap(options);\n\t\t\t\t\t\t\tsourceMap = sourceAndMap.map;\n\t\t\t\t\t\t\tcontent = sourceAndMap.source;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsourceMap = source.map(options);\n\t\t\t\t\t\t\tcontent = source.source();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!sourceMap) {\n\t\t\t\t\t\t\treturn result(source);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Clone (flat) the sourcemap to ensure that the mutations below do not persist.\n\t\t\t\t\t\tsourceMap = { ...sourceMap };\n\t\t\t\t\t\tconst context = compiler.options.context;\n\t\t\t\t\t\tconst root = compiler.root;\n\t\t\t\t\t\tconst modules = sourceMap.sources.map(source => {\n\t\t\t\t\t\t\tif (!source.startsWith(\"webpack://\")) return source;\n\t\t\t\t\t\t\tsource = makePathsAbsolute(context, source.slice(10), root);\n\t\t\t\t\t\t\tconst module = compilation.findModule(source);\n\t\t\t\t\t\t\treturn module || source;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet moduleFilenames = modules.map(module => {\n\t\t\t\t\t\t\treturn ModuleFilenameHelpers.createFilename(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmoduleFilenameTemplate: this.moduleFilenameTemplate,\n\t\t\t\t\t\t\t\t\tnamespace: this.namespace\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequestShortener: runtimeTemplate.requestShortener,\n\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\thashFunction: compilation.outputOptions.hashFunction\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmoduleFilenames = ModuleFilenameHelpers.replaceDuplicates(\n\t\t\t\t\t\t\tmoduleFilenames,\n\t\t\t\t\t\t\t(filename, i, n) => {\n\t\t\t\t\t\t\t\tfor (let j = 0; j < n; j++) filename += \"*\";\n\t\t\t\t\t\t\t\treturn filename;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsourceMap.sources = moduleFilenames;\n\t\t\t\t\t\tsourceMap.sourceRoot = options.sourceRoot || \"\";\n\t\t\t\t\t\tconst moduleId = chunkGraph.getModuleId(m);\n\t\t\t\t\t\tsourceMap.file = `${moduleId}.js`;\n\n\t\t\t\t\t\tconst footer =\n\t\t\t\t\t\t\tthis.sourceMapComment.replace(\n\t\t\t\t\t\t\t\t/\\[url\\]/g,\n\t\t\t\t\t\t\t\t`data:application/json;charset=utf-8;base64,${Buffer.from(\n\t\t\t\t\t\t\t\t\tJSON.stringify(sourceMap),\n\t\t\t\t\t\t\t\t\t\"utf8\"\n\t\t\t\t\t\t\t\t).toString(\"base64\")}`\n\t\t\t\t\t\t\t) + `\\n//# sourceURL=webpack-internal:///${moduleId}\\n`; // workaround for chrome bug\n\n\t\t\t\t\t\treturn result(\n\t\t\t\t\t\t\tnew RawSource(\n\t\t\t\t\t\t\t\t`eval(${\n\t\t\t\t\t\t\t\t\tcompilation.outputOptions.trustedTypes\n\t\t\t\t\t\t\t\t\t\t? `${RuntimeGlobals.createScript}(${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tcontent + footer\n\t\t\t\t\t\t\t\t\t\t  )})`\n\t\t\t\t\t\t\t\t\t\t: JSON.stringify(content + footer)\n\t\t\t\t\t\t\t\t});`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thooks.inlineInRuntimeBailout.tap(\n\t\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\t\t() => \"the eval-source-map devtool is used.\"\n\t\t\t\t);\n\t\t\t\thooks.render.tap(\n\t\t\t\t\t\"EvalSourceMapDevToolPlugin\",\n\t\t\t\t\tsource => new ConcatSource(devtoolWarning, source)\n\t\t\t\t);\n\t\t\t\thooks.chunkHash.tap(\"EvalSourceMapDevToolPlugin\", (chunk, hash) => {\n\t\t\t\t\thash.update(\"EvalSourceMapDevToolPlugin\");\n\t\t\t\t\thash.update(\"2\");\n\t\t\t\t});\n\t\t\t\tif (compilation.outputOptions.trustedTypes) {\n\t\t\t\t\tcompilation.hooks.additionalModuleRuntimeRequirements.tap(\n\t\t\t\t\t\t\"EvalSourceMapDevToolPlugin\",\n\t\t\t\t\t\t(module, set, context) => {\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.createScript);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = EvalSourceMapDevToolPlugin;\n"]},"metadata":{},"sourceType":"script"}