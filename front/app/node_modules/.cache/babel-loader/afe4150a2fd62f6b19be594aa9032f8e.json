{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require(\"./serialization\"),\n    register = _require.register;\n\nvar ClassSerializer = /*#__PURE__*/function () {\n  function ClassSerializer(Constructor) {\n    _classCallCheck(this, ClassSerializer);\n\n    this.Constructor = Constructor;\n  }\n\n  _createClass(ClassSerializer, [{\n    key: \"serialize\",\n    value: function serialize(obj, context) {\n      obj.serialize(context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      if (typeof this.Constructor.deserialize === \"function\") {\n        return this.Constructor.deserialize(context);\n      }\n\n      var obj = new this.Constructor();\n      obj.deserialize(context);\n      return obj;\n    }\n  }]);\n\n  return ClassSerializer;\n}();\n\nmodule.exports = function (Constructor, request) {\n  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  register(Constructor, request, name, new ClassSerializer(Constructor));\n};","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/util/makeSerializable.js"],"names":["require","register","ClassSerializer","Constructor","obj","context","serialize","deserialize","module","exports","request","name"],"mappings":"AAAA;AACA;AACA;AAEA;;;;;;AAEA,eAAqBA,OAAO,CAAC,iBAAD,CAA5B;AAAA,IAAQC,QAAR,YAAQA,QAAR;;IAEMC,e;AACL,2BAAYC,WAAZ,EAAyB;AAAA;;AACxB,SAAKA,WAAL,GAAmBA,WAAnB;AACA;;;;WAED,mBAAUC,GAAV,EAAeC,OAAf,EAAwB;AACvBD,MAAAA,GAAG,CAACE,SAAJ,CAAcD,OAAd;AACA;;;WAED,qBAAYA,OAAZ,EAAqB;AACpB,UAAI,OAAO,KAAKF,WAAL,CAAiBI,WAAxB,KAAwC,UAA5C,EAAwD;AACvD,eAAO,KAAKJ,WAAL,CAAiBI,WAAjB,CAA6BF,OAA7B,CAAP;AACA;;AACD,UAAMD,GAAG,GAAG,IAAI,KAAKD,WAAT,EAAZ;AACAC,MAAAA,GAAG,CAACG,WAAJ,CAAgBF,OAAhB;AACA,aAAOD,GAAP;AACA;;;;;;AAGFI,MAAM,CAACC,OAAP,GAAiB,UAACN,WAAD,EAAcO,OAAd,EAAuC;AAAA,MAAhBC,IAAgB,uEAAT,IAAS;AACvDV,EAAAA,QAAQ,CAACE,WAAD,EAAcO,OAAd,EAAuBC,IAAvB,EAA6B,IAAIT,eAAJ,CAAoBC,WAApB,CAA7B,CAAR;AACA,CAFD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst { register } = require(\"./serialization\");\n\nclass ClassSerializer {\n\tconstructor(Constructor) {\n\t\tthis.Constructor = Constructor;\n\t}\n\n\tserialize(obj, context) {\n\t\tobj.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tif (typeof this.Constructor.deserialize === \"function\") {\n\t\t\treturn this.Constructor.deserialize(context);\n\t\t}\n\t\tconst obj = new this.Constructor();\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmodule.exports = (Constructor, request, name = null) => {\n\tregister(Constructor, request, name, new ClassSerializer(Constructor));\n};\n"]},"metadata":{},"sourceType":"script"}