{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar DependenciesBlock = require(\"./DependenciesBlock\");\n\nvar makeSerializable = require(\"./util/makeSerializable\");\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n\n/** @typedef {import(\"./ChunkGroup\").ChunkGroupOptions} ChunkGroupOptions */\n\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n\nvar AsyncDependenciesBlock = /*#__PURE__*/function (_DependenciesBlock) {\n  _inherits(AsyncDependenciesBlock, _DependenciesBlock);\n\n  var _super = _createSuper(AsyncDependenciesBlock);\n\n  /**\n   * @param {ChunkGroupOptions & { entryOptions?: EntryOptions }} groupOptions options for the group\n   * @param {DependencyLocation=} loc the line of code\n   * @param {string=} request the request\n   */\n  function AsyncDependenciesBlock(groupOptions, loc, request) {\n    var _this;\n\n    _classCallCheck(this, AsyncDependenciesBlock);\n\n    _this = _super.call(this);\n\n    if (typeof groupOptions === \"string\") {\n      groupOptions = {\n        name: groupOptions\n      };\n    } else if (!groupOptions) {\n      groupOptions = {\n        name: undefined\n      };\n    }\n\n    _this.groupOptions = groupOptions;\n    _this.loc = loc;\n    _this.request = request;\n    _this._stringifiedGroupOptions = undefined;\n    return _this;\n  }\n  /**\n   * @returns {string} The name of the chunk\n   */\n\n\n  _createClass(AsyncDependenciesBlock, [{\n    key: \"chunkName\",\n    get: function get() {\n      return this.groupOptions.name;\n    }\n    /**\n     * @param {string} value The new chunk name\n     * @returns {void}\n     */\n    ,\n    set: function set(value) {\n      if (this.groupOptions.name !== value) {\n        this.groupOptions.name = value;\n        this._stringifiedGroupOptions = undefined;\n      }\n    }\n    /**\n     * @param {Hash} hash the hash used to track dependencies\n     * @param {UpdateHashContext} context context\n     * @returns {void}\n     */\n\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, context) {\n      var chunkGraph = context.chunkGraph;\n\n      if (this._stringifiedGroupOptions === undefined) {\n        this._stringifiedGroupOptions = JSON.stringify(this.groupOptions);\n      }\n\n      var chunkGroup = chunkGraph.getBlockChunkGroup(this);\n      hash.update(\"\".concat(this._stringifiedGroupOptions).concat(chunkGroup ? chunkGroup.id : \"\"));\n\n      _get(_getPrototypeOf(AsyncDependenciesBlock.prototype), \"updateHash\", this).call(this, hash, context);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.groupOptions);\n      write(this.loc);\n      write(this.request);\n\n      _get(_getPrototypeOf(AsyncDependenciesBlock.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.groupOptions = read();\n      this.loc = read();\n      this.request = read();\n\n      _get(_getPrototypeOf(AsyncDependenciesBlock.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n\n  return AsyncDependenciesBlock;\n}(DependenciesBlock);\n\nmakeSerializable(AsyncDependenciesBlock, \"webpack/lib/AsyncDependenciesBlock\");\nObject.defineProperty(AsyncDependenciesBlock.prototype, \"module\", {\n  get: function get() {\n    throw new Error(\"module property was removed from AsyncDependenciesBlock (it's not needed)\");\n  },\n  set: function set() {\n    throw new Error(\"module property was removed from AsyncDependenciesBlock (it's not needed)\");\n  }\n});\nmodule.exports = AsyncDependenciesBlock;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/AsyncDependenciesBlock.js"],"names":["DependenciesBlock","require","makeSerializable","AsyncDependenciesBlock","groupOptions","loc","request","name","undefined","_stringifiedGroupOptions","value","hash","context","chunkGraph","JSON","stringify","chunkGroup","getBlockChunkGroup","update","id","write","read","Object","defineProperty","prototype","get","Error","set","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,yBAAD,CAAhC;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;IAEME,sB;;;;;AACL;AACD;AACA;AACA;AACA;AACC,kCAAYC,YAAZ,EAA0BC,GAA1B,EAA+BC,OAA/B,EAAwC;AAAA;;AAAA;;AACvC;;AACA,QAAI,OAAOF,YAAP,KAAwB,QAA5B,EAAsC;AACrCA,MAAAA,YAAY,GAAG;AAAEG,QAAAA,IAAI,EAAEH;AAAR,OAAf;AACA,KAFD,MAEO,IAAI,CAACA,YAAL,EAAmB;AACzBA,MAAAA,YAAY,GAAG;AAAEG,QAAAA,IAAI,EAAEC;AAAR,OAAf;AACA;;AACD,UAAKJ,YAAL,GAAoBA,YAApB;AACA,UAAKC,GAAL,GAAWA,GAAX;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKG,wBAAL,GAAgCD,SAAhC;AAVuC;AAWvC;AAED;AACD;AACA;;;;;SACC,eAAgB;AACf,aAAO,KAAKJ,YAAL,CAAkBG,IAAzB;AACA;AAED;AACD;AACA;AACA;;SACC,aAAcG,KAAd,EAAqB;AACpB,UAAI,KAAKN,YAAL,CAAkBG,IAAlB,KAA2BG,KAA/B,EAAsC;AACrC,aAAKN,YAAL,CAAkBG,IAAlB,GAAyBG,KAAzB;AACA,aAAKD,wBAAL,GAAgCD,SAAhC;AACA;AACD;AAED;AACD;AACA;AACA;AACA;;;;WACC,oBAAWG,IAAX,EAAiBC,OAAjB,EAA0B;AACzB,UAAQC,UAAR,GAAuBD,OAAvB,CAAQC,UAAR;;AACA,UAAI,KAAKJ,wBAAL,KAAkCD,SAAtC,EAAiD;AAChD,aAAKC,wBAAL,GAAgCK,IAAI,CAACC,SAAL,CAAe,KAAKX,YAApB,CAAhC;AACA;;AACD,UAAMY,UAAU,GAAGH,UAAU,CAACI,kBAAX,CAA8B,IAA9B,CAAnB;AACAN,MAAAA,IAAI,CAACO,MAAL,WACI,KAAKT,wBADT,SACoCO,UAAU,GAAGA,UAAU,CAACG,EAAd,GAAmB,EADjE;;AAGA,6FAAiBR,IAAjB,EAAuBC,OAAvB;AACA;;;WAED,mBAAUA,OAAV,EAAmB;AAClB,UAAQQ,KAAR,GAAkBR,OAAlB,CAAQQ,KAAR;AACAA,MAAAA,KAAK,CAAC,KAAKhB,YAAN,CAAL;AACAgB,MAAAA,KAAK,CAAC,KAAKf,GAAN,CAAL;AACAe,MAAAA,KAAK,CAAC,KAAKd,OAAN,CAAL;;AACA,4FAAgBM,OAAhB;AACA;;;WAED,qBAAYA,OAAZ,EAAqB;AACpB,UAAQS,IAAR,GAAiBT,OAAjB,CAAQS,IAAR;AACA,WAAKjB,YAAL,GAAoBiB,IAAI,EAAxB;AACA,WAAKhB,GAAL,GAAWgB,IAAI,EAAf;AACA,WAAKf,OAAL,GAAee,IAAI,EAAnB;;AACA,8FAAkBT,OAAlB;AACA;;;;EApEmCZ,iB;;AAuErCE,gBAAgB,CAACC,sBAAD,EAAyB,oCAAzB,CAAhB;AAEAmB,MAAM,CAACC,cAAP,CAAsBpB,sBAAsB,CAACqB,SAA7C,EAAwD,QAAxD,EAAkE;AACjEC,EAAAA,GADiE,iBAC3D;AACL,UAAM,IAAIC,KAAJ,CACL,2EADK,CAAN;AAGA,GALgE;AAMjEC,EAAAA,GANiE,iBAM3D;AACL,UAAM,IAAID,KAAJ,CACL,2EADK,CAAN;AAGA;AAVgE,CAAlE;AAaAE,MAAM,CAACC,OAAP,GAAiB1B,sBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DependenciesBlock = require(\"./DependenciesBlock\");\nconst makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./ChunkGroup\").ChunkGroupOptions} ChunkGroupOptions */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./util/Hash\")} Hash */\n\nclass AsyncDependenciesBlock extends DependenciesBlock {\n\t/**\n\t * @param {ChunkGroupOptions & { entryOptions?: EntryOptions }} groupOptions options for the group\n\t * @param {DependencyLocation=} loc the line of code\n\t * @param {string=} request the request\n\t */\n\tconstructor(groupOptions, loc, request) {\n\t\tsuper();\n\t\tif (typeof groupOptions === \"string\") {\n\t\t\tgroupOptions = { name: groupOptions };\n\t\t} else if (!groupOptions) {\n\t\t\tgroupOptions = { name: undefined };\n\t\t}\n\t\tthis.groupOptions = groupOptions;\n\t\tthis.loc = loc;\n\t\tthis.request = request;\n\t\tthis._stringifiedGroupOptions = undefined;\n\t}\n\n\t/**\n\t * @returns {string} The name of the chunk\n\t */\n\tget chunkName() {\n\t\treturn this.groupOptions.name;\n\t}\n\n\t/**\n\t * @param {string} value The new chunk name\n\t * @returns {void}\n\t */\n\tset chunkName(value) {\n\t\tif (this.groupOptions.name !== value) {\n\t\t\tthis.groupOptions.name = value;\n\t\t\tthis._stringifiedGroupOptions = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tconst { chunkGraph } = context;\n\t\tif (this._stringifiedGroupOptions === undefined) {\n\t\t\tthis._stringifiedGroupOptions = JSON.stringify(this.groupOptions);\n\t\t}\n\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(this);\n\t\thash.update(\n\t\t\t`${this._stringifiedGroupOptions}${chunkGroup ? chunkGroup.id : \"\"}`\n\t\t);\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.groupOptions);\n\t\twrite(this.loc);\n\t\twrite(this.request);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.groupOptions = read();\n\t\tthis.loc = read();\n\t\tthis.request = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(AsyncDependenciesBlock, \"webpack/lib/AsyncDependenciesBlock\");\n\nObject.defineProperty(AsyncDependenciesBlock.prototype, \"module\", {\n\tget() {\n\t\tthrow new Error(\n\t\t\t\"module property was removed from AsyncDependenciesBlock (it's not needed)\"\n\t\t);\n\t},\n\tset() {\n\t\tthrow new Error(\n\t\t\t\"module property was removed from AsyncDependenciesBlock (it's not needed)\"\n\t\t);\n\t}\n});\n\nmodule.exports = AsyncDependenciesBlock;\n"]},"metadata":{},"sourceType":"script"}