{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _toConsumableArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar glob2regexp = require(\"glob-to-regexp\");\n\nvar _require = require(\"../OptimizationStages\"),\n    STAGE_DEFAULT = _require.STAGE_DEFAULT;\n\nvar HarmonyExportImportedSpecifierDependency = require(\"../dependencies/HarmonyExportImportedSpecifierDependency\");\n\nvar HarmonyImportSpecifierDependency = require(\"../dependencies/HarmonyImportSpecifierDependency\");\n\nvar formatLocation = require(\"../formatLocation\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\n/**\n * @typedef {Object} ExportInModule\n * @property {Module} module the module\n * @property {string} exportName the name of the export\n * @property {boolean} checked if the export is conditional\n */\n\n/**\n * @typedef {Object} ReexportInfo\n * @property {Map<string, ExportInModule[]>} static\n * @property {Map<Module, Set<string>>} dynamic\n */\n\n/** @type {WeakMap<any, Map<string, RegExp>>} */\n\n\nvar globToRegexpCache = new WeakMap();\n/**\n * @param {string} glob the pattern\n * @param {Map<string, RegExp>} cache the glob to RegExp cache\n * @returns {RegExp} a regular expression\n */\n\nvar globToRegexp = function globToRegexp(glob, cache) {\n  var cacheEntry = cache.get(glob);\n  if (cacheEntry !== undefined) return cacheEntry;\n\n  if (!glob.includes(\"/\")) {\n    glob = \"**/\".concat(glob);\n  }\n\n  var baseRegexp = glob2regexp(glob, {\n    globstar: true,\n    extended: true\n  });\n  var regexpSource = baseRegexp.source;\n  var regexp = new RegExp(\"^(\\\\./)?\" + regexpSource.slice(1));\n  cache.set(glob, regexp);\n  return regexp;\n};\n\nvar SideEffectsFlagPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {boolean} analyseSource analyse source code for side effects\n   */\n  function SideEffectsFlagPlugin() {\n    var analyseSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    _classCallCheck(this, SideEffectsFlagPlugin);\n\n    this._analyseSource = analyseSource;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(SideEffectsFlagPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      var cache = globToRegexpCache.get(compiler.root);\n\n      if (cache === undefined) {\n        cache = new Map();\n        globToRegexpCache.set(compiler.root, cache);\n      }\n\n      compiler.hooks.compilation.tap(\"SideEffectsFlagPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        var moduleGraph = compilation.moduleGraph;\n        normalModuleFactory.hooks.module.tap(\"SideEffectsFlagPlugin\", function (module, data) {\n          var resolveData = data.resourceResolveData;\n\n          if (resolveData && resolveData.descriptionFileData && resolveData.relativePath) {\n            var sideEffects = resolveData.descriptionFileData.sideEffects;\n\n            if (sideEffects !== undefined) {\n              if (module.factoryMeta === undefined) {\n                module.factoryMeta = {};\n              }\n\n              var hasSideEffects = SideEffectsFlagPlugin.moduleHasSideEffects(resolveData.relativePath, sideEffects, cache);\n              module.factoryMeta.sideEffectFree = !hasSideEffects;\n            }\n          }\n\n          return module;\n        });\n        normalModuleFactory.hooks.module.tap(\"SideEffectsFlagPlugin\", function (module, data) {\n          if (typeof data.settings.sideEffects === \"boolean\") {\n            if (module.factoryMeta === undefined) {\n              module.factoryMeta = {};\n            }\n\n            module.factoryMeta.sideEffectFree = !data.settings.sideEffects;\n          }\n\n          return module;\n        });\n\n        if (_this._analyseSource) {\n          /**\n           * @param {JavascriptParser} parser the parser\n           * @returns {void}\n           */\n          var parserHandler = function parserHandler(parser) {\n            var sideEffectsStatement;\n            parser.hooks.program.tap(\"SideEffectsFlagPlugin\", function () {\n              sideEffectsStatement = undefined;\n            });\n            parser.hooks.statement.tap({\n              name: \"SideEffectsFlagPlugin\",\n              stage: -100\n            }, function (statement) {\n              if (sideEffectsStatement) return;\n              if (parser.scope.topLevelScope !== true) return;\n\n              switch (statement.type) {\n                case \"ExpressionStatement\":\n                  if (!parser.isPure(statement.expression, statement.range[0])) {\n                    sideEffectsStatement = statement;\n                  }\n\n                  break;\n\n                case \"IfStatement\":\n                case \"WhileStatement\":\n                case \"DoWhileStatement\":\n                  if (!parser.isPure(statement.test, statement.range[0])) {\n                    sideEffectsStatement = statement;\n                  } // statement hook will be called for child statements too\n\n\n                  break;\n\n                case \"ForStatement\":\n                  if (!parser.isPure(statement.init, statement.range[0]) || !parser.isPure(statement.test, statement.init ? statement.init.range[1] : statement.range[0]) || !parser.isPure(statement.update, statement.test ? statement.test.range[1] : statement.init ? statement.init.range[1] : statement.range[0])) {\n                    sideEffectsStatement = statement;\n                  } // statement hook will be called for child statements too\n\n\n                  break;\n\n                case \"SwitchStatement\":\n                  if (!parser.isPure(statement.discriminant, statement.range[0])) {\n                    sideEffectsStatement = statement;\n                  } // statement hook will be called for child statements too\n\n\n                  break;\n\n                case \"VariableDeclaration\":\n                case \"ClassDeclaration\":\n                case \"FunctionDeclaration\":\n                  if (!parser.isPure(statement, statement.range[0])) {\n                    sideEffectsStatement = statement;\n                  }\n\n                  break;\n\n                case \"ExportNamedDeclaration\":\n                case \"ExportDefaultDeclaration\":\n                  if (!parser.isPure(statement.declaration, statement.range[0])) {\n                    sideEffectsStatement = statement;\n                  }\n\n                  break;\n\n                case \"LabeledStatement\":\n                case \"BlockStatement\":\n                  // statement hook will be called for child statements too\n                  break;\n\n                case \"EmptyStatement\":\n                  break;\n\n                case \"ExportAllDeclaration\":\n                case \"ImportDeclaration\":\n                  // imports will be handled by the dependencies\n                  break;\n\n                default:\n                  sideEffectsStatement = statement;\n                  break;\n              }\n            });\n            parser.hooks.finish.tap(\"SideEffectsFlagPlugin\", function () {\n              if (sideEffectsStatement === undefined) {\n                parser.state.module.buildMeta.sideEffectFree = true;\n              } else {\n                var _sideEffectsStatement = sideEffectsStatement,\n                    loc = _sideEffectsStatement.loc,\n                    type = _sideEffectsStatement.type;\n                moduleGraph.getOptimizationBailout(parser.state.module).push(function () {\n                  return \"Statement (\".concat(type, \") with side effects in source code at \").concat(formatLocation(loc));\n                });\n              }\n            });\n          };\n\n          for (var _i = 0, _arr = [\"javascript/auto\", \"javascript/esm\", \"javascript/dynamic\"]; _i < _arr.length; _i++) {\n            var key = _arr[_i];\n            normalModuleFactory.hooks.parser.for(key).tap(\"SideEffectsFlagPlugin\", parserHandler);\n          }\n        }\n\n        compilation.hooks.optimizeDependencies.tap({\n          name: \"SideEffectsFlagPlugin\",\n          stage: STAGE_DEFAULT\n        }, function (modules) {\n          var logger = compilation.getLogger(\"webpack.SideEffectsFlagPlugin\");\n          logger.time(\"update dependencies\");\n\n          var _iterator = _createForOfIteratorHelper(modules),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _module = _step.value;\n\n              if (_module.getSideEffectsConnectionState(moduleGraph) === false) {\n                var exportsInfo = moduleGraph.getExportsInfo(_module);\n\n                var _iterator2 = _createForOfIteratorHelper(moduleGraph.getIncomingConnections(_module)),\n                    _step2;\n\n                try {\n                  var _loop = function _loop() {\n                    var connection = _step2.value;\n                    var dep = connection.dependency;\n                    var isReexport = void 0;\n\n                    if ((isReexport = dep instanceof HarmonyExportImportedSpecifierDependency) || dep instanceof HarmonyImportSpecifierDependency && !dep.namespaceObjectAsContext) {\n                      // TODO improve for export *\n                      if (isReexport && dep.name) {\n                        var exportInfo = moduleGraph.getExportInfo(connection.originModule, dep.name);\n                        exportInfo.moveTarget(moduleGraph, function (_ref2) {\n                          var module = _ref2.module;\n                          return module.getSideEffectsConnectionState(moduleGraph) === false;\n                        }, function (_ref3) {\n                          var newModule = _ref3.module,\n                              exportName = _ref3.export;\n                          moduleGraph.updateModule(dep, newModule);\n                          moduleGraph.addExplanation(dep, \"(skipped side-effect-free modules)\");\n                          var ids = dep.getIds(moduleGraph);\n                          dep.setIds(moduleGraph, exportName ? [].concat(_toConsumableArray(exportName), _toConsumableArray(ids.slice(1))) : ids.slice(1));\n                          return moduleGraph.getConnection(dep);\n                        });\n                        return \"continue\";\n                      } // TODO improve for nested imports\n\n\n                      var ids = dep.getIds(moduleGraph);\n\n                      if (ids.length > 0) {\n                        var _exportInfo = exportsInfo.getExportInfo(ids[0]);\n\n                        var target = _exportInfo.getTarget(moduleGraph, function (_ref4) {\n                          var module = _ref4.module;\n                          return module.getSideEffectsConnectionState(moduleGraph) === false;\n                        });\n\n                        if (!target) return \"continue\";\n                        moduleGraph.updateModule(dep, target.module);\n                        moduleGraph.addExplanation(dep, \"(skipped side-effect-free modules)\");\n                        dep.setIds(moduleGraph, target.export ? [].concat(_toConsumableArray(target.export), _toConsumableArray(ids.slice(1))) : ids.slice(1));\n                      }\n                    }\n                  };\n\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    var _ret = _loop();\n\n                    if (_ret === \"continue\") continue;\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          logger.timeEnd(\"update dependencies\");\n        });\n      });\n    }\n  }], [{\n    key: \"moduleHasSideEffects\",\n    value: function moduleHasSideEffects(moduleName, flagValue, cache) {\n      switch (typeof flagValue) {\n        case \"undefined\":\n          return true;\n\n        case \"boolean\":\n          return flagValue;\n\n        case \"string\":\n          return globToRegexp(flagValue, cache).test(moduleName);\n\n        case \"object\":\n          return flagValue.some(function (glob) {\n            return SideEffectsFlagPlugin.moduleHasSideEffects(moduleName, glob, cache);\n          });\n      }\n    }\n  }]);\n\n  return SideEffectsFlagPlugin;\n}();\n\nmodule.exports = SideEffectsFlagPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/optimize/SideEffectsFlagPlugin.js"],"names":["glob2regexp","require","STAGE_DEFAULT","HarmonyExportImportedSpecifierDependency","HarmonyImportSpecifierDependency","formatLocation","globToRegexpCache","WeakMap","globToRegexp","glob","cache","cacheEntry","get","undefined","includes","baseRegexp","globstar","extended","regexpSource","source","regexp","RegExp","slice","set","SideEffectsFlagPlugin","analyseSource","_analyseSource","compiler","root","Map","hooks","compilation","tap","normalModuleFactory","moduleGraph","module","data","resolveData","resourceResolveData","descriptionFileData","relativePath","sideEffects","factoryMeta","hasSideEffects","moduleHasSideEffects","sideEffectFree","settings","parserHandler","parser","sideEffectsStatement","program","statement","name","stage","scope","topLevelScope","type","isPure","expression","range","test","init","update","discriminant","declaration","finish","state","buildMeta","loc","getOptimizationBailout","push","key","for","optimizeDependencies","modules","logger","getLogger","time","getSideEffectsConnectionState","exportsInfo","getExportsInfo","getIncomingConnections","connection","dep","dependency","isReexport","namespaceObjectAsContext","exportInfo","getExportInfo","originModule","moveTarget","newModule","exportName","export","updateModule","addExplanation","ids","getIds","setIds","getConnection","length","target","getTarget","timeEnd","moduleName","flagValue","some","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst glob2regexp = require(\"glob-to-regexp\");\nconst { STAGE_DEFAULT } = require(\"../OptimizationStages\");\nconst HarmonyExportImportedSpecifierDependency = require(\"../dependencies/HarmonyExportImportedSpecifierDependency\");\nconst HarmonyImportSpecifierDependency = require(\"../dependencies/HarmonyImportSpecifierDependency\");\nconst formatLocation = require(\"../formatLocation\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\n/**\n * @typedef {Object} ExportInModule\n * @property {Module} module the module\n * @property {string} exportName the name of the export\n * @property {boolean} checked if the export is conditional\n */\n\n/**\n * @typedef {Object} ReexportInfo\n * @property {Map<string, ExportInModule[]>} static\n * @property {Map<Module, Set<string>>} dynamic\n */\n\n/** @type {WeakMap<any, Map<string, RegExp>>} */\nconst globToRegexpCache = new WeakMap();\n\n/**\n * @param {string} glob the pattern\n * @param {Map<string, RegExp>} cache the glob to RegExp cache\n * @returns {RegExp} a regular expression\n */\nconst globToRegexp = (glob, cache) => {\n\tconst cacheEntry = cache.get(glob);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\tif (!glob.includes(\"/\")) {\n\t\tglob = `**/${glob}`;\n\t}\n\tconst baseRegexp = glob2regexp(glob, { globstar: true, extended: true });\n\tconst regexpSource = baseRegexp.source;\n\tconst regexp = new RegExp(\"^(\\\\./)?\" + regexpSource.slice(1));\n\tcache.set(glob, regexp);\n\treturn regexp;\n};\n\nclass SideEffectsFlagPlugin {\n\t/**\n\t * @param {boolean} analyseSource analyse source code for side effects\n\t */\n\tconstructor(analyseSource = true) {\n\t\tthis._analyseSource = analyseSource;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tlet cache = globToRegexpCache.get(compiler.root);\n\t\tif (cache === undefined) {\n\t\t\tcache = new Map();\n\t\t\tglobToRegexpCache.set(compiler.root, cache);\n\t\t}\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SideEffectsFlagPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst moduleGraph = compilation.moduleGraph;\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\t\"SideEffectsFlagPlugin\",\n\t\t\t\t\t(module, data) => {\n\t\t\t\t\t\tconst resolveData = data.resourceResolveData;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tresolveData &&\n\t\t\t\t\t\t\tresolveData.descriptionFileData &&\n\t\t\t\t\t\t\tresolveData.relativePath\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst sideEffects = resolveData.descriptionFileData.sideEffects;\n\t\t\t\t\t\t\tif (sideEffects !== undefined) {\n\t\t\t\t\t\t\t\tif (module.factoryMeta === undefined) {\n\t\t\t\t\t\t\t\t\tmodule.factoryMeta = {};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst hasSideEffects =\n\t\t\t\t\t\t\t\t\tSideEffectsFlagPlugin.moduleHasSideEffects(\n\t\t\t\t\t\t\t\t\t\tresolveData.relativePath,\n\t\t\t\t\t\t\t\t\t\tsideEffects,\n\t\t\t\t\t\t\t\t\t\tcache\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tmodule.factoryMeta.sideEffectFree = !hasSideEffects;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn module;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\t\"SideEffectsFlagPlugin\",\n\t\t\t\t\t(module, data) => {\n\t\t\t\t\t\tif (typeof data.settings.sideEffects === \"boolean\") {\n\t\t\t\t\t\t\tif (module.factoryMeta === undefined) {\n\t\t\t\t\t\t\t\tmodule.factoryMeta = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmodule.factoryMeta.sideEffectFree = !data.settings.sideEffects;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn module;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (this._analyseSource) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {JavascriptParser} parser the parser\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst parserHandler = parser => {\n\t\t\t\t\t\tlet sideEffectsStatement;\n\t\t\t\t\t\tparser.hooks.program.tap(\"SideEffectsFlagPlugin\", () => {\n\t\t\t\t\t\t\tsideEffectsStatement = undefined;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.statement.tap(\n\t\t\t\t\t\t\t{ name: \"SideEffectsFlagPlugin\", stage: -100 },\n\t\t\t\t\t\t\tstatement => {\n\t\t\t\t\t\t\t\tif (sideEffectsStatement) return;\n\t\t\t\t\t\t\t\tif (parser.scope.topLevelScope !== true) return;\n\t\t\t\t\t\t\t\tswitch (statement.type) {\n\t\t\t\t\t\t\t\t\tcase \"ExpressionStatement\":\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(statement.expression, statement.range[0])\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"IfStatement\":\n\t\t\t\t\t\t\t\t\tcase \"WhileStatement\":\n\t\t\t\t\t\t\t\t\tcase \"DoWhileStatement\":\n\t\t\t\t\t\t\t\t\t\tif (!parser.isPure(statement.test, statement.range[0])) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// statement hook will be called for child statements too\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"ForStatement\":\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(statement.init, statement.range[0]) ||\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(\n\t\t\t\t\t\t\t\t\t\t\t\tstatement.test,\n\t\t\t\t\t\t\t\t\t\t\t\tstatement.init\n\t\t\t\t\t\t\t\t\t\t\t\t\t? statement.init.range[1]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: statement.range[0]\n\t\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(\n\t\t\t\t\t\t\t\t\t\t\t\tstatement.update,\n\t\t\t\t\t\t\t\t\t\t\t\tstatement.test\n\t\t\t\t\t\t\t\t\t\t\t\t\t? statement.test.range[1]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: statement.init\n\t\t\t\t\t\t\t\t\t\t\t\t\t? statement.init.range[1]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: statement.range[0]\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// statement hook will be called for child statements too\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"SwitchStatement\":\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(statement.discriminant, statement.range[0])\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// statement hook will be called for child statements too\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"VariableDeclaration\":\n\t\t\t\t\t\t\t\t\tcase \"ClassDeclaration\":\n\t\t\t\t\t\t\t\t\tcase \"FunctionDeclaration\":\n\t\t\t\t\t\t\t\t\t\tif (!parser.isPure(statement, statement.range[0])) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"ExportNamedDeclaration\":\n\t\t\t\t\t\t\t\t\tcase \"ExportDefaultDeclaration\":\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(statement.declaration, statement.range[0])\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"LabeledStatement\":\n\t\t\t\t\t\t\t\t\tcase \"BlockStatement\":\n\t\t\t\t\t\t\t\t\t\t// statement hook will be called for child statements too\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"EmptyStatement\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"ExportAllDeclaration\":\n\t\t\t\t\t\t\t\t\tcase \"ImportDeclaration\":\n\t\t\t\t\t\t\t\t\t\t// imports will be handled by the dependencies\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.finish.tap(\"SideEffectsFlagPlugin\", () => {\n\t\t\t\t\t\t\tif (sideEffectsStatement === undefined) {\n\t\t\t\t\t\t\t\tparser.state.module.buildMeta.sideEffectFree = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst { loc, type } = sideEffectsStatement;\n\t\t\t\t\t\t\t\tmoduleGraph\n\t\t\t\t\t\t\t\t\t.getOptimizationBailout(parser.state.module)\n\t\t\t\t\t\t\t\t\t.push(\n\t\t\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t\t\t`Statement (${type}) with side effects in source code at ${formatLocation(\n\t\t\t\t\t\t\t\t\t\t\t\tloc\n\t\t\t\t\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tfor (const key of [\n\t\t\t\t\t\t\"javascript/auto\",\n\t\t\t\t\t\t\"javascript/esm\",\n\t\t\t\t\t\t\"javascript/dynamic\"\n\t\t\t\t\t]) {\n\t\t\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"SideEffectsFlagPlugin\", parserHandler);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"SideEffectsFlagPlugin\",\n\t\t\t\t\t\tstage: STAGE_DEFAULT\n\t\t\t\t\t},\n\t\t\t\t\tmodules => {\n\t\t\t\t\t\tconst logger = compilation.getLogger(\n\t\t\t\t\t\t\t\"webpack.SideEffectsFlagPlugin\"\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tlogger.time(\"update dependencies\");\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\tif (module.getSideEffectsConnectionState(moduleGraph) === false) {\n\t\t\t\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\t\t\t\t\t\tfor (const connection of moduleGraph.getIncomingConnections(\n\t\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\tconst dep = connection.dependency;\n\t\t\t\t\t\t\t\t\tlet isReexport;\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t(isReexport =\n\t\t\t\t\t\t\t\t\t\t\tdep instanceof\n\t\t\t\t\t\t\t\t\t\t\tHarmonyExportImportedSpecifierDependency) ||\n\t\t\t\t\t\t\t\t\t\t(dep instanceof HarmonyImportSpecifierDependency &&\n\t\t\t\t\t\t\t\t\t\t\t!dep.namespaceObjectAsContext)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t// TODO improve for export *\n\t\t\t\t\t\t\t\t\t\tif (isReexport && dep.name) {\n\t\t\t\t\t\t\t\t\t\t\tconst exportInfo = moduleGraph.getExportInfo(\n\t\t\t\t\t\t\t\t\t\t\t\tconnection.originModule,\n\t\t\t\t\t\t\t\t\t\t\t\tdep.name\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\texportInfo.moveTarget(\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\t\t\t({ module }) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodule.getSideEffectsConnectionState(moduleGraph) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t({ module: newModule, export: exportName }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph.updateModule(dep, newModule);\n\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph.addExplanation(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"(skipped side-effect-free modules)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst ids = dep.getIds(moduleGraph);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdep.setIds(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\texportName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? [...exportName, ...ids.slice(1)]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ids.slice(1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moduleGraph.getConnection(dep);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// TODO improve for nested imports\n\t\t\t\t\t\t\t\t\t\tconst ids = dep.getIds(moduleGraph);\n\t\t\t\t\t\t\t\t\t\tif (ids.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\tconst exportInfo = exportsInfo.getExportInfo(ids[0]);\n\t\t\t\t\t\t\t\t\t\t\tconst target = exportInfo.getTarget(\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\t\t\t({ module }) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodule.getSideEffectsConnectionState(moduleGraph) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tif (!target) continue;\n\n\t\t\t\t\t\t\t\t\t\t\tmoduleGraph.updateModule(dep, target.module);\n\t\t\t\t\t\t\t\t\t\t\tmoduleGraph.addExplanation(\n\t\t\t\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\t\t\t\t\"(skipped side-effect-free modules)\"\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tdep.setIds(\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\t\t\ttarget.export\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [...target.export, ...ids.slice(1)]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: ids.slice(1)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlogger.timeEnd(\"update dependencies\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\tstatic moduleHasSideEffects(moduleName, flagValue, cache) {\n\t\tswitch (typeof flagValue) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn true;\n\t\t\tcase \"boolean\":\n\t\t\t\treturn flagValue;\n\t\t\tcase \"string\":\n\t\t\t\treturn globToRegexp(flagValue, cache).test(moduleName);\n\t\t\tcase \"object\":\n\t\t\t\treturn flagValue.some(glob =>\n\t\t\t\t\tSideEffectsFlagPlugin.moduleHasSideEffects(moduleName, glob, cache)\n\t\t\t\t);\n\t\t}\n\t}\n}\nmodule.exports = SideEffectsFlagPlugin;\n"]},"metadata":{},"sourceType":"script"}