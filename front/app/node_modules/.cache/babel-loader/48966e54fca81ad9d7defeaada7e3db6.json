{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar WebpackError = require(\"./WebpackError\");\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @template T\n * @callback Callback\n * @param {Error=} err\n * @param {T=} stats\n * @returns {void}\n */\n\n\nvar HookWebpackError = /*#__PURE__*/function (_WebpackError) {\n  _inherits(HookWebpackError, _WebpackError);\n\n  var _super = _createSuper(HookWebpackError);\n\n  /**\n   * Creates an instance of HookWebpackError.\n   * @param {Error} error inner error\n   * @param {string} hook name of hook\n   */\n  function HookWebpackError(error, hook) {\n    var _this;\n\n    _classCallCheck(this, HookWebpackError);\n\n    _this = _super.call(this, error.message);\n    _this.name = \"HookWebpackError\";\n    _this.hook = hook;\n    _this.error = error;\n    _this.hideStack = true;\n    _this.details = \"caused by plugins in \".concat(hook, \"\\n\").concat(error.stack);\n    _this.stack += \"\\n-- inner error --\\n\".concat(error.stack);\n    return _this;\n  }\n\n  return _createClass(HookWebpackError);\n}(WebpackError);\n\nmodule.exports = HookWebpackError;\n/**\n * @param {Error} error an error\n * @param {string} hook name of the hook\n * @returns {WebpackError} a webpack error\n */\n\nvar makeWebpackError = function makeWebpackError(error, hook) {\n  if (error instanceof WebpackError) return error;\n  return new HookWebpackError(error, hook);\n};\n\nmodule.exports.makeWebpackError = makeWebpackError;\n/**\n * @template T\n * @param {function((WebpackError | null)=, T=): void} callback webpack error callback\n * @param {string} hook name of hook\n * @returns {Callback<T>} generic callback\n */\n\nvar makeWebpackErrorCallback = function makeWebpackErrorCallback(callback, hook) {\n  return function (err, result) {\n    if (err) {\n      if (err instanceof WebpackError) {\n        callback(err);\n        return;\n      }\n\n      callback(new HookWebpackError(err, hook));\n      return;\n    }\n\n    callback(null, result);\n  };\n};\n\nmodule.exports.makeWebpackErrorCallback = makeWebpackErrorCallback;\n/**\n * @template T\n * @param {function(): T} fn function which will be wrapping in try catch\n * @param {string} hook name of hook\n * @returns {T} the result\n */\n\nvar tryRunOrWebpackError = function tryRunOrWebpackError(fn, hook) {\n  var r;\n\n  try {\n    r = fn();\n  } catch (err) {\n    if (err instanceof WebpackError) {\n      throw err;\n    }\n\n    throw new HookWebpackError(err, hook);\n  }\n\n  return r;\n};\n\nmodule.exports.tryRunOrWebpackError = tryRunOrWebpackError;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/HookWebpackError.js"],"names":["WebpackError","require","HookWebpackError","error","hook","message","name","hideStack","details","stack","module","exports","makeWebpackError","makeWebpackErrorCallback","callback","err","result","tryRunOrWebpackError","fn","r"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMC,gB;;;;;AACL;AACD;AACA;AACA;AACA;AACC,4BAAYC,KAAZ,EAAmBC,IAAnB,EAAyB;AAAA;;AAAA;;AACxB,8BAAMD,KAAK,CAACE,OAAZ;AAEA,UAAKC,IAAL,GAAY,kBAAZ;AACA,UAAKF,IAAL,GAAYA,IAAZ;AACA,UAAKD,KAAL,GAAaA,KAAb;AACA,UAAKI,SAAL,GAAiB,IAAjB;AACA,UAAKC,OAAL,kCAAuCJ,IAAvC,eAAgDD,KAAK,CAACM,KAAtD;AAEA,UAAKA,KAAL,mCAAsCN,KAAK,CAACM,KAA5C;AATwB;AAUxB;;;EAhB6BT,Y;;AAmB/BU,MAAM,CAACC,OAAP,GAAiBT,gBAAjB;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACT,KAAD,EAAQC,IAAR,EAAiB;AACzC,MAAID,KAAK,YAAYH,YAArB,EAAmC,OAAOG,KAAP;AACnC,SAAO,IAAID,gBAAJ,CAAqBC,KAArB,EAA4BC,IAA5B,CAAP;AACA,CAHD;;AAIAM,MAAM,CAACC,OAAP,CAAeC,gBAAf,GAAkCA,gBAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,QAAD,EAAWV,IAAX,EAAoB;AACpD,SAAO,UAACW,GAAD,EAAMC,MAAN,EAAiB;AACvB,QAAID,GAAJ,EAAS;AACR,UAAIA,GAAG,YAAYf,YAAnB,EAAiC;AAChCc,QAAAA,QAAQ,CAACC,GAAD,CAAR;AACA;AACA;;AACDD,MAAAA,QAAQ,CAAC,IAAIZ,gBAAJ,CAAqBa,GAArB,EAA0BX,IAA1B,CAAD,CAAR;AACA;AACA;;AACDU,IAAAA,QAAQ,CAAC,IAAD,EAAOE,MAAP,CAAR;AACA,GAVD;AAWA,CAZD;;AAcAN,MAAM,CAACC,OAAP,CAAeE,wBAAf,GAA0CA,wBAA1C;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,EAAD,EAAKd,IAAL,EAAc;AAC1C,MAAIe,CAAJ;;AACA,MAAI;AACHA,IAAAA,CAAC,GAAGD,EAAE,EAAN;AACA,GAFD,CAEE,OAAOH,GAAP,EAAY;AACb,QAAIA,GAAG,YAAYf,YAAnB,EAAiC;AAChC,YAAMe,GAAN;AACA;;AACD,UAAM,IAAIb,gBAAJ,CAAqBa,GAArB,EAA0BX,IAA1B,CAAN;AACA;;AACD,SAAOe,CAAP;AACA,CAXD;;AAaAT,MAAM,CAACC,OAAP,CAAeM,oBAAf,GAAsCA,oBAAtC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @template T\n * @callback Callback\n * @param {Error=} err\n * @param {T=} stats\n * @returns {void}\n */\n\nclass HookWebpackError extends WebpackError {\n\t/**\n\t * Creates an instance of HookWebpackError.\n\t * @param {Error} error inner error\n\t * @param {string} hook name of hook\n\t */\n\tconstructor(error, hook) {\n\t\tsuper(error.message);\n\n\t\tthis.name = \"HookWebpackError\";\n\t\tthis.hook = hook;\n\t\tthis.error = error;\n\t\tthis.hideStack = true;\n\t\tthis.details = `caused by plugins in ${hook}\\n${error.stack}`;\n\n\t\tthis.stack += `\\n-- inner error --\\n${error.stack}`;\n\t}\n}\n\nmodule.exports = HookWebpackError;\n\n/**\n * @param {Error} error an error\n * @param {string} hook name of the hook\n * @returns {WebpackError} a webpack error\n */\nconst makeWebpackError = (error, hook) => {\n\tif (error instanceof WebpackError) return error;\n\treturn new HookWebpackError(error, hook);\n};\nmodule.exports.makeWebpackError = makeWebpackError;\n\n/**\n * @template T\n * @param {function((WebpackError | null)=, T=): void} callback webpack error callback\n * @param {string} hook name of hook\n * @returns {Callback<T>} generic callback\n */\nconst makeWebpackErrorCallback = (callback, hook) => {\n\treturn (err, result) => {\n\t\tif (err) {\n\t\t\tif (err instanceof WebpackError) {\n\t\t\t\tcallback(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallback(new HookWebpackError(err, hook));\n\t\t\treturn;\n\t\t}\n\t\tcallback(null, result);\n\t};\n};\n\nmodule.exports.makeWebpackErrorCallback = makeWebpackErrorCallback;\n\n/**\n * @template T\n * @param {function(): T} fn function which will be wrapping in try catch\n * @param {string} hook name of hook\n * @returns {T} the result\n */\nconst tryRunOrWebpackError = (fn, hook) => {\n\tlet r;\n\ttry {\n\t\tr = fn();\n\t} catch (err) {\n\t\tif (err instanceof WebpackError) {\n\t\t\tthrow err;\n\t\t}\n\t\tthrow new HookWebpackError(err, hook);\n\t}\n\treturn r;\n};\n\nmodule.exports.tryRunOrWebpackError = tryRunOrWebpackError;\n"]},"metadata":{},"sourceType":"script"}