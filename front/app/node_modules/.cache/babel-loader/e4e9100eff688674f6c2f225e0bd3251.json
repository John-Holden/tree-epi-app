{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Naoyuki Kanezawa @nkzawa\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar EntryOptionPlugin = require(\"./EntryOptionPlugin\");\n\nvar EntryPlugin = require(\"./EntryPlugin\");\n\nvar EntryDependency = require(\"./dependencies/EntryDependency\");\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDynamicNormalized} EntryDynamic */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryItem} EntryItem */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryStaticNormalized} EntryStatic */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nvar DynamicEntryPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string} context the context path\n   * @param {EntryDynamic} entry the entry value\n   */\n  function DynamicEntryPlugin(context, entry) {\n    _classCallCheck(this, DynamicEntryPlugin);\n\n    this.context = context;\n    this.entry = entry;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(DynamicEntryPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"DynamicEntryPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(EntryDependency, normalModuleFactory);\n      });\n      compiler.hooks.make.tapPromise(\"DynamicEntryPlugin\", function (compilation, callback) {\n        return Promise.resolve(_this.entry()).then(function (entry) {\n          var promises = [];\n\n          var _loop = function _loop() {\n            var name = _Object$keys[_i];\n            var desc = entry[name];\n            var options = EntryOptionPlugin.entryDescriptionToOptions(compiler, name, desc);\n\n            var _iterator = _createForOfIteratorHelper(desc.import),\n                _step;\n\n            try {\n              var _loop2 = function _loop2() {\n                var entry = _step.value;\n                promises.push(new Promise(function (resolve, reject) {\n                  compilation.addEntry(_this.context, EntryPlugin.createDependency(entry, options), options, function (err) {\n                    if (err) return reject(err);\n                    resolve();\n                  });\n                }));\n              };\n\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                _loop2();\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          };\n\n          for (var _i = 0, _Object$keys = Object.keys(entry); _i < _Object$keys.length; _i++) {\n            _loop();\n          }\n\n          return Promise.all(promises);\n        }).then(function (x) {});\n      });\n    }\n  }]);\n\n  return DynamicEntryPlugin;\n}();\n\nmodule.exports = DynamicEntryPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/DynamicEntryPlugin.js"],"names":["EntryOptionPlugin","require","EntryPlugin","EntryDependency","DynamicEntryPlugin","context","entry","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","make","tapPromise","callback","Promise","resolve","then","promises","name","desc","options","entryDescriptionToOptions","import","push","reject","addEntry","createDependency","err","Object","keys","all","x","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAME,eAAe,GAAGF,OAAO,CAAC,gCAAD,CAA/B;AAEA;;AACA;;AACA;;AACA;;;IAEMG,kB;AACL;AACD;AACA;AACA;AACC,8BAAYC,OAAZ,EAAqBC,KAArB,EAA4B;AAAA;;AAC3B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA;AAED;AACD;AACA;AACA;AACA;;;;;WACC,eAAMC,QAAN,EAAgB;AAAA;;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,oBADD,EAEC,UAACD,WAAD,QAA0C;AAAA,YAA1BE,mBAA0B,QAA1BA,mBAA0B;AACzCF,QAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCV,eADD,EAECQ,mBAFD;AAIA,OAPF;AAUAJ,MAAAA,QAAQ,CAACC,KAAT,CAAeM,IAAf,CAAoBC,UAApB,CACC,oBADD,EAEC,UAACN,WAAD,EAAcO,QAAd;AAAA,eACCC,OAAO,CAACC,OAAR,CAAgB,KAAI,CAACZ,KAAL,EAAhB,EACEa,IADF,CACO,UAAAb,KAAK,EAAI;AACd,cAAMc,QAAQ,GAAG,EAAjB;;AADc;AAET,gBAAMC,IAAI,mBAAV;AACJ,gBAAMC,IAAI,GAAGhB,KAAK,CAACe,IAAD,CAAlB;AACA,gBAAME,OAAO,GAAGvB,iBAAiB,CAACwB,yBAAlB,CACfjB,QADe,EAEfc,IAFe,EAGfC,IAHe,CAAhB;;AAJa,uDASOA,IAAI,CAACG,MATZ;AAAA;;AAAA;AAAA;AAAA,oBASFnB,KATE;AAUZc,gBAAAA,QAAQ,CAACM,IAAT,CACC,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUS,MAAV,EAAqB;AAChClB,kBAAAA,WAAW,CAACmB,QAAZ,CACC,KAAI,CAACvB,OADN,EAECH,WAAW,CAAC2B,gBAAZ,CAA6BvB,KAA7B,EAAoCiB,OAApC,CAFD,EAGCA,OAHD,EAIC,UAAAO,GAAG,EAAI;AACN,wBAAIA,GAAJ,EAAS,OAAOH,MAAM,CAACG,GAAD,CAAb;AACTZ,oBAAAA,OAAO;AACP,mBAPF;AASA,iBAVD,CADD;AAVY;;AASb,kEAAiC;AAAA;AAchC;AAvBY;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEd,0CAAmBa,MAAM,CAACC,IAAP,CAAY1B,KAAZ,CAAnB,kCAAuC;AAAA;AAsBtC;;AACD,iBAAOW,OAAO,CAACgB,GAAR,CAAYb,QAAZ,CAAP;AACA,SA3BF,EA4BED,IA5BF,CA4BO,UAAAe,CAAC,EAAI,CAAE,CA5Bd,CADD;AAAA,OAFD;AAiCA;;;;;;AAGFC,MAAM,CAACC,OAAP,GAAiBhC,kBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Naoyuki Kanezawa @nkzawa\n*/\n\n\"use strict\";\n\nconst EntryOptionPlugin = require(\"./EntryOptionPlugin\");\nconst EntryPlugin = require(\"./EntryPlugin\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDynamicNormalized} EntryDynamic */\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryItem} EntryItem */\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryStaticNormalized} EntryStatic */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass DynamicEntryPlugin {\n\t/**\n\t * @param {string} context the context path\n\t * @param {EntryDynamic} entry the entry value\n\t */\n\tconstructor(context, entry) {\n\t\tthis.context = context;\n\t\tthis.entry = entry;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DynamicEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.make.tapPromise(\n\t\t\t\"DynamicEntryPlugin\",\n\t\t\t(compilation, callback) =>\n\t\t\t\tPromise.resolve(this.entry())\n\t\t\t\t\t.then(entry => {\n\t\t\t\t\t\tconst promises = [];\n\t\t\t\t\t\tfor (const name of Object.keys(entry)) {\n\t\t\t\t\t\t\tconst desc = entry[name];\n\t\t\t\t\t\t\tconst options = EntryOptionPlugin.entryDescriptionToOptions(\n\t\t\t\t\t\t\t\tcompiler,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tdesc\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tfor (const entry of desc.import) {\n\t\t\t\t\t\t\t\tpromises.push(\n\t\t\t\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\t\t\tcompilation.addEntry(\n\t\t\t\t\t\t\t\t\t\t\tthis.context,\n\t\t\t\t\t\t\t\t\t\t\tEntryPlugin.createDependency(entry, options),\n\t\t\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (err) return reject(err);\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Promise.all(promises);\n\t\t\t\t\t})\n\t\t\t\t\t.then(x => {})\n\t\t);\n\t}\n}\n\nmodule.exports = DynamicEntryPlugin;\n"]},"metadata":{},"sourceType":"script"}