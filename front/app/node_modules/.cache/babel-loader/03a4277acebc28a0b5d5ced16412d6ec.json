{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _slicedToArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require(\"./util/runtime\"),\n    getEntryRuntime = _require.getEntryRuntime,\n    mergeRuntimeOwned = _require.mergeRuntimeOwned;\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nvar FlagAllModulesAsUsedPlugin = /*#__PURE__*/function () {\n  function FlagAllModulesAsUsedPlugin(explanation) {\n    _classCallCheck(this, FlagAllModulesAsUsedPlugin);\n\n    this.explanation = explanation;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(FlagAllModulesAsUsedPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"FlagAllModulesAsUsedPlugin\", function (compilation) {\n        var moduleGraph = compilation.moduleGraph;\n        compilation.hooks.optimizeDependencies.tap(\"FlagAllModulesAsUsedPlugin\", function (modules) {\n          /** @type {RuntimeSpec} */\n          var runtime = undefined;\n\n          var _iterator = _createForOfIteratorHelper(compilation.entries),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                  name = _step$value[0],\n                  options = _step$value[1].options;\n\n              runtime = mergeRuntimeOwned(runtime, getEntryRuntime(compilation, name, options));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(modules),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _module = _step2.value;\n              var exportsInfo = moduleGraph.getExportsInfo(_module);\n              exportsInfo.setUsedInUnknownWay(runtime);\n              moduleGraph.addExtraReason(_module, _this.explanation);\n\n              if (_module.factoryMeta === undefined) {\n                _module.factoryMeta = {};\n              }\n\n              _module.factoryMeta.sideEffectFree = false;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        });\n      });\n    }\n  }]);\n\n  return FlagAllModulesAsUsedPlugin;\n}();\n\nmodule.exports = FlagAllModulesAsUsedPlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/FlagAllModulesAsUsedPlugin.js"],"names":["require","getEntryRuntime","mergeRuntimeOwned","FlagAllModulesAsUsedPlugin","explanation","compiler","hooks","compilation","tap","moduleGraph","optimizeDependencies","modules","runtime","undefined","entries","name","options","module","exportsInfo","getExportsInfo","setUsedInUnknownWay","addExtraReason","factoryMeta","sideEffectFree","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAEA,eAA+CA,OAAO,CAAC,gBAAD,CAAtD;AAAA,IAAQC,eAAR,YAAQA,eAAR;AAAA,IAAyBC,iBAAzB,YAAyBA,iBAAzB;AAEA;;AACA;;;IAEMC,0B;AACL,sCAAYC,WAAZ,EAAyB;AAAA;;AACxB,SAAKA,WAAL,GAAmBA,WAAnB;AACA;AAED;AACD;AACA;AACA;AACA;;;;;WACC,eAAMC,QAAN,EAAgB;AAAA;;AACfA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,4BADD,EAEC,UAAAD,WAAW,EAAI;AACd,YAAME,WAAW,GAAGF,WAAW,CAACE,WAAhC;AACAF,QAAAA,WAAW,CAACD,KAAZ,CAAkBI,oBAAlB,CAAuCF,GAAvC,CACC,4BADD,EAEC,UAAAG,OAAO,EAAI;AACV;AACA,cAAIC,OAAO,GAAGC,SAAd;;AAFU,qDAGwBN,WAAW,CAACO,OAHpC;AAAA;;AAAA;AAGV,gEAAuD;AAAA;AAAA,kBAA3CC,IAA2C;AAAA,kBAAnCC,OAAmC,kBAAnCA,OAAmC;;AACtDJ,cAAAA,OAAO,GAAGV,iBAAiB,CAC1BU,OAD0B,EAE1BX,eAAe,CAACM,WAAD,EAAcQ,IAAd,EAAoBC,OAApB,CAFW,CAA3B;AAIA;AARS;AAAA;AAAA;AAAA;AAAA;;AAAA,sDASWL,OATX;AAAA;;AAAA;AASV,mEAA8B;AAAA,kBAAnBM,OAAmB;AAC7B,kBAAMC,WAAW,GAAGT,WAAW,CAACU,cAAZ,CAA2BF,OAA3B,CAApB;AACAC,cAAAA,WAAW,CAACE,mBAAZ,CAAgCR,OAAhC;AACAH,cAAAA,WAAW,CAACY,cAAZ,CAA2BJ,OAA3B,EAAmC,KAAI,CAACb,WAAxC;;AACA,kBAAIa,OAAM,CAACK,WAAP,KAAuBT,SAA3B,EAAsC;AACrCI,gBAAAA,OAAM,CAACK,WAAP,GAAqB,EAArB;AACA;;AACDL,cAAAA,OAAM,CAACK,WAAP,CAAmBC,cAAnB,GAAoC,KAApC;AACA;AAjBS;AAAA;AAAA;AAAA;AAAA;AAkBV,SApBF;AAsBA,OA1BF;AA4BA;;;;;;AAGFN,MAAM,CAACO,OAAP,GAAiBrB,0BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { getEntryRuntime, mergeRuntimeOwned } = require(\"./util/runtime\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass FlagAllModulesAsUsedPlugin {\n\tconstructor(explanation) {\n\t\tthis.explanation = explanation;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"FlagAllModulesAsUsedPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst moduleGraph = compilation.moduleGraph;\n\t\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\t\"FlagAllModulesAsUsedPlugin\",\n\t\t\t\t\tmodules => {\n\t\t\t\t\t\t/** @type {RuntimeSpec} */\n\t\t\t\t\t\tlet runtime = undefined;\n\t\t\t\t\t\tfor (const [name, { options }] of compilation.entries) {\n\t\t\t\t\t\t\truntime = mergeRuntimeOwned(\n\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\tgetEntryRuntime(compilation, name, options)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\t\t\t\t\texportsInfo.setUsedInUnknownWay(runtime);\n\t\t\t\t\t\t\tmoduleGraph.addExtraReason(module, this.explanation);\n\t\t\t\t\t\t\tif (module.factoryMeta === undefined) {\n\t\t\t\t\t\t\t\tmodule.factoryMeta = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmodule.factoryMeta.sideEffectFree = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = FlagAllModulesAsUsedPlugin;\n"]},"metadata":{},"sourceType":"script"}