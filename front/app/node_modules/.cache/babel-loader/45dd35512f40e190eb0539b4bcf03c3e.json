{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _defineProperty = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _slicedToArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _toConsumableArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _objectSpread = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _objectWithoutProperties = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _excluded = [\"fn\", \"additionalAssets\"];\n\nvar asyncLib = require(\"neo-async\");\n\nvar _require = require(\"tapable\"),\n    HookMap = _require.HookMap,\n    SyncHook = _require.SyncHook,\n    SyncBailHook = _require.SyncBailHook,\n    SyncWaterfallHook = _require.SyncWaterfallHook,\n    AsyncSeriesHook = _require.AsyncSeriesHook,\n    AsyncSeriesBailHook = _require.AsyncSeriesBailHook,\n    AsyncParallelHook = _require.AsyncParallelHook;\n\nvar util = require(\"util\");\n\nvar _require2 = require(\"webpack-sources\"),\n    CachedSource = _require2.CachedSource;\n\nvar _require3 = require(\"./CacheFacade\"),\n    MultiItemCache = _require3.MultiItemCache;\n\nvar Chunk = require(\"./Chunk\");\n\nvar ChunkGraph = require(\"./ChunkGraph\");\n\nvar ChunkGroup = require(\"./ChunkGroup\");\n\nvar ChunkRenderError = require(\"./ChunkRenderError\");\n\nvar ChunkTemplate = require(\"./ChunkTemplate\");\n\nvar CodeGenerationError = require(\"./CodeGenerationError\");\n\nvar CodeGenerationResults = require(\"./CodeGenerationResults\");\n\nvar Dependency = require(\"./Dependency\");\n\nvar DependencyTemplates = require(\"./DependencyTemplates\");\n\nvar Entrypoint = require(\"./Entrypoint\");\n\nvar ErrorHelpers = require(\"./ErrorHelpers\");\n\nvar FileSystemInfo = require(\"./FileSystemInfo\");\n\nvar _require4 = require(\"./GraphHelpers\"),\n    connectChunkGroupAndChunk = _require4.connectChunkGroupAndChunk,\n    connectChunkGroupParentAndChild = _require4.connectChunkGroupParentAndChild;\n\nvar _require5 = require(\"./HookWebpackError\"),\n    makeWebpackError = _require5.makeWebpackError,\n    tryRunOrWebpackError = _require5.tryRunOrWebpackError;\n\nvar MainTemplate = require(\"./MainTemplate\");\n\nvar Module = require(\"./Module\");\n\nvar ModuleDependencyError = require(\"./ModuleDependencyError\");\n\nvar ModuleDependencyWarning = require(\"./ModuleDependencyWarning\");\n\nvar ModuleGraph = require(\"./ModuleGraph\");\n\nvar ModuleNotFoundError = require(\"./ModuleNotFoundError\");\n\nvar ModuleProfile = require(\"./ModuleProfile\");\n\nvar ModuleRestoreError = require(\"./ModuleRestoreError\");\n\nvar ModuleStoreError = require(\"./ModuleStoreError\");\n\nvar ModuleTemplate = require(\"./ModuleTemplate\");\n\nvar RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nvar RuntimeTemplate = require(\"./RuntimeTemplate\");\n\nvar Stats = require(\"./Stats\");\n\nvar WebpackError = require(\"./WebpackError\");\n\nvar buildChunkGraph = require(\"./buildChunkGraph\");\n\nvar BuildCycleError = require(\"./errors/BuildCycleError\");\n\nvar _require6 = require(\"./logging/Logger\"),\n    Logger = _require6.Logger,\n    LogType = _require6.LogType;\n\nvar StatsFactory = require(\"./stats/StatsFactory\");\n\nvar StatsPrinter = require(\"./stats/StatsPrinter\");\n\nvar _require7 = require(\"./util/ArrayHelpers\"),\n    arrayEquals = _require7.equals;\n\nvar AsyncQueue = require(\"./util/AsyncQueue\");\n\nvar LazySet = require(\"./util/LazySet\");\n\nvar _require8 = require(\"./util/MapHelpers\"),\n    provide = _require8.provide;\n\nvar WeakTupleMap = require(\"./util/WeakTupleMap\");\n\nvar _require9 = require(\"./util/cleverMerge\"),\n    cachedCleverMerge = _require9.cachedCleverMerge;\n\nvar _require10 = require(\"./util/comparators\"),\n    compareLocations = _require10.compareLocations,\n    concatComparators = _require10.concatComparators,\n    compareSelect = _require10.compareSelect,\n    compareIds = _require10.compareIds,\n    compareStringsNumeric = _require10.compareStringsNumeric,\n    compareModulesByIdentifier = _require10.compareModulesByIdentifier;\n\nvar _createHash = require(\"./util/createHash\");\n\nvar _require11 = require(\"./util/deprecation\"),\n    arrayToSetDeprecation = _require11.arrayToSetDeprecation,\n    soonFrozenObjectDeprecation = _require11.soonFrozenObjectDeprecation,\n    createFakeHook = _require11.createFakeHook;\n\nvar processAsyncTree = require(\"./util/processAsyncTree\");\n\nvar _require12 = require(\"./util/runtime\"),\n    getRuntimeKey = _require12.getRuntimeKey;\n\nvar _require13 = require(\"./util/source\"),\n    isSourceEqual = _require13.isSourceEqual;\n/** @template T @typedef {import(\"tapable\").AsArray<T>} AsArray<T> */\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDescriptionNormalized} EntryDescription */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginFunction} WebpackPluginFunction */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginInstance} WebpackPluginInstance */\n\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n\n/** @typedef {import(\"./Cache\")} Cache */\n\n/** @typedef {import(\"./CacheFacade\")} CacheFacade */\n\n/** @typedef {import(\"./ChunkGroup\").ChunkGroupOptions} ChunkGroupOptions */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./Compiler\").CompilationParams} CompilationParams */\n\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n\n/** @typedef {import(\"./Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"./DependencyTemplate\")} DependencyTemplate */\n\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./ModuleFactory\")} ModuleFactory */\n\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryCreateDataContextInfo} ModuleFactoryCreateDataContextInfo */\n\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./RuntimeModule\")} RuntimeModule */\n\n/** @typedef {import(\"./Template\").RenderManifestEntry} RenderManifestEntry */\n\n/** @typedef {import(\"./Template\").RenderManifestOptions} RenderManifestOptions */\n\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsAsset} StatsAsset */\n\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsError} StatsError */\n\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsModule} StatsModule */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @template T @typedef {import(\"./util/deprecation\").FakeHook<T>} FakeHook<T> */\n\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @callback Callback\n * @param {(WebpackError | null)=} err\n * @returns {void}\n */\n\n/**\n * @callback ModuleCallback\n * @param {(WebpackError | null)=} err\n * @param {Module=} result\n * @returns {void}\n */\n\n/**\n * @callback ModuleFactoryResultCallback\n * @param {(WebpackError | null)=} err\n * @param {ModuleFactoryResult=} result\n * @returns {void}\n */\n\n/**\n * @callback ModuleOrFactoryResultCallback\n * @param {(WebpackError | null)=} err\n * @param {Module | ModuleFactoryResult=} result\n * @returns {void}\n */\n\n/**\n * @callback ExecuteModuleCallback\n * @param {(WebpackError | null)=} err\n * @param {ExecuteModuleResult=} result\n * @returns {void}\n */\n\n/**\n * @callback DepBlockVarDependenciesCallback\n * @param {Dependency} dependency\n * @returns {any}\n */\n\n/** @typedef {new (...args: any[]) => Dependency} DepConstructor */\n\n/** @typedef {Record<string, Source>} CompilationAssets */\n\n/**\n * @typedef {Object} AvailableModulesChunkGroupMapping\n * @property {ChunkGroup} chunkGroup\n * @property {Set<Module>} availableModules\n * @property {boolean} needCopy\n */\n\n/**\n * @typedef {Object} DependenciesBlockLike\n * @property {Dependency[]} dependencies\n * @property {AsyncDependenciesBlock[]} blocks\n */\n\n/**\n * @typedef {Object} ChunkPathData\n * @property {string|number} id\n * @property {string=} name\n * @property {string} hash\n * @property {function(number): string=} hashWithLength\n * @property {(Record<string, string>)=} contentHash\n * @property {(Record<string, (length: number) => string>)=} contentHashWithLength\n */\n\n/**\n * @typedef {Object} ChunkHashContext\n * @property {CodeGenerationResults} codeGenerationResults results of code generation\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {ModuleGraph} moduleGraph the module graph\n * @property {ChunkGraph} chunkGraph the chunk graph\n */\n\n/**\n * @typedef {Object} RuntimeRequirementsContext\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {CodeGenerationResults} codeGenerationResults the code generation results\n */\n\n/**\n * @typedef {Object} ExecuteModuleOptions\n * @property {EntryOptions=} entryOptions\n */\n\n/**\n * @typedef {Object} ExecuteModuleResult\n * @property {any} exports\n * @property {boolean} cacheable\n * @property {Map<string, { source: Source, info: AssetInfo }>} assets\n * @property {LazySet<string>} fileDependencies\n * @property {LazySet<string>} contextDependencies\n * @property {LazySet<string>} missingDependencies\n * @property {LazySet<string>} buildDependencies\n */\n\n/**\n * @typedef {Object} ExecuteModuleArgument\n * @property {Module} module\n * @property {{ id: string, exports: any, loaded: boolean }=} moduleObject\n * @property {any} preparedInfo\n * @property {CodeGenerationResult} codeGenerationResult\n */\n\n/**\n * @typedef {Object} ExecuteModuleContext\n * @property {Map<string, { source: Source, info: AssetInfo }>} assets\n * @property {Chunk} chunk\n * @property {ChunkGraph} chunkGraph\n * @property {function(string): any=} __webpack_require__\n */\n\n/**\n * @typedef {Object} EntryData\n * @property {Dependency[]} dependencies dependencies of the entrypoint that should be evaluated at startup\n * @property {Dependency[]} includeDependencies dependencies of the entrypoint that should be included but not evaluated\n * @property {EntryOptions} options options of the entrypoint\n */\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} type\n * @property {any[]} args\n * @property {number} time\n * @property {string[]=} trace\n */\n\n/**\n * @typedef {Object} KnownAssetInfo\n * @property {boolean=} immutable true, if the asset can be long term cached forever (contains a hash)\n * @property {boolean=} minimized whether the asset is minimized\n * @property {string | string[]=} fullhash the value(s) of the full hash used for this asset\n * @property {string | string[]=} chunkhash the value(s) of the chunk hash used for this asset\n * @property {string | string[]=} modulehash the value(s) of the module hash used for this asset\n * @property {string | string[]=} contenthash the value(s) of the content hash used for this asset\n * @property {string=} sourceFilename when asset was created from a source file (potentially transformed), the original filename relative to compilation context\n * @property {number=} size size in bytes, only set after asset has been emitted\n * @property {boolean=} development true, when asset is only used for development and doesn't count towards user-facing assets\n * @property {boolean=} hotModuleReplacement true, when asset ships data for updating an existing application (HMR)\n * @property {boolean=} javascriptModule true, when asset is javascript and an ESM\n * @property {Record<string, string | string[]>=} related object of pointers to other assets, keyed by type of relation (only points from parent to child)\n */\n\n/** @typedef {KnownAssetInfo & Record<string, any>} AssetInfo */\n\n/**\n * @typedef {Object} Asset\n * @property {string} name the filename of the asset\n * @property {Source} source source of the asset\n * @property {AssetInfo} info info about the asset\n */\n\n/**\n * @typedef {Object} ModulePathData\n * @property {string|number} id\n * @property {string} hash\n * @property {function(number): string=} hashWithLength\n */\n\n/**\n * @typedef {Object} PathData\n * @property {ChunkGraph=} chunkGraph\n * @property {string=} hash\n * @property {function(number): string=} hashWithLength\n * @property {(Chunk|ChunkPathData)=} chunk\n * @property {(Module|ModulePathData)=} module\n * @property {RuntimeSpec=} runtime\n * @property {string=} filename\n * @property {string=} basename\n * @property {string=} query\n * @property {string=} contentHashType\n * @property {string=} contentHash\n * @property {function(number): string=} contentHashWithLength\n * @property {boolean=} noChunkHash\n * @property {string=} url\n */\n\n/**\n * @typedef {Object} KnownNormalizedStatsOptions\n * @property {string} context\n * @property {RequestShortener} requestShortener\n * @property {string} chunksSort\n * @property {string} modulesSort\n * @property {string} chunkModulesSort\n * @property {string} nestedModulesSort\n * @property {string} assetsSort\n * @property {boolean} ids\n * @property {boolean} cachedAssets\n * @property {boolean} groupAssetsByEmitStatus\n * @property {boolean} groupAssetsByPath\n * @property {boolean} groupAssetsByExtension\n * @property {number} assetsSpace\n * @property {((value: string, asset: StatsAsset) => boolean)[]} excludeAssets\n * @property {((name: string, module: StatsModule, type: \"module\" | \"chunk\" | \"root-of-chunk\" | \"nested\") => boolean)[]} excludeModules\n * @property {((warning: StatsError, textValue: string) => boolean)[]} warningsFilter\n * @property {boolean} cachedModules\n * @property {boolean} orphanModules\n * @property {boolean} dependentModules\n * @property {boolean} runtimeModules\n * @property {boolean} groupModulesByCacheStatus\n * @property {boolean} groupModulesByLayer\n * @property {boolean} groupModulesByAttributes\n * @property {boolean} groupModulesByPath\n * @property {boolean} groupModulesByExtension\n * @property {boolean} groupModulesByType\n * @property {boolean | \"auto\"} entrypoints\n * @property {boolean} chunkGroups\n * @property {boolean} chunkGroupAuxiliary\n * @property {boolean} chunkGroupChildren\n * @property {number} chunkGroupMaxAssets\n * @property {number} modulesSpace\n * @property {number} chunkModulesSpace\n * @property {number} nestedModulesSpace\n * @property {false|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} logging\n * @property {((value: string) => boolean)[]} loggingDebug\n * @property {boolean} loggingTrace\n * @property {any} _env\n */\n\n/** @typedef {KnownNormalizedStatsOptions & Omit<StatsOptions, keyof KnownNormalizedStatsOptions> & Record<string, any>} NormalizedStatsOptions */\n\n/**\n * @typedef {Object} KnownCreateStatsOptionsContext\n * @property {boolean=} forToString\n */\n\n/** @typedef {KnownCreateStatsOptionsContext & Record<string, any>} CreateStatsOptionsContext */\n\n/** @type {AssetInfo} */\n\n\nvar EMPTY_ASSET_INFO = Object.freeze({});\nvar esmDependencyCategory = \"esm\"; // TODO webpack 6: remove\n\nvar deprecatedNormalModuleLoaderHook = util.deprecate(function (compilation) {\n  return require(\"./NormalModule\").getCompilationHooks(compilation).loader;\n}, \"Compilation.hooks.normalModuleLoader was moved to NormalModule.getCompilationHooks(compilation).loader\", \"DEP_WEBPACK_COMPILATION_NORMAL_MODULE_LOADER_HOOK\"); // TODO webpack 6: remove\n\nvar defineRemovedModuleTemplates = function defineRemovedModuleTemplates(moduleTemplates) {\n  Object.defineProperties(moduleTemplates, {\n    asset: {\n      enumerable: false,\n      configurable: false,\n      get: function get() {\n        throw new WebpackError(\"Compilation.moduleTemplates.asset has been removed\");\n      }\n    },\n    webassembly: {\n      enumerable: false,\n      configurable: false,\n      get: function get() {\n        throw new WebpackError(\"Compilation.moduleTemplates.webassembly has been removed\");\n      }\n    }\n  });\n  moduleTemplates = undefined;\n};\n\nvar byId = compareSelect(\n/**\n * @param {Chunk} c chunk\n * @returns {number | string} id\n */\nfunction (c) {\n  return c.id;\n}, compareIds);\nvar byNameOrHash = concatComparators(compareSelect(\n/**\n * @param {Compilation} c compilation\n * @returns {string} name\n */\nfunction (c) {\n  return c.name;\n}, compareIds), compareSelect(\n/**\n * @param {Compilation} c compilation\n * @returns {string} hash\n */\nfunction (c) {\n  return c.fullHash;\n}, compareIds));\nvar byMessage = compareSelect(function (err) {\n  return \"\".concat(err.message);\n}, compareStringsNumeric);\nvar byModule = compareSelect(function (err) {\n  return err.module && err.module.identifier() || \"\";\n}, compareStringsNumeric);\nvar byLocation = compareSelect(function (err) {\n  return err.loc;\n}, compareLocations);\nvar compareErrors = concatComparators(byModule, byLocation, byMessage);\n/** @type {WeakMap<Dependency, Module & { restoreFromUnsafeCache: Function } | null>} */\n\nvar unsafeCacheDependencies = new WeakMap();\n/** @type {WeakMap<Module & { restoreFromUnsafeCache: Function }, object>} */\n\nvar unsafeCacheData = new WeakMap();\n\nvar Compilation = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of Compilation.\n   * @param {Compiler} compiler the compiler which created the compilation\n   * @param {CompilationParams} params the compilation parameters\n   */\n  function Compilation(compiler, params) {\n    var _this = this;\n\n    _classCallCheck(this, Compilation);\n\n    this._backCompat = compiler._backCompat;\n\n    var getNormalModuleLoader = function getNormalModuleLoader() {\n      return deprecatedNormalModuleLoaderHook(_this);\n    };\n    /** @typedef {{ additionalAssets?: true | Function }} ProcessAssetsAdditionalOptions */\n\n    /** @type {AsyncSeriesHook<[CompilationAssets], ProcessAssetsAdditionalOptions>} */\n\n\n    var processAssetsHook = new AsyncSeriesHook([\"assets\"]);\n    var savedAssets = new Set();\n\n    var popNewAssets = function popNewAssets(assets) {\n      var newAssets = undefined;\n\n      for (var _i = 0, _Object$keys = Object.keys(assets); _i < _Object$keys.length; _i++) {\n        var file = _Object$keys[_i];\n        if (savedAssets.has(file)) continue;\n\n        if (newAssets === undefined) {\n          newAssets = Object.create(null);\n        }\n\n        newAssets[file] = assets[file];\n        savedAssets.add(file);\n      }\n\n      return newAssets;\n    };\n\n    processAssetsHook.intercept({\n      name: \"Compilation\",\n      call: function call() {\n        savedAssets = new Set(Object.keys(_this.assets));\n      },\n      register: function register(tap) {\n        var type = tap.type,\n            name = tap.name;\n\n        var _fn = tap.fn,\n            additionalAssets = tap.additionalAssets,\n            remainingTap = _objectWithoutProperties(tap, _excluded);\n\n        var additionalAssetsFn = additionalAssets === true ? _fn : additionalAssets;\n        var processedAssets = additionalAssetsFn ? new WeakSet() : undefined;\n\n        switch (type) {\n          case \"sync\":\n            if (additionalAssetsFn) {\n              _this.hooks.processAdditionalAssets.tap(name, function (assets) {\n                if (processedAssets.has(_this.assets)) additionalAssetsFn(assets);\n              });\n            }\n\n            return _objectSpread(_objectSpread({}, remainingTap), {}, {\n              type: \"async\",\n              fn: function fn(assets, callback) {\n                try {\n                  _fn(assets);\n                } catch (e) {\n                  return callback(e);\n                }\n\n                if (processedAssets !== undefined) processedAssets.add(_this.assets);\n                var newAssets = popNewAssets(assets);\n\n                if (newAssets !== undefined) {\n                  _this.hooks.processAdditionalAssets.callAsync(newAssets, callback);\n\n                  return;\n                }\n\n                callback();\n              }\n            });\n\n          case \"async\":\n            if (additionalAssetsFn) {\n              _this.hooks.processAdditionalAssets.tapAsync(name, function (assets, callback) {\n                if (processedAssets.has(_this.assets)) return additionalAssetsFn(assets, callback);\n                callback();\n              });\n            }\n\n            return _objectSpread(_objectSpread({}, remainingTap), {}, {\n              fn: function fn(assets, callback) {\n                _fn(assets, function (err) {\n                  if (err) return callback(err);\n                  if (processedAssets !== undefined) processedAssets.add(_this.assets);\n                  var newAssets = popNewAssets(assets);\n\n                  if (newAssets !== undefined) {\n                    _this.hooks.processAdditionalAssets.callAsync(newAssets, callback);\n\n                    return;\n                  }\n\n                  callback();\n                });\n              }\n            });\n\n          case \"promise\":\n            if (additionalAssetsFn) {\n              _this.hooks.processAdditionalAssets.tapPromise(name, function (assets) {\n                if (processedAssets.has(_this.assets)) return additionalAssetsFn(assets);\n                return Promise.resolve();\n              });\n            }\n\n            return _objectSpread(_objectSpread({}, remainingTap), {}, {\n              fn: function fn(assets) {\n                var p = _fn(assets);\n\n                if (!p || !p.then) return p;\n                return p.then(function () {\n                  if (processedAssets !== undefined) processedAssets.add(_this.assets);\n                  var newAssets = popNewAssets(assets);\n\n                  if (newAssets !== undefined) {\n                    return _this.hooks.processAdditionalAssets.promise(newAssets);\n                  }\n                });\n              }\n            });\n        }\n      }\n    });\n    /** @type {SyncHook<[CompilationAssets]>} */\n\n    var afterProcessAssetsHook = new SyncHook([\"assets\"]);\n    /**\n     * @template T\n     * @param {string} name name of the hook\n     * @param {number} stage new stage\n     * @param {function(): AsArray<T>} getArgs get old hook function args\n     * @param {string=} code deprecation code (not deprecated when unset)\n     * @returns {FakeHook<Pick<AsyncSeriesHook<T>, \"tap\" | \"tapAsync\" | \"tapPromise\" | \"name\">>} fake hook which redirects\n     */\n\n    var createProcessAssetsHook = function createProcessAssetsHook(name, stage, getArgs, code) {\n      if (!_this._backCompat && code) return undefined;\n\n      var errorMessage = function errorMessage(reason) {\n        return \"Can't automatically convert plugin using Compilation.hooks.\".concat(name, \" to Compilation.hooks.processAssets because \").concat(reason, \".\\nBREAKING CHANGE: Asset processing hooks in Compilation has been merged into a single Compilation.hooks.processAssets hook.\");\n      };\n\n      var getOptions = function getOptions(options) {\n        if (typeof options === \"string\") options = {\n          name: options\n        };\n\n        if (options.stage) {\n          throw new Error(errorMessage(\"it's using the 'stage' option\"));\n        }\n\n        return _objectSpread(_objectSpread({}, options), {}, {\n          stage: stage\n        });\n      };\n\n      return createFakeHook({\n        name: name,\n\n        /** @type {AsyncSeriesHook<T>[\"intercept\"]} */\n        intercept: function intercept(interceptor) {\n          throw new Error(errorMessage(\"it's using 'intercept'\"));\n        },\n\n        /** @type {AsyncSeriesHook<T>[\"tap\"]} */\n        tap: function tap(options, fn) {\n          processAssetsHook.tap(getOptions(options), function () {\n            return fn.apply(void 0, _toConsumableArray(getArgs()));\n          });\n        },\n\n        /** @type {AsyncSeriesHook<T>[\"tapAsync\"]} */\n        tapAsync: function tapAsync(options, fn) {\n          processAssetsHook.tapAsync(getOptions(options), function (assets, callback) {\n            return (\n              /** @type {any} */\n              fn.apply(void 0, _toConsumableArray(getArgs()).concat([callback]))\n            );\n          });\n        },\n\n        /** @type {AsyncSeriesHook<T>[\"tapPromise\"]} */\n        tapPromise: function tapPromise(options, fn) {\n          processAssetsHook.tapPromise(getOptions(options), function () {\n            return fn.apply(void 0, _toConsumableArray(getArgs()));\n          });\n        }\n      }, \"\".concat(name, \" is deprecated (use Compilation.hooks.processAssets instead and use one of Compilation.PROCESS_ASSETS_STAGE_* as stage option)\"), code);\n    };\n\n    this.hooks = Object.freeze({\n      /** @type {SyncHook<[Module]>} */\n      buildModule: new SyncHook([\"module\"]),\n\n      /** @type {SyncHook<[Module]>} */\n      rebuildModule: new SyncHook([\"module\"]),\n\n      /** @type {SyncHook<[Module, WebpackError]>} */\n      failedModule: new SyncHook([\"module\", \"error\"]),\n\n      /** @type {SyncHook<[Module]>} */\n      succeedModule: new SyncHook([\"module\"]),\n\n      /** @type {SyncHook<[Module]>} */\n      stillValidModule: new SyncHook([\"module\"]),\n\n      /** @type {SyncHook<[Dependency, EntryOptions]>} */\n      addEntry: new SyncHook([\"entry\", \"options\"]),\n\n      /** @type {SyncHook<[Dependency, EntryOptions, Error]>} */\n      failedEntry: new SyncHook([\"entry\", \"options\", \"error\"]),\n\n      /** @type {SyncHook<[Dependency, EntryOptions, Module]>} */\n      succeedEntry: new SyncHook([\"entry\", \"options\", \"module\"]),\n\n      /** @type {SyncWaterfallHook<[(string[] | ReferencedExport)[], Dependency, RuntimeSpec]>} */\n      dependencyReferencedExports: new SyncWaterfallHook([\"referencedExports\", \"dependency\", \"runtime\"]),\n\n      /** @type {SyncHook<[ExecuteModuleArgument, ExecuteModuleContext]>} */\n      executeModule: new SyncHook([\"options\", \"context\"]),\n\n      /** @type {AsyncParallelHook<[ExecuteModuleArgument, ExecuteModuleContext]>} */\n      prepareModuleExecution: new AsyncParallelHook([\"options\", \"context\"]),\n\n      /** @type {AsyncSeriesHook<[Iterable<Module>]>} */\n      finishModules: new AsyncSeriesHook([\"modules\"]),\n\n      /** @type {AsyncSeriesHook<[Module]>} */\n      finishRebuildingModule: new AsyncSeriesHook([\"module\"]),\n\n      /** @type {SyncHook<[]>} */\n      unseal: new SyncHook([]),\n\n      /** @type {SyncHook<[]>} */\n      seal: new SyncHook([]),\n\n      /** @type {SyncHook<[]>} */\n      beforeChunks: new SyncHook([]),\n\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      afterChunks: new SyncHook([\"chunks\"]),\n\n      /** @type {SyncBailHook<[Iterable<Module>]>} */\n      optimizeDependencies: new SyncBailHook([\"modules\"]),\n\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      afterOptimizeDependencies: new SyncHook([\"modules\"]),\n\n      /** @type {SyncHook<[]>} */\n      optimize: new SyncHook([]),\n\n      /** @type {SyncBailHook<[Iterable<Module>]>} */\n      optimizeModules: new SyncBailHook([\"modules\"]),\n\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      afterOptimizeModules: new SyncHook([\"modules\"]),\n\n      /** @type {SyncBailHook<[Iterable<Chunk>, ChunkGroup[]]>} */\n      optimizeChunks: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>, ChunkGroup[]]>} */\n      afterOptimizeChunks: new SyncHook([\"chunks\", \"chunkGroups\"]),\n\n      /** @type {AsyncSeriesHook<[Iterable<Chunk>, Iterable<Module>]>} */\n      optimizeTree: new AsyncSeriesHook([\"chunks\", \"modules\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>, Iterable<Module>]>} */\n      afterOptimizeTree: new SyncHook([\"chunks\", \"modules\"]),\n\n      /** @type {AsyncSeriesBailHook<[Iterable<Chunk>, Iterable<Module>]>} */\n      optimizeChunkModules: new AsyncSeriesBailHook([\"chunks\", \"modules\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>, Iterable<Module>]>} */\n      afterOptimizeChunkModules: new SyncHook([\"chunks\", \"modules\"]),\n\n      /** @type {SyncBailHook<[], boolean>} */\n      shouldRecord: new SyncBailHook([]),\n\n      /** @type {SyncHook<[Chunk, Set<string>, RuntimeRequirementsContext]>} */\n      additionalChunkRuntimeRequirements: new SyncHook([\"chunk\", \"runtimeRequirements\", \"context\"]),\n\n      /** @type {HookMap<SyncBailHook<[Chunk, Set<string>, RuntimeRequirementsContext]>>} */\n      runtimeRequirementInChunk: new HookMap(function () {\n        return new SyncBailHook([\"chunk\", \"runtimeRequirements\", \"context\"]);\n      }),\n\n      /** @type {SyncHook<[Module, Set<string>, RuntimeRequirementsContext]>} */\n      additionalModuleRuntimeRequirements: new SyncHook([\"module\", \"runtimeRequirements\", \"context\"]),\n\n      /** @type {HookMap<SyncBailHook<[Module, Set<string>, RuntimeRequirementsContext]>>} */\n      runtimeRequirementInModule: new HookMap(function () {\n        return new SyncBailHook([\"module\", \"runtimeRequirements\", \"context\"]);\n      }),\n\n      /** @type {SyncHook<[Chunk, Set<string>, RuntimeRequirementsContext]>} */\n      additionalTreeRuntimeRequirements: new SyncHook([\"chunk\", \"runtimeRequirements\", \"context\"]),\n\n      /** @type {HookMap<SyncBailHook<[Chunk, Set<string>, RuntimeRequirementsContext]>>} */\n      runtimeRequirementInTree: new HookMap(function () {\n        return new SyncBailHook([\"chunk\", \"runtimeRequirements\", \"context\"]);\n      }),\n\n      /** @type {SyncHook<[RuntimeModule, Chunk]>} */\n      runtimeModule: new SyncHook([\"module\", \"chunk\"]),\n\n      /** @type {SyncHook<[Iterable<Module>, any]>} */\n      reviveModules: new SyncHook([\"modules\", \"records\"]),\n\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      beforeModuleIds: new SyncHook([\"modules\"]),\n\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      moduleIds: new SyncHook([\"modules\"]),\n\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      optimizeModuleIds: new SyncHook([\"modules\"]),\n\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      afterOptimizeModuleIds: new SyncHook([\"modules\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>, any]>} */\n      reviveChunks: new SyncHook([\"chunks\", \"records\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      beforeChunkIds: new SyncHook([\"chunks\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      chunkIds: new SyncHook([\"chunks\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      optimizeChunkIds: new SyncHook([\"chunks\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      afterOptimizeChunkIds: new SyncHook([\"chunks\"]),\n\n      /** @type {SyncHook<[Iterable<Module>, any]>} */\n      recordModules: new SyncHook([\"modules\", \"records\"]),\n\n      /** @type {SyncHook<[Iterable<Chunk>, any]>} */\n      recordChunks: new SyncHook([\"chunks\", \"records\"]),\n\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      optimizeCodeGeneration: new SyncHook([\"modules\"]),\n\n      /** @type {SyncHook<[]>} */\n      beforeModuleHash: new SyncHook([]),\n\n      /** @type {SyncHook<[]>} */\n      afterModuleHash: new SyncHook([]),\n\n      /** @type {SyncHook<[]>} */\n      beforeCodeGeneration: new SyncHook([]),\n\n      /** @type {SyncHook<[]>} */\n      afterCodeGeneration: new SyncHook([]),\n\n      /** @type {SyncHook<[]>} */\n      beforeRuntimeRequirements: new SyncHook([]),\n\n      /** @type {SyncHook<[]>} */\n      afterRuntimeRequirements: new SyncHook([]),\n\n      /** @type {SyncHook<[]>} */\n      beforeHash: new SyncHook([]),\n\n      /** @type {SyncHook<[Chunk]>} */\n      contentHash: new SyncHook([\"chunk\"]),\n\n      /** @type {SyncHook<[]>} */\n      afterHash: new SyncHook([]),\n\n      /** @type {SyncHook<[any]>} */\n      recordHash: new SyncHook([\"records\"]),\n\n      /** @type {SyncHook<[Compilation, any]>} */\n      record: new SyncHook([\"compilation\", \"records\"]),\n\n      /** @type {SyncHook<[]>} */\n      beforeModuleAssets: new SyncHook([]),\n\n      /** @type {SyncBailHook<[], boolean>} */\n      shouldGenerateChunkAssets: new SyncBailHook([]),\n\n      /** @type {SyncHook<[]>} */\n      beforeChunkAssets: new SyncHook([]),\n      // TODO webpack 6 remove\n\n      /** @deprecated */\n      additionalChunkAssets: createProcessAssetsHook(\"additionalChunkAssets\", Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL, function () {\n        return [_this.chunks];\n      }, \"DEP_WEBPACK_COMPILATION_ADDITIONAL_CHUNK_ASSETS\"),\n      // TODO webpack 6 deprecate\n\n      /** @deprecated */\n      additionalAssets: createProcessAssetsHook(\"additionalAssets\", Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL, function () {\n        return [];\n      }),\n      // TODO webpack 6 remove\n\n      /** @deprecated */\n      optimizeChunkAssets: createProcessAssetsHook(\"optimizeChunkAssets\", Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE, function () {\n        return [_this.chunks];\n      }, \"DEP_WEBPACK_COMPILATION_OPTIMIZE_CHUNK_ASSETS\"),\n      // TODO webpack 6 remove\n\n      /** @deprecated */\n      afterOptimizeChunkAssets: createProcessAssetsHook(\"afterOptimizeChunkAssets\", Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE + 1, function () {\n        return [_this.chunks];\n      }, \"DEP_WEBPACK_COMPILATION_AFTER_OPTIMIZE_CHUNK_ASSETS\"),\n      // TODO webpack 6 deprecate\n\n      /** @deprecated */\n      optimizeAssets: processAssetsHook,\n      // TODO webpack 6 deprecate\n\n      /** @deprecated */\n      afterOptimizeAssets: afterProcessAssetsHook,\n      processAssets: processAssetsHook,\n      afterProcessAssets: afterProcessAssetsHook,\n\n      /** @type {AsyncSeriesHook<[CompilationAssets]>} */\n      processAdditionalAssets: new AsyncSeriesHook([\"assets\"]),\n\n      /** @type {SyncBailHook<[], boolean>} */\n      needAdditionalSeal: new SyncBailHook([]),\n\n      /** @type {AsyncSeriesHook<[]>} */\n      afterSeal: new AsyncSeriesHook([]),\n\n      /** @type {SyncWaterfallHook<[RenderManifestEntry[], RenderManifestOptions]>} */\n      renderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n\n      /** @type {SyncHook<[Hash]>} */\n      fullHash: new SyncHook([\"hash\"]),\n\n      /** @type {SyncHook<[Chunk, Hash, ChunkHashContext]>} */\n      chunkHash: new SyncHook([\"chunk\", \"chunkHash\", \"ChunkHashContext\"]),\n\n      /** @type {SyncHook<[Module, string]>} */\n      moduleAsset: new SyncHook([\"module\", \"filename\"]),\n\n      /** @type {SyncHook<[Chunk, string]>} */\n      chunkAsset: new SyncHook([\"chunk\", \"filename\"]),\n\n      /** @type {SyncWaterfallHook<[string, object, AssetInfo]>} */\n      assetPath: new SyncWaterfallHook([\"path\", \"options\", \"assetInfo\"]),\n\n      /** @type {SyncBailHook<[], boolean>} */\n      needAdditionalPass: new SyncBailHook([]),\n\n      /** @type {SyncHook<[Compiler, string, number]>} */\n      childCompiler: new SyncHook([\"childCompiler\", \"compilerName\", \"compilerIndex\"]),\n\n      /** @type {SyncBailHook<[string, LogEntry], true>} */\n      log: new SyncBailHook([\"origin\", \"logEntry\"]),\n\n      /** @type {SyncWaterfallHook<[WebpackError[]]>} */\n      processWarnings: new SyncWaterfallHook([\"warnings\"]),\n\n      /** @type {SyncWaterfallHook<[WebpackError[]]>} */\n      processErrors: new SyncWaterfallHook([\"errors\"]),\n\n      /** @type {HookMap<SyncHook<[Partial<NormalizedStatsOptions>, CreateStatsOptionsContext]>>} */\n      statsPreset: new HookMap(function () {\n        return new SyncHook([\"options\", \"context\"]);\n      }),\n\n      /** @type {SyncHook<[Partial<NormalizedStatsOptions>, CreateStatsOptionsContext]>} */\n      statsNormalize: new SyncHook([\"options\", \"context\"]),\n\n      /** @type {SyncHook<[StatsFactory, NormalizedStatsOptions]>} */\n      statsFactory: new SyncHook([\"statsFactory\", \"options\"]),\n\n      /** @type {SyncHook<[StatsPrinter, NormalizedStatsOptions]>} */\n      statsPrinter: new SyncHook([\"statsPrinter\", \"options\"]),\n\n      get normalModuleLoader() {\n        return getNormalModuleLoader();\n      }\n\n    });\n    /** @type {string=} */\n\n    this.name = undefined;\n    this.startTime = undefined;\n    this.endTime = undefined;\n    /** @type {Compiler} */\n\n    this.compiler = compiler;\n    this.resolverFactory = compiler.resolverFactory;\n    this.inputFileSystem = compiler.inputFileSystem;\n    this.fileSystemInfo = new FileSystemInfo(this.inputFileSystem, {\n      managedPaths: compiler.managedPaths,\n      immutablePaths: compiler.immutablePaths,\n      logger: this.getLogger(\"webpack.FileSystemInfo\"),\n      hashFunction: compiler.options.output.hashFunction\n    });\n\n    if (compiler.fileTimestamps) {\n      this.fileSystemInfo.addFileTimestamps(compiler.fileTimestamps, true);\n    }\n\n    if (compiler.contextTimestamps) {\n      this.fileSystemInfo.addContextTimestamps(compiler.contextTimestamps, true);\n    }\n    /** @type {Map<string, string | Set<string>>} */\n\n\n    this.valueCacheVersions = new Map();\n    this.requestShortener = compiler.requestShortener;\n    this.compilerPath = compiler.compilerPath;\n    this.logger = this.getLogger(\"webpack.Compilation\");\n    var options = compiler.options;\n    this.options = options;\n    this.outputOptions = options && options.output;\n    /** @type {boolean} */\n\n    this.bail = options && options.bail || false;\n    /** @type {boolean} */\n\n    this.profile = options && options.profile || false;\n    this.params = params;\n    this.mainTemplate = new MainTemplate(this.outputOptions, this);\n    this.chunkTemplate = new ChunkTemplate(this.outputOptions, this);\n    this.runtimeTemplate = new RuntimeTemplate(this, this.outputOptions, this.requestShortener);\n    /** @type {{javascript: ModuleTemplate}} */\n\n    this.moduleTemplates = {\n      javascript: new ModuleTemplate(this.runtimeTemplate, this)\n    };\n    defineRemovedModuleTemplates(this.moduleTemplates);\n    /** @type {Map<Module, WeakTupleMap<any, any>> | undefined} */\n\n    this.moduleMemCaches = undefined;\n    /** @type {Map<Module, WeakTupleMap<any, any>> | undefined} */\n\n    this.moduleMemCaches2 = undefined;\n    this.moduleGraph = new ModuleGraph();\n    /** @type {ChunkGraph} */\n\n    this.chunkGraph = undefined;\n    /** @type {CodeGenerationResults} */\n\n    this.codeGenerationResults = undefined;\n    /** @type {AsyncQueue<Module, Module, Module>} */\n\n    this.processDependenciesQueue = new AsyncQueue({\n      name: \"processDependencies\",\n      parallelism: options.parallelism || 100,\n      processor: this._processModuleDependencies.bind(this)\n    });\n    /** @type {AsyncQueue<Module, string, Module>} */\n\n    this.addModuleQueue = new AsyncQueue({\n      name: \"addModule\",\n      parent: this.processDependenciesQueue,\n      getKey: function getKey(module) {\n        return module.identifier();\n      },\n      processor: this._addModule.bind(this)\n    });\n    /** @type {AsyncQueue<FactorizeModuleOptions, string, Module | ModuleFactoryResult>} */\n\n    this.factorizeQueue = new AsyncQueue({\n      name: \"factorize\",\n      parent: this.addModuleQueue,\n      processor: this._factorizeModule.bind(this)\n    });\n    /** @type {AsyncQueue<Module, Module, Module>} */\n\n    this.buildQueue = new AsyncQueue({\n      name: \"build\",\n      parent: this.factorizeQueue,\n      processor: this._buildModule.bind(this)\n    });\n    /** @type {AsyncQueue<Module, Module, Module>} */\n\n    this.rebuildQueue = new AsyncQueue({\n      name: \"rebuild\",\n      parallelism: options.parallelism || 100,\n      processor: this._rebuildModule.bind(this)\n    });\n    /**\n     * Modules in value are building during the build of Module in key.\n     * Means value blocking key from finishing.\n     * Needed to detect build cycles.\n     * @type {WeakMap<Module, Set<Module>>}\n     */\n\n    this.creatingModuleDuringBuild = new WeakMap();\n    /** @type {Map<string, EntryData>} */\n\n    this.entries = new Map();\n    /** @type {EntryData} */\n\n    this.globalEntry = {\n      dependencies: [],\n      includeDependencies: [],\n      options: {\n        name: undefined\n      }\n    };\n    /** @type {Map<string, Entrypoint>} */\n\n    this.entrypoints = new Map();\n    /** @type {Entrypoint[]} */\n\n    this.asyncEntrypoints = [];\n    /** @type {Set<Chunk>} */\n\n    this.chunks = new Set();\n    /** @type {ChunkGroup[]} */\n\n    this.chunkGroups = [];\n    /** @type {Map<string, ChunkGroup>} */\n\n    this.namedChunkGroups = new Map();\n    /** @type {Map<string, Chunk>} */\n\n    this.namedChunks = new Map();\n    /** @type {Set<Module>} */\n\n    this.modules = new Set();\n\n    if (this._backCompat) {\n      arrayToSetDeprecation(this.chunks, \"Compilation.chunks\");\n      arrayToSetDeprecation(this.modules, \"Compilation.modules\");\n    }\n    /** @private @type {Map<string, Module>} */\n\n\n    this._modules = new Map();\n    this.records = null;\n    /** @type {string[]} */\n\n    this.additionalChunkAssets = [];\n    /** @type {CompilationAssets} */\n\n    this.assets = {};\n    /** @type {Map<string, AssetInfo>} */\n\n    this.assetsInfo = new Map();\n    /** @type {Map<string, Map<string, Set<string>>>} */\n\n    this._assetsRelatedIn = new Map();\n    /** @type {WebpackError[]} */\n\n    this.errors = [];\n    /** @type {WebpackError[]} */\n\n    this.warnings = [];\n    /** @type {Compilation[]} */\n\n    this.children = [];\n    /** @type {Map<string, LogEntry[]>} */\n\n    this.logging = new Map();\n    /** @type {Map<DepConstructor, ModuleFactory>} */\n\n    this.dependencyFactories = new Map();\n    /** @type {DependencyTemplates} */\n\n    this.dependencyTemplates = new DependencyTemplates(this.outputOptions.hashFunction);\n    this.childrenCounters = {};\n    /** @type {Set<number|string>} */\n\n    this.usedChunkIds = null;\n    /** @type {Set<number>} */\n\n    this.usedModuleIds = null;\n    /** @type {boolean} */\n\n    this.needAdditionalPass = false;\n    /** @type {Set<Module & { restoreFromUnsafeCache: Function }>} */\n\n    this._restoredUnsafeCacheModuleEntries = new Set();\n    /** @type {Map<string, Module & { restoreFromUnsafeCache: Function }>} */\n\n    this._restoredUnsafeCacheEntries = new Map();\n    /** @type {WeakSet<Module>} */\n\n    this.builtModules = new WeakSet();\n    /** @type {WeakSet<Module>} */\n\n    this.codeGeneratedModules = new WeakSet();\n    /** @type {WeakSet<Module>} */\n\n    this.buildTimeExecutedModules = new WeakSet();\n    /** @private @type {Map<Module, Callback[]>} */\n\n    this._rebuildingModules = new Map();\n    /** @type {Set<string>} */\n\n    this.emittedAssets = new Set();\n    /** @type {Set<string>} */\n\n    this.comparedForEmitAssets = new Set();\n    /** @type {LazySet<string>} */\n\n    this.fileDependencies = new LazySet();\n    /** @type {LazySet<string>} */\n\n    this.contextDependencies = new LazySet();\n    /** @type {LazySet<string>} */\n\n    this.missingDependencies = new LazySet();\n    /** @type {LazySet<string>} */\n\n    this.buildDependencies = new LazySet(); // TODO webpack 6 remove\n\n    this.compilationDependencies = {\n      add: util.deprecate(function (item) {\n        return _this.fileDependencies.add(item);\n      }, \"Compilation.compilationDependencies is deprecated (used Compilation.fileDependencies instead)\", \"DEP_WEBPACK_COMPILATION_COMPILATION_DEPENDENCIES\")\n    };\n    this._modulesCache = this.getCache(\"Compilation/modules\");\n    this._assetsCache = this.getCache(\"Compilation/assets\");\n    this._codeGenerationCache = this.getCache(\"Compilation/codeGeneration\");\n    var unsafeCache = options.module.unsafeCache;\n    this._unsafeCache = !!unsafeCache;\n    this._unsafeCachePredicate = typeof unsafeCache === \"function\" ? unsafeCache : function () {\n      return true;\n    };\n  }\n\n  _createClass(Compilation, [{\n    key: \"getStats\",\n    value: function getStats() {\n      return new Stats(this);\n    }\n    /**\n     * @param {StatsOptions | string} optionsOrPreset stats option value\n     * @param {CreateStatsOptionsContext} context context\n     * @returns {NormalizedStatsOptions} normalized options\n     */\n\n  }, {\n    key: \"createStatsOptions\",\n    value: function createStatsOptions(optionsOrPreset) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof optionsOrPreset === \"boolean\" || typeof optionsOrPreset === \"string\") {\n        optionsOrPreset = {\n          preset: optionsOrPreset\n        };\n      }\n\n      if (typeof optionsOrPreset === \"object\" && optionsOrPreset !== null) {\n        // We use this method of shallow cloning this object to include\n        // properties in the prototype chain\n\n        /** @type {Partial<NormalizedStatsOptions>} */\n        var options = {};\n\n        for (var key in optionsOrPreset) {\n          options[key] = optionsOrPreset[key];\n        }\n\n        if (options.preset !== undefined) {\n          this.hooks.statsPreset.for(options.preset).call(options, context);\n        }\n\n        this.hooks.statsNormalize.call(options, context);\n        return (\n          /** @type {NormalizedStatsOptions} */\n          options\n        );\n      } else {\n        /** @type {Partial<NormalizedStatsOptions>} */\n        var _options = {};\n        this.hooks.statsNormalize.call(_options, context);\n        return (\n          /** @type {NormalizedStatsOptions} */\n          _options\n        );\n      }\n    }\n  }, {\n    key: \"createStatsFactory\",\n    value: function createStatsFactory(options) {\n      var statsFactory = new StatsFactory();\n      this.hooks.statsFactory.call(statsFactory, options);\n      return statsFactory;\n    }\n  }, {\n    key: \"createStatsPrinter\",\n    value: function createStatsPrinter(options) {\n      var statsPrinter = new StatsPrinter();\n      this.hooks.statsPrinter.call(statsPrinter, options);\n      return statsPrinter;\n    }\n    /**\n     * @param {string} name cache name\n     * @returns {CacheFacade} the cache facade instance\n     */\n\n  }, {\n    key: \"getCache\",\n    value: function getCache(name) {\n      return this.compiler.getCache(name);\n    }\n    /**\n     * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n     * @returns {Logger} a logger with that name\n     */\n\n  }, {\n    key: \"getLogger\",\n    value: function getLogger(name) {\n      var _this2 = this;\n\n      if (!name) {\n        throw new TypeError(\"Compilation.getLogger(name) called without a name\");\n      }\n      /** @type {LogEntry[] | undefined} */\n\n\n      var logEntries;\n      return new Logger(function (type, args) {\n        if (typeof name === \"function\") {\n          name = name();\n\n          if (!name) {\n            throw new TypeError(\"Compilation.getLogger(name) called with a function not returning a name\");\n          }\n        }\n\n        var trace;\n\n        switch (type) {\n          case LogType.warn:\n          case LogType.error:\n          case LogType.trace:\n            trace = ErrorHelpers.cutOffLoaderExecution(new Error(\"Trace\").stack).split(\"\\n\").slice(3);\n            break;\n        }\n        /** @type {LogEntry} */\n\n\n        var logEntry = {\n          time: Date.now(),\n          type: type,\n          args: args,\n          trace: trace\n        };\n\n        if (_this2.hooks.log.call(name, logEntry) === undefined) {\n          if (logEntry.type === LogType.profileEnd) {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            if (typeof console.profileEnd === \"function\") {\n              // eslint-disable-next-line node/no-unsupported-features/node-builtins\n              console.profileEnd(\"[\".concat(name, \"] \").concat(logEntry.args[0]));\n            }\n          }\n\n          if (logEntries === undefined) {\n            logEntries = _this2.logging.get(name);\n\n            if (logEntries === undefined) {\n              logEntries = [];\n\n              _this2.logging.set(name, logEntries);\n            }\n          }\n\n          logEntries.push(logEntry);\n\n          if (logEntry.type === LogType.profile) {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            if (typeof console.profile === \"function\") {\n              // eslint-disable-next-line node/no-unsupported-features/node-builtins\n              console.profile(\"[\".concat(name, \"] \").concat(logEntry.args[0]));\n            }\n          }\n        }\n      }, function (childName) {\n        if (typeof name === \"function\") {\n          if (typeof childName === \"function\") {\n            return _this2.getLogger(function () {\n              if (typeof name === \"function\") {\n                name = name();\n\n                if (!name) {\n                  throw new TypeError(\"Compilation.getLogger(name) called with a function not returning a name\");\n                }\n              }\n\n              if (typeof childName === \"function\") {\n                childName = childName();\n\n                if (!childName) {\n                  throw new TypeError(\"Logger.getChildLogger(name) called with a function not returning a name\");\n                }\n              }\n\n              return \"\".concat(name, \"/\").concat(childName);\n            });\n          } else {\n            return _this2.getLogger(function () {\n              if (typeof name === \"function\") {\n                name = name();\n\n                if (!name) {\n                  throw new TypeError(\"Compilation.getLogger(name) called with a function not returning a name\");\n                }\n              }\n\n              return \"\".concat(name, \"/\").concat(childName);\n            });\n          }\n        } else {\n          if (typeof childName === \"function\") {\n            return _this2.getLogger(function () {\n              if (typeof childName === \"function\") {\n                childName = childName();\n\n                if (!childName) {\n                  throw new TypeError(\"Logger.getChildLogger(name) called with a function not returning a name\");\n                }\n              }\n\n              return \"\".concat(name, \"/\").concat(childName);\n            });\n          } else {\n            return _this2.getLogger(\"\".concat(name, \"/\").concat(childName));\n          }\n        }\n      });\n    }\n    /**\n     * @param {Module} module module to be added that was created\n     * @param {ModuleCallback} callback returns the module in the compilation,\n     * it could be the passed one (if new), or an already existing in the compilation\n     * @returns {void}\n     */\n\n  }, {\n    key: \"addModule\",\n    value: function addModule(module, callback) {\n      this.addModuleQueue.add(module, callback);\n    }\n    /**\n     * @param {Module} module module to be added that was created\n     * @param {ModuleCallback} callback returns the module in the compilation,\n     * it could be the passed one (if new), or an already existing in the compilation\n     * @returns {void}\n     */\n\n  }, {\n    key: \"_addModule\",\n    value: function _addModule(module, callback) {\n      var _this3 = this;\n\n      var identifier = module.identifier();\n\n      var alreadyAddedModule = this._modules.get(identifier);\n\n      if (alreadyAddedModule) {\n        return callback(null, alreadyAddedModule);\n      }\n\n      var currentProfile = this.profile ? this.moduleGraph.getProfile(module) : undefined;\n\n      if (currentProfile !== undefined) {\n        currentProfile.markRestoringStart();\n      }\n\n      this._modulesCache.get(identifier, null, function (err, cacheModule) {\n        if (err) return callback(new ModuleRestoreError(module, err));\n\n        if (currentProfile !== undefined) {\n          currentProfile.markRestoringEnd();\n          currentProfile.markIntegrationStart();\n        }\n\n        if (cacheModule) {\n          cacheModule.updateCacheModule(module);\n          module = cacheModule;\n        }\n\n        _this3._modules.set(identifier, module);\n\n        _this3.modules.add(module);\n\n        if (_this3._backCompat) ModuleGraph.setModuleGraphForModule(module, _this3.moduleGraph);\n\n        if (currentProfile !== undefined) {\n          currentProfile.markIntegrationEnd();\n        }\n\n        callback(null, module);\n      });\n    }\n    /**\n     * Fetches a module from a compilation by its identifier\n     * @param {Module} module the module provided\n     * @returns {Module} the module requested\n     */\n\n  }, {\n    key: \"getModule\",\n    value: function getModule(module) {\n      var identifier = module.identifier();\n      return this._modules.get(identifier);\n    }\n    /**\n     * Attempts to search for a module by its identifier\n     * @param {string} identifier identifier (usually path) for module\n     * @returns {Module|undefined} attempt to search for module and return it, else undefined\n     */\n\n  }, {\n    key: \"findModule\",\n    value: function findModule(identifier) {\n      return this._modules.get(identifier);\n    }\n    /**\n     * Schedules a build of the module object\n     *\n     * @param {Module} module module to be built\n     * @param {ModuleCallback} callback the callback\n     * @returns {void}\n     */\n\n  }, {\n    key: \"buildModule\",\n    value: function buildModule(module, callback) {\n      this.buildQueue.add(module, callback);\n    }\n    /**\n     * Builds the module object\n     *\n     * @param {Module} module module to be built\n     * @param {ModuleCallback} callback the callback\n     * @returns {void}\n     */\n\n  }, {\n    key: \"_buildModule\",\n    value: function _buildModule(module, callback) {\n      var _this4 = this;\n\n      var currentProfile = this.profile ? this.moduleGraph.getProfile(module) : undefined;\n\n      if (currentProfile !== undefined) {\n        currentProfile.markBuildingStart();\n      }\n\n      module.needBuild({\n        compilation: this,\n        fileSystemInfo: this.fileSystemInfo,\n        valueCacheVersions: this.valueCacheVersions\n      }, function (err, needBuild) {\n        if (err) return callback(err);\n\n        if (!needBuild) {\n          if (currentProfile !== undefined) {\n            currentProfile.markBuildingEnd();\n          }\n\n          _this4.hooks.stillValidModule.call(module);\n\n          return callback();\n        }\n\n        _this4.hooks.buildModule.call(module);\n\n        _this4.builtModules.add(module);\n\n        module.build(_this4.options, _this4, _this4.resolverFactory.get(\"normal\", module.resolveOptions), _this4.inputFileSystem, function (err) {\n          if (currentProfile !== undefined) {\n            currentProfile.markBuildingEnd();\n          }\n\n          if (err) {\n            _this4.hooks.failedModule.call(module, err);\n\n            return callback(err);\n          }\n\n          if (currentProfile !== undefined) {\n            currentProfile.markStoringStart();\n          }\n\n          _this4._modulesCache.store(module.identifier(), null, module, function (err) {\n            if (currentProfile !== undefined) {\n              currentProfile.markStoringEnd();\n            }\n\n            if (err) {\n              _this4.hooks.failedModule.call(module, err);\n\n              return callback(new ModuleStoreError(module, err));\n            }\n\n            _this4.hooks.succeedModule.call(module);\n\n            return callback();\n          });\n        });\n      });\n    }\n    /**\n     * @param {Module} module to be processed for deps\n     * @param {ModuleCallback} callback callback to be triggered\n     * @returns {void}\n     */\n\n  }, {\n    key: \"processModuleDependencies\",\n    value: function processModuleDependencies(module, callback) {\n      this.processDependenciesQueue.add(module, callback);\n    }\n    /**\n     * @param {Module} module to be processed for deps\n     * @returns {void}\n     */\n\n  }, {\n    key: \"processModuleDependenciesNonRecursive\",\n    value: function processModuleDependenciesNonRecursive(module) {\n      var _this5 = this;\n\n      var processDependenciesBlock = function processDependenciesBlock(block) {\n        if (block.dependencies) {\n          var i = 0;\n\n          var _iterator = _createForOfIteratorHelper(block.dependencies),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var dep = _step.value;\n\n              _this5.moduleGraph.setParents(dep, block, module, i++);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        if (block.blocks) {\n          var _iterator2 = _createForOfIteratorHelper(block.blocks),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var b = _step2.value;\n              processDependenciesBlock(b);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      };\n\n      processDependenciesBlock(module);\n    }\n    /**\n     * @param {Module} module to be processed for deps\n     * @param {ModuleCallback} callback callback to be triggered\n     * @returns {void}\n     */\n\n  }, {\n    key: \"_processModuleDependencies\",\n    value: function _processModuleDependencies(module, callback) {\n      var _this6 = this;\n\n      /** @type {Array<{factory: ModuleFactory, dependencies: Dependency[], originModule: Module|null}>} */\n      var sortedDependencies = [];\n      /** @type {DependenciesBlock} */\n\n      var currentBlock;\n      /** @type {Map<ModuleFactory, Map<string, Dependency[]>>} */\n\n      var dependencies;\n      /** @type {DepConstructor} */\n\n      var factoryCacheKey;\n      /** @type {ModuleFactory} */\n\n      var factoryCacheKey2;\n      /** @type {Map<string, Dependency[]>} */\n\n      var factoryCacheValue;\n      /** @type {string} */\n\n      var listCacheKey1;\n      /** @type {string} */\n\n      var listCacheKey2;\n      /** @type {Dependency[]} */\n\n      var listCacheValue;\n      var inProgressSorting = 1;\n      var inProgressTransitive = 1;\n\n      var onDependenciesSorted = function onDependenciesSorted(err) {\n        if (err) return callback(err); // early exit without changing parallelism back and forth\n\n        if (sortedDependencies.length === 0 && inProgressTransitive === 1) {\n          return callback();\n        } // This is nested so we need to allow one additional task\n\n\n        _this6.processDependenciesQueue.increaseParallelism();\n\n        var _iterator3 = _createForOfIteratorHelper(sortedDependencies),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var item = _step3.value;\n            inProgressTransitive++;\n\n            _this6.handleModuleCreation(item, function (err) {\n              // In V8, the Error objects keep a reference to the functions on the stack. These warnings &\n              // errors are created inside closures that keep a reference to the Compilation, so errors are\n              // leaking the Compilation object.\n              if (err && _this6.bail) {\n                if (inProgressTransitive <= 0) return;\n                inProgressTransitive = -1; // eslint-disable-next-line no-self-assign\n\n                err.stack = err.stack;\n                onTransitiveTasksFinished(err);\n                return;\n              }\n\n              if (--inProgressTransitive === 0) onTransitiveTasksFinished();\n            });\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (--inProgressTransitive === 0) onTransitiveTasksFinished();\n      };\n\n      var onTransitiveTasksFinished = function onTransitiveTasksFinished(err) {\n        if (err) return callback(err);\n\n        _this6.processDependenciesQueue.decreaseParallelism();\n\n        return callback();\n      };\n      /**\n       * @param {Dependency} dep dependency\n       * @param {number} index index in block\n       * @returns {void}\n       */\n\n\n      var processDependency = function processDependency(dep, index) {\n        _this6.moduleGraph.setParents(dep, currentBlock, module, index);\n\n        if (_this6._unsafeCache) {\n          try {\n            var unsafeCachedModule = unsafeCacheDependencies.get(dep);\n            if (unsafeCachedModule === null) return;\n\n            if (unsafeCachedModule !== undefined) {\n              if (_this6._restoredUnsafeCacheModuleEntries.has(unsafeCachedModule)) {\n                _this6._handleExistingModuleFromUnsafeCache(module, dep, unsafeCachedModule);\n\n                return;\n              }\n\n              var identifier = unsafeCachedModule.identifier();\n\n              var cachedModule = _this6._restoredUnsafeCacheEntries.get(identifier);\n\n              if (cachedModule !== undefined) {\n                // update unsafe cache to new module\n                unsafeCacheDependencies.set(dep, cachedModule);\n\n                _this6._handleExistingModuleFromUnsafeCache(module, dep, cachedModule);\n\n                return;\n              }\n\n              inProgressSorting++;\n\n              _this6._modulesCache.get(identifier, null, function (err, cachedModule) {\n                if (err) {\n                  if (inProgressSorting <= 0) return;\n                  inProgressSorting = -1;\n                  onDependenciesSorted(err);\n                  return;\n                }\n\n                try {\n                  if (!_this6._restoredUnsafeCacheEntries.has(identifier)) {\n                    var data = unsafeCacheData.get(cachedModule);\n\n                    if (data === undefined) {\n                      processDependencyForResolving(dep);\n                      if (--inProgressSorting === 0) onDependenciesSorted();\n                      return;\n                    }\n\n                    if (cachedModule !== unsafeCachedModule) {\n                      unsafeCacheDependencies.set(dep, cachedModule);\n                    }\n\n                    cachedModule.restoreFromUnsafeCache(data, _this6.params.normalModuleFactory, _this6.params);\n\n                    _this6._restoredUnsafeCacheEntries.set(identifier, cachedModule);\n\n                    _this6._restoredUnsafeCacheModuleEntries.add(cachedModule);\n\n                    if (!_this6.modules.has(cachedModule)) {\n                      inProgressTransitive++;\n\n                      _this6._handleNewModuleFromUnsafeCache(module, dep, cachedModule, function (err) {\n                        if (err) {\n                          if (inProgressTransitive <= 0) return;\n                          inProgressTransitive = -1;\n                          onTransitiveTasksFinished(err);\n                        }\n\n                        if (--inProgressTransitive === 0) return onTransitiveTasksFinished();\n                      });\n\n                      if (--inProgressSorting === 0) onDependenciesSorted();\n                      return;\n                    }\n                  }\n\n                  if (unsafeCachedModule !== cachedModule) {\n                    unsafeCacheDependencies.set(dep, cachedModule);\n                  }\n\n                  _this6._handleExistingModuleFromUnsafeCache(module, dep, cachedModule); // a3\n\n                } catch (err) {\n                  if (inProgressSorting <= 0) return;\n                  inProgressSorting = -1;\n                  onDependenciesSorted(err);\n                  return;\n                }\n\n                if (--inProgressSorting === 0) onDependenciesSorted();\n              });\n\n              return;\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        processDependencyForResolving(dep);\n      };\n      /**\n       * @param {Dependency} dep dependency\n       * @returns {void}\n       */\n\n\n      var processDependencyForResolving = function processDependencyForResolving(dep) {\n        var resourceIdent = dep.getResourceIdentifier();\n\n        if (resourceIdent !== undefined && resourceIdent !== null) {\n          var category = dep.category;\n          var _constructor =\n          /** @type {DepConstructor} */\n          dep.constructor;\n\n          if (factoryCacheKey === _constructor) {\n            // Fast path 1: same constructor as prev item\n            if (listCacheKey1 === category && listCacheKey2 === resourceIdent) {\n              // Super fast path 1: also same resource\n              listCacheValue.push(dep);\n              return;\n            }\n          } else {\n            var factory = _this6.dependencyFactories.get(_constructor);\n\n            if (factory === undefined) {\n              throw new Error(\"No module factory available for dependency type: \".concat(_constructor.name));\n            }\n\n            if (factoryCacheKey2 === factory) {\n              // Fast path 2: same factory as prev item\n              factoryCacheKey = _constructor;\n\n              if (listCacheKey1 === category && listCacheKey2 === resourceIdent) {\n                // Super fast path 2: also same resource\n                listCacheValue.push(dep);\n                return;\n              }\n            } else {\n              // Slow path\n              if (factoryCacheKey2 !== undefined) {\n                // Archive last cache entry\n                if (dependencies === undefined) dependencies = new Map();\n                dependencies.set(factoryCacheKey2, factoryCacheValue);\n                factoryCacheValue = dependencies.get(factory);\n\n                if (factoryCacheValue === undefined) {\n                  factoryCacheValue = new Map();\n                }\n              } else {\n                factoryCacheValue = new Map();\n              }\n\n              factoryCacheKey = _constructor;\n              factoryCacheKey2 = factory;\n            }\n          } // Here webpack is using heuristic that assumes\n          // mostly esm dependencies would be used\n          // so we don't allocate extra string for them\n\n\n          var cacheKey = category === esmDependencyCategory ? resourceIdent : \"\".concat(category).concat(resourceIdent);\n          var list = factoryCacheValue.get(cacheKey);\n\n          if (list === undefined) {\n            factoryCacheValue.set(cacheKey, list = []);\n            sortedDependencies.push({\n              factory: factoryCacheKey2,\n              dependencies: list,\n              originModule: module\n            });\n          }\n\n          list.push(dep);\n          listCacheKey1 = category;\n          listCacheKey2 = resourceIdent;\n          listCacheValue = list;\n        }\n      };\n\n      try {\n        /** @type {DependenciesBlock[]} */\n        var queue = [module];\n\n        do {\n          var block = queue.pop();\n\n          if (block.dependencies) {\n            currentBlock = block;\n            var i = 0;\n\n            var _iterator4 = _createForOfIteratorHelper(block.dependencies),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var dep = _step4.value;\n                processDependency(dep, i++);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          }\n\n          if (block.blocks) {\n            var _iterator5 = _createForOfIteratorHelper(block.blocks),\n                _step5;\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var b = _step5.value;\n                queue.push(b);\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n        } while (queue.length !== 0);\n      } catch (e) {\n        return callback(e);\n      }\n\n      if (--inProgressSorting === 0) onDependenciesSorted();\n    }\n  }, {\n    key: \"_handleNewModuleFromUnsafeCache\",\n    value: function _handleNewModuleFromUnsafeCache(originModule, dependency, module, callback) {\n      var moduleGraph = this.moduleGraph;\n      moduleGraph.setResolvedModule(originModule, dependency, module);\n      moduleGraph.setIssuerIfUnset(module, originModule !== undefined ? originModule : null);\n\n      this._modules.set(module.identifier(), module);\n\n      this.modules.add(module);\n      if (this._backCompat) ModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n\n      this._handleModuleBuildAndDependencies(originModule, module, true, callback);\n    }\n  }, {\n    key: \"_handleExistingModuleFromUnsafeCache\",\n    value: function _handleExistingModuleFromUnsafeCache(originModule, dependency, module) {\n      var moduleGraph = this.moduleGraph;\n      moduleGraph.setResolvedModule(originModule, dependency, module);\n    }\n    /**\n     * @typedef {Object} HandleModuleCreationOptions\n     * @property {ModuleFactory} factory\n     * @property {Dependency[]} dependencies\n     * @property {Module | null} originModule\n     * @property {Partial<ModuleFactoryCreateDataContextInfo>=} contextInfo\n     * @property {string=} context\n     * @property {boolean=} recursive recurse into dependencies of the created module\n     * @property {boolean=} connectOrigin connect the resolved module with the origin module\n     */\n\n    /**\n     * @param {HandleModuleCreationOptions} options options object\n     * @param {ModuleCallback} callback callback\n     * @returns {void}\n     */\n\n  }, {\n    key: \"handleModuleCreation\",\n    value: function handleModuleCreation(_ref, callback) {\n      var _this7 = this;\n\n      var factory = _ref.factory,\n          dependencies = _ref.dependencies,\n          originModule = _ref.originModule,\n          contextInfo = _ref.contextInfo,\n          context = _ref.context,\n          _ref$recursive = _ref.recursive,\n          recursive = _ref$recursive === void 0 ? true : _ref$recursive,\n          _ref$connectOrigin = _ref.connectOrigin,\n          connectOrigin = _ref$connectOrigin === void 0 ? recursive : _ref$connectOrigin;\n      var moduleGraph = this.moduleGraph;\n      var currentProfile = this.profile ? new ModuleProfile() : undefined;\n      this.factorizeModule({\n        currentProfile: currentProfile,\n        factory: factory,\n        dependencies: dependencies,\n        factoryResult: true,\n        originModule: originModule,\n        contextInfo: contextInfo,\n        context: context\n      }, function (err, factoryResult) {\n        var applyFactoryResultDependencies = function applyFactoryResultDependencies() {\n          var fileDependencies = factoryResult.fileDependencies,\n              contextDependencies = factoryResult.contextDependencies,\n              missingDependencies = factoryResult.missingDependencies;\n\n          if (fileDependencies) {\n            _this7.fileDependencies.addAll(fileDependencies);\n          }\n\n          if (contextDependencies) {\n            _this7.contextDependencies.addAll(contextDependencies);\n          }\n\n          if (missingDependencies) {\n            _this7.missingDependencies.addAll(missingDependencies);\n          }\n        };\n\n        if (err) {\n          if (factoryResult) applyFactoryResultDependencies();\n\n          if (dependencies.every(function (d) {\n            return d.optional;\n          })) {\n            _this7.warnings.push(err);\n\n            return callback();\n          } else {\n            _this7.errors.push(err);\n\n            return callback(err);\n          }\n        }\n\n        var newModule = factoryResult.module;\n\n        if (!newModule) {\n          applyFactoryResultDependencies();\n          return callback();\n        }\n\n        if (currentProfile !== undefined) {\n          moduleGraph.setProfile(newModule, currentProfile);\n        }\n\n        _this7.addModule(newModule, function (err, module) {\n          if (err) {\n            applyFactoryResultDependencies();\n\n            if (!err.module) {\n              err.module = module;\n            }\n\n            _this7.errors.push(err);\n\n            return callback(err);\n          }\n\n          if (_this7._unsafeCache && factoryResult.cacheable !== false &&\n          /** @type {any} */\n          module.restoreFromUnsafeCache && _this7._unsafeCachePredicate(module)) {\n            var unsafeCacheableModule =\n            /** @type {Module & { restoreFromUnsafeCache: Function }} */\n            module;\n\n            for (var i = 0; i < dependencies.length; i++) {\n              var dependency = dependencies[i];\n              moduleGraph.setResolvedModule(connectOrigin ? originModule : null, dependency, unsafeCacheableModule);\n              unsafeCacheDependencies.set(dependency, unsafeCacheableModule);\n            }\n\n            if (!unsafeCacheData.has(unsafeCacheableModule)) {\n              unsafeCacheData.set(unsafeCacheableModule, unsafeCacheableModule.getUnsafeCacheData());\n            }\n          } else {\n            applyFactoryResultDependencies();\n\n            for (var _i2 = 0; _i2 < dependencies.length; _i2++) {\n              var _dependency = dependencies[_i2];\n              moduleGraph.setResolvedModule(connectOrigin ? originModule : null, _dependency, module);\n            }\n          }\n\n          moduleGraph.setIssuerIfUnset(module, originModule !== undefined ? originModule : null);\n\n          if (module !== newModule) {\n            if (currentProfile !== undefined) {\n              var otherProfile = moduleGraph.getProfile(module);\n\n              if (otherProfile !== undefined) {\n                currentProfile.mergeInto(otherProfile);\n              } else {\n                moduleGraph.setProfile(module, currentProfile);\n              }\n            }\n          }\n\n          _this7._handleModuleBuildAndDependencies(originModule, module, recursive, callback);\n        });\n      });\n    }\n  }, {\n    key: \"_handleModuleBuildAndDependencies\",\n    value: function _handleModuleBuildAndDependencies(originModule, module, recursive, callback) {\n      var _this8 = this;\n\n      // Check for cycles when build is trigger inside another build\n      var creatingModuleDuringBuildSet = undefined;\n\n      if (!recursive && this.buildQueue.isProcessing(originModule)) {\n        // Track build dependency\n        creatingModuleDuringBuildSet = this.creatingModuleDuringBuild.get(originModule);\n\n        if (creatingModuleDuringBuildSet === undefined) {\n          creatingModuleDuringBuildSet = new Set();\n          this.creatingModuleDuringBuild.set(originModule, creatingModuleDuringBuildSet);\n        }\n\n        creatingModuleDuringBuildSet.add(module); // When building is blocked by another module\n        // search for a cycle, cancel the cycle by throwing\n        // an error (otherwise this would deadlock)\n\n        var blockReasons = this.creatingModuleDuringBuild.get(module);\n\n        if (blockReasons !== undefined) {\n          var set = new Set(blockReasons);\n\n          var _iterator6 = _createForOfIteratorHelper(set),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var item = _step6.value;\n\n              var _blockReasons = this.creatingModuleDuringBuild.get(item);\n\n              if (_blockReasons !== undefined) {\n                var _iterator7 = _createForOfIteratorHelper(_blockReasons),\n                    _step7;\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    var m = _step7.value;\n\n                    if (m === module) {\n                      return callback(new BuildCycleError(module));\n                    }\n\n                    set.add(m);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n              }\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        }\n      }\n\n      this.buildModule(module, function (err) {\n        if (creatingModuleDuringBuildSet !== undefined) {\n          creatingModuleDuringBuildSet.delete(module);\n        }\n\n        if (err) {\n          if (!err.module) {\n            err.module = module;\n          }\n\n          _this8.errors.push(err);\n\n          return callback(err);\n        }\n\n        if (!recursive) {\n          _this8.processModuleDependenciesNonRecursive(module);\n\n          callback(null, module);\n          return;\n        } // This avoids deadlocks for circular dependencies\n\n\n        if (_this8.processDependenciesQueue.isProcessing(module)) {\n          return callback();\n        }\n\n        _this8.processModuleDependencies(module, function (err) {\n          if (err) {\n            return callback(err);\n          }\n\n          callback(null, module);\n        });\n      });\n    }\n    /**\n     * @param {FactorizeModuleOptions} options options object\n     * @param {ModuleOrFactoryResultCallback} callback callback\n     * @returns {void}\n     */\n\n  }, {\n    key: \"_factorizeModule\",\n    value: function _factorizeModule(_ref2, callback) {\n      var _this9 = this;\n\n      var currentProfile = _ref2.currentProfile,\n          factory = _ref2.factory,\n          dependencies = _ref2.dependencies,\n          originModule = _ref2.originModule,\n          factoryResult = _ref2.factoryResult,\n          contextInfo = _ref2.contextInfo,\n          context = _ref2.context;\n\n      if (currentProfile !== undefined) {\n        currentProfile.markFactoryStart();\n      }\n\n      factory.create({\n        contextInfo: _objectSpread({\n          issuer: originModule ? originModule.nameForCondition() : \"\",\n          issuerLayer: originModule ? originModule.layer : null,\n          compiler: this.compiler.name\n        }, contextInfo),\n        resolveOptions: originModule ? originModule.resolveOptions : undefined,\n        context: context ? context : originModule ? originModule.context : this.compiler.context,\n        dependencies: dependencies\n      }, function (err, result) {\n        if (result) {\n          // TODO webpack 6: remove\n          // For backward-compat\n          if (result.module === undefined && result instanceof Module) {\n            result = {\n              module: result\n            };\n          }\n\n          if (!factoryResult) {\n            var _result = result,\n                fileDependencies = _result.fileDependencies,\n                contextDependencies = _result.contextDependencies,\n                missingDependencies = _result.missingDependencies;\n\n            if (fileDependencies) {\n              _this9.fileDependencies.addAll(fileDependencies);\n            }\n\n            if (contextDependencies) {\n              _this9.contextDependencies.addAll(contextDependencies);\n            }\n\n            if (missingDependencies) {\n              _this9.missingDependencies.addAll(missingDependencies);\n            }\n          }\n        }\n\n        if (err) {\n          var notFoundError = new ModuleNotFoundError(originModule, err, dependencies.map(function (d) {\n            return d.loc;\n          }).filter(Boolean)[0]);\n          return callback(notFoundError, factoryResult ? result : undefined);\n        }\n\n        if (!result) {\n          return callback();\n        }\n\n        if (currentProfile !== undefined) {\n          currentProfile.markFactoryEnd();\n        }\n\n        callback(null, factoryResult ? result : result.module);\n      });\n    }\n    /**\n     * @param {string} context context string path\n     * @param {Dependency} dependency dependency used to create Module chain\n     * @param {ModuleCallback} callback callback for when module chain is complete\n     * @returns {void} will throw if dependency instance is not a valid Dependency\n     */\n\n  }, {\n    key: \"addModuleChain\",\n    value: function addModuleChain(context, dependency, callback) {\n      return this.addModuleTree({\n        context: context,\n        dependency: dependency\n      }, callback);\n    }\n    /**\n     * @param {Object} options options\n     * @param {string} options.context context string path\n     * @param {Dependency} options.dependency dependency used to create Module chain\n     * @param {Partial<ModuleFactoryCreateDataContextInfo>=} options.contextInfo additional context info for the root module\n     * @param {ModuleCallback} callback callback for when module chain is complete\n     * @returns {void} will throw if dependency instance is not a valid Dependency\n     */\n\n  }, {\n    key: \"addModuleTree\",\n    value: function addModuleTree(_ref3, callback) {\n      var _this10 = this;\n\n      var context = _ref3.context,\n          dependency = _ref3.dependency,\n          contextInfo = _ref3.contextInfo;\n\n      if (typeof dependency !== \"object\" || dependency === null || !dependency.constructor) {\n        return callback(new WebpackError(\"Parameter 'dependency' must be a Dependency\"));\n      }\n\n      var Dep =\n      /** @type {DepConstructor} */\n      dependency.constructor;\n      var moduleFactory = this.dependencyFactories.get(Dep);\n\n      if (!moduleFactory) {\n        return callback(new WebpackError(\"No dependency factory available for this dependency type: \".concat(dependency.constructor.name)));\n      }\n\n      this.handleModuleCreation({\n        factory: moduleFactory,\n        dependencies: [dependency],\n        originModule: null,\n        contextInfo: contextInfo,\n        context: context\n      }, function (err, result) {\n        if (err && _this10.bail) {\n          callback(err);\n\n          _this10.buildQueue.stop();\n\n          _this10.rebuildQueue.stop();\n\n          _this10.processDependenciesQueue.stop();\n\n          _this10.factorizeQueue.stop();\n        } else if (!err && result) {\n          callback(null, result);\n        } else {\n          callback();\n        }\n      });\n    }\n    /**\n     * @param {string} context context path for entry\n     * @param {Dependency} entry entry dependency that should be followed\n     * @param {string | EntryOptions} optionsOrName options or deprecated name of entry\n     * @param {ModuleCallback} callback callback function\n     * @returns {void} returns\n     */\n\n  }, {\n    key: \"addEntry\",\n    value: function addEntry(context, entry, optionsOrName, callback) {\n      // TODO webpack 6 remove\n      var options = typeof optionsOrName === \"object\" ? optionsOrName : {\n        name: optionsOrName\n      };\n\n      this._addEntryItem(context, entry, \"dependencies\", options, callback);\n    }\n    /**\n     * @param {string} context context path for entry\n     * @param {Dependency} dependency dependency that should be followed\n     * @param {EntryOptions} options options\n     * @param {ModuleCallback} callback callback function\n     * @returns {void} returns\n     */\n\n  }, {\n    key: \"addInclude\",\n    value: function addInclude(context, dependency, options, callback) {\n      this._addEntryItem(context, dependency, \"includeDependencies\", options, callback);\n    }\n    /**\n     * @param {string} context context path for entry\n     * @param {Dependency} entry entry dependency that should be followed\n     * @param {\"dependencies\" | \"includeDependencies\"} target type of entry\n     * @param {EntryOptions} options options\n     * @param {ModuleCallback} callback callback function\n     * @returns {void} returns\n     */\n\n  }, {\n    key: \"_addEntryItem\",\n    value: function _addEntryItem(context, entry, target, options, callback) {\n      var _this11 = this;\n\n      var name = options.name;\n      var entryData = name !== undefined ? this.entries.get(name) : this.globalEntry;\n\n      if (entryData === undefined) {\n        entryData = {\n          dependencies: [],\n          includeDependencies: [],\n          options: _objectSpread({\n            name: undefined\n          }, options)\n        };\n        entryData[target].push(entry);\n        this.entries.set(name, entryData);\n      } else {\n        entryData[target].push(entry);\n\n        for (var _i3 = 0, _Object$keys2 = Object.keys(options); _i3 < _Object$keys2.length; _i3++) {\n          var key = _Object$keys2[_i3];\n          if (options[key] === undefined) continue;\n          if (entryData.options[key] === options[key]) continue;\n\n          if (Array.isArray(entryData.options[key]) && Array.isArray(options[key]) && arrayEquals(entryData.options[key], options[key])) {\n            continue;\n          }\n\n          if (entryData.options[key] === undefined) {\n            entryData.options[key] = options[key];\n          } else {\n            return callback(new WebpackError(\"Conflicting entry option \".concat(key, \" = \").concat(entryData.options[key], \" vs \").concat(options[key])));\n          }\n        }\n      }\n\n      this.hooks.addEntry.call(entry, options);\n      this.addModuleTree({\n        context: context,\n        dependency: entry,\n        contextInfo: entryData.options.layer ? {\n          issuerLayer: entryData.options.layer\n        } : undefined\n      }, function (err, module) {\n        if (err) {\n          _this11.hooks.failedEntry.call(entry, options, err);\n\n          return callback(err);\n        }\n\n        _this11.hooks.succeedEntry.call(entry, options, module);\n\n        return callback(null, module);\n      });\n    }\n    /**\n     * @param {Module} module module to be rebuilt\n     * @param {ModuleCallback} callback callback when module finishes rebuilding\n     * @returns {void}\n     */\n\n  }, {\n    key: \"rebuildModule\",\n    value: function rebuildModule(module, callback) {\n      this.rebuildQueue.add(module, callback);\n    }\n    /**\n     * @param {Module} module module to be rebuilt\n     * @param {ModuleCallback} callback callback when module finishes rebuilding\n     * @returns {void}\n     */\n\n  }, {\n    key: \"_rebuildModule\",\n    value: function _rebuildModule(module, callback) {\n      var _this12 = this;\n\n      this.hooks.rebuildModule.call(module);\n      var oldDependencies = module.dependencies.slice();\n      var oldBlocks = module.blocks.slice();\n      module.invalidateBuild();\n      this.buildQueue.invalidate(module);\n      this.buildModule(module, function (err) {\n        if (err) {\n          return _this12.hooks.finishRebuildingModule.callAsync(module, function (err2) {\n            if (err2) {\n              callback(makeWebpackError(err2, \"Compilation.hooks.finishRebuildingModule\"));\n              return;\n            }\n\n            callback(err);\n          });\n        }\n\n        _this12.processDependenciesQueue.invalidate(module);\n\n        _this12.moduleGraph.unfreeze();\n\n        _this12.processModuleDependencies(module, function (err) {\n          if (err) return callback(err);\n\n          _this12.removeReasonsOfDependencyBlock(module, {\n            dependencies: oldDependencies,\n            blocks: oldBlocks\n          });\n\n          _this12.hooks.finishRebuildingModule.callAsync(module, function (err2) {\n            if (err2) {\n              callback(makeWebpackError(err2, \"Compilation.hooks.finishRebuildingModule\"));\n              return;\n            }\n\n            callback(null, module);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_computeAffectedModules\",\n    value: function _computeAffectedModules(modules) {\n      var moduleMemCacheCache = this.compiler.moduleMemCaches;\n      if (!moduleMemCacheCache) return;\n\n      if (!this.moduleMemCaches) {\n        this.moduleMemCaches = new Map();\n        this.moduleGraph.setModuleMemCaches(this.moduleMemCaches);\n      }\n\n      var moduleGraph = this.moduleGraph,\n          moduleMemCaches = this.moduleMemCaches;\n      var affectedModules = new Set();\n      var infectedModules = new Set();\n      var statNew = 0;\n      var statChanged = 0;\n      var statUnchanged = 0;\n      var statReferencesChanged = 0;\n      var statWithoutBuild = 0;\n\n      var computeReferences = function computeReferences(module) {\n        /** @type {WeakMap<Dependency, Module>} */\n        var references = undefined;\n\n        var _iterator8 = _createForOfIteratorHelper(moduleGraph.getOutgoingConnections(module)),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var connection = _step8.value;\n            var d = connection.dependency;\n            var m = connection.module;\n            if (!d || !m || unsafeCacheDependencies.has(d)) continue;\n            if (references === undefined) references = new WeakMap();\n            references.set(d, m);\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        return references;\n      };\n      /**\n       * @param {Module} module the module\n       * @param {WeakMap<Dependency, Module>} references references\n       * @returns {boolean} true, when the references differ\n       */\n\n\n      var compareReferences = function compareReferences(module, references) {\n        if (references === undefined) return true;\n\n        var _iterator9 = _createForOfIteratorHelper(moduleGraph.getOutgoingConnections(module)),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var connection = _step9.value;\n            var d = connection.dependency;\n            if (!d) continue;\n            var entry = references.get(d);\n            if (entry === undefined) continue;\n            if (entry !== connection.module) return false;\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n\n        return true;\n      };\n\n      var modulesWithoutCache = new Set(modules);\n\n      var _iterator10 = _createForOfIteratorHelper(moduleMemCacheCache),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var _step10$value = _slicedToArray(_step10.value, 2),\n              _module = _step10$value[0],\n              cachedMemCache = _step10$value[1];\n\n          if (modulesWithoutCache.has(_module)) {\n            var buildInfo = _module.buildInfo;\n\n            if (buildInfo) {\n              if (cachedMemCache.buildInfo !== buildInfo) {\n                // use a new one\n                var memCache = new WeakTupleMap();\n                moduleMemCaches.set(_module, memCache);\n                affectedModules.add(_module);\n                cachedMemCache.buildInfo = buildInfo;\n                cachedMemCache.references = computeReferences(_module);\n                cachedMemCache.memCache = memCache;\n                statChanged++;\n              } else if (!compareReferences(_module, cachedMemCache.references)) {\n                // use a new one\n                var _memCache = new WeakTupleMap();\n\n                moduleMemCaches.set(_module, _memCache);\n                affectedModules.add(_module);\n                cachedMemCache.references = computeReferences(_module);\n                cachedMemCache.memCache = _memCache;\n                statReferencesChanged++;\n              } else {\n                // keep the old mem cache\n                moduleMemCaches.set(_module, cachedMemCache.memCache);\n                statUnchanged++;\n              }\n            } else {\n              infectedModules.add(_module);\n              moduleMemCacheCache.delete(_module);\n              statWithoutBuild++;\n            }\n\n            modulesWithoutCache.delete(_module);\n          } else {\n            moduleMemCacheCache.delete(_module);\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      var _iterator11 = _createForOfIteratorHelper(modulesWithoutCache),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var _module2 = _step11.value;\n          var _buildInfo = _module2.buildInfo;\n\n          if (_buildInfo) {\n            // create a new entry\n            var _memCache2 = new WeakTupleMap();\n\n            moduleMemCacheCache.set(_module2, {\n              buildInfo: _buildInfo,\n              references: computeReferences(_module2),\n              memCache: _memCache2\n            });\n            moduleMemCaches.set(_module2, _memCache2);\n            affectedModules.add(_module2);\n            statNew++;\n          } else {\n            infectedModules.add(_module2);\n            statWithoutBuild++;\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      var reduceAffectType = function reduceAffectType(connections) {\n        var affected = false;\n\n        var _iterator12 = _createForOfIteratorHelper(connections),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var dependency = _step12.value.dependency;\n            if (!dependency) continue;\n            var type = dependency.couldAffectReferencingModule();\n            if (type === Dependency.TRANSITIVE) return Dependency.TRANSITIVE;\n            if (type === false) continue;\n            affected = true;\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n\n        return affected;\n      };\n\n      var directOnlyInfectedModules = new Set();\n\n      var _iterator13 = _createForOfIteratorHelper(infectedModules),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var _module3 = _step13.value;\n\n          var _iterator17 = _createForOfIteratorHelper(moduleGraph.getIncomingConnectionsByOriginModule(_module3)),\n              _step17;\n\n          try {\n            for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n              var _step17$value = _slicedToArray(_step17.value, 2),\n                  referencingModule = _step17$value[0],\n                  connections = _step17$value[1];\n\n              if (!referencingModule) continue;\n              if (infectedModules.has(referencingModule)) continue;\n              var type = reduceAffectType(connections);\n              if (!type) continue;\n\n              if (type === true) {\n                directOnlyInfectedModules.add(referencingModule);\n              } else {\n                infectedModules.add(referencingModule);\n              }\n            }\n          } catch (err) {\n            _iterator17.e(err);\n          } finally {\n            _iterator17.f();\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n\n      var _iterator14 = _createForOfIteratorHelper(directOnlyInfectedModules),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var _module4 = _step14.value;\n          infectedModules.add(_module4);\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n\n      var directOnlyAffectModules = new Set();\n\n      var _iterator15 = _createForOfIteratorHelper(affectedModules),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var _module5 = _step15.value;\n\n          var _iterator18 = _createForOfIteratorHelper(moduleGraph.getIncomingConnectionsByOriginModule(_module5)),\n              _step18;\n\n          try {\n            for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n              var _step18$value = _slicedToArray(_step18.value, 2),\n                  _referencingModule = _step18$value[0],\n                  _connections = _step18$value[1];\n\n              if (!_referencingModule) continue;\n              if (infectedModules.has(_referencingModule)) continue;\n              if (affectedModules.has(_referencingModule)) continue;\n\n              var _type = reduceAffectType(_connections);\n\n              if (!_type) continue;\n\n              if (_type === true) {\n                directOnlyAffectModules.add(_referencingModule);\n              } else {\n                affectedModules.add(_referencingModule);\n              }\n\n              var _memCache3 = new WeakTupleMap();\n\n              var cache = moduleMemCacheCache.get(_referencingModule);\n              cache.memCache = _memCache3;\n              moduleMemCaches.set(_referencingModule, _memCache3);\n            }\n          } catch (err) {\n            _iterator18.e(err);\n          } finally {\n            _iterator18.f();\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      var _iterator16 = _createForOfIteratorHelper(directOnlyAffectModules),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var _module6 = _step16.value;\n          affectedModules.add(_module6);\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n\n      this.logger.log(\"\".concat(Math.round(100 * (affectedModules.size + infectedModules.size) / this.modules.size), \"% (\").concat(affectedModules.size, \" affected + \").concat(infectedModules.size, \" infected of \").concat(this.modules.size, \") modules flagged as affected (\").concat(statNew, \" new modules, \").concat(statChanged, \" changed, \").concat(statReferencesChanged, \" references changed, \").concat(statUnchanged, \" unchanged, \").concat(statWithoutBuild, \" were not built)\"));\n    }\n  }, {\n    key: \"_computeAffectedModulesWithChunkGraph\",\n    value: function _computeAffectedModulesWithChunkGraph() {\n      var moduleMemCaches = this.moduleMemCaches;\n      if (!moduleMemCaches) return;\n      var moduleMemCaches2 = this.moduleMemCaches2 = new Map();\n      var moduleGraph = this.moduleGraph,\n          chunkGraph = this.chunkGraph;\n      var key = \"memCache2\";\n      var statUnchanged = 0;\n      var statChanged = 0;\n      var statNew = 0;\n      /**\n       * @param {Module} module module\n       * @returns {{ id: string | number, modules?: Map<Module, string | number | undefined>, blocks?: (string | number)[] }} references\n       */\n\n      var computeReferences = function computeReferences(module) {\n        var id = chunkGraph.getModuleId(module);\n        /** @type {Map<Module, string | number | undefined>} */\n\n        var modules = undefined;\n        /** @type {(string | number)[] | undefined} */\n\n        var blocks = undefined;\n        var outgoing = moduleGraph.getOutgoingConnectionsByModule(module);\n\n        if (outgoing !== undefined) {\n          var _iterator19 = _createForOfIteratorHelper(outgoing.keys()),\n              _step19;\n\n          try {\n            for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n              var m = _step19.value;\n              if (!m) continue;\n              if (modules === undefined) modules = new Map();\n              modules.set(m, chunkGraph.getModuleId(m));\n            }\n          } catch (err) {\n            _iterator19.e(err);\n          } finally {\n            _iterator19.f();\n          }\n        }\n\n        if (module.blocks.length > 0) {\n          blocks = [];\n          var queue = Array.from(module.blocks);\n\n          for (var _i4 = 0, _queue = queue; _i4 < _queue.length; _i4++) {\n            var block = _queue[_i4];\n            var chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\n            if (chunkGroup) {\n              var _iterator20 = _createForOfIteratorHelper(chunkGroup.chunks),\n                  _step20;\n\n              try {\n                for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                  var chunk = _step20.value;\n                  blocks.push(chunk.id);\n                }\n              } catch (err) {\n                _iterator20.e(err);\n              } finally {\n                _iterator20.f();\n              }\n            } else {\n              blocks.push(null);\n            }\n\n            queue.push.apply(queue, block.blocks);\n          }\n        }\n\n        return {\n          id: id,\n          modules: modules,\n          blocks: blocks\n        };\n      };\n      /**\n       * @param {Module} module module\n       * @param {Object} references references\n       * @param {string | number} references.id id\n       * @param {Map<Module, string | number>=} references.modules modules\n       * @param {(string | number)[]=} references.blocks blocks\n       * @returns {boolean} ok?\n       */\n\n\n      var compareReferences = function compareReferences(module, _ref4) {\n        var id = _ref4.id,\n            modules = _ref4.modules,\n            blocks = _ref4.blocks;\n        if (id !== chunkGraph.getModuleId(module)) return false;\n\n        if (modules !== undefined) {\n          var _iterator21 = _createForOfIteratorHelper(modules),\n              _step21;\n\n          try {\n            for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n              var _step21$value = _slicedToArray(_step21.value, 2),\n                  _module7 = _step21$value[0],\n                  _id = _step21$value[1];\n\n              if (chunkGraph.getModuleId(_module7) !== _id) return false;\n            }\n          } catch (err) {\n            _iterator21.e(err);\n          } finally {\n            _iterator21.f();\n          }\n        }\n\n        if (blocks !== undefined) {\n          var queue = Array.from(module.blocks);\n          var i = 0;\n\n          for (var _i5 = 0, _queue2 = queue; _i5 < _queue2.length; _i5++) {\n            var block = _queue2[_i5];\n            var chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\n            if (chunkGroup) {\n              var _iterator22 = _createForOfIteratorHelper(chunkGroup.chunks),\n                  _step22;\n\n              try {\n                for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n                  var chunk = _step22.value;\n                  if (i >= blocks.length || blocks[i++] !== chunk.id) return false;\n                }\n              } catch (err) {\n                _iterator22.e(err);\n              } finally {\n                _iterator22.f();\n              }\n            } else {\n              if (i >= blocks.length || blocks[i++] !== null) return false;\n            }\n\n            queue.push.apply(queue, block.blocks);\n          }\n\n          if (i !== blocks.length) return false;\n        }\n\n        return true;\n      };\n\n      var _iterator23 = _createForOfIteratorHelper(moduleMemCaches),\n          _step23;\n\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var _step23$value = _slicedToArray(_step23.value, 2),\n              _module8 = _step23$value[0],\n              memCache = _step23$value[1];\n\n          /** @type {{ references: { id: string | number, modules?: Map<Module, string | number | undefined>, blocks?: (string | number)[]}, memCache: WeakTupleMap<any[], any> }} */\n          var cache = memCache.get(key);\n\n          if (cache === undefined) {\n            var memCache2 = new WeakTupleMap();\n            memCache.set(key, {\n              references: computeReferences(_module8),\n              memCache: memCache2\n            });\n            moduleMemCaches2.set(_module8, memCache2);\n            statNew++;\n          } else if (!compareReferences(_module8, cache.references)) {\n            var _memCache4 = new WeakTupleMap();\n\n            cache.references = computeReferences(_module8);\n            cache.memCache = _memCache4;\n            moduleMemCaches2.set(_module8, _memCache4);\n            statChanged++;\n          } else {\n            moduleMemCaches2.set(_module8, cache.memCache);\n            statUnchanged++;\n          }\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n\n      this.logger.log(\"\".concat(Math.round(100 * statChanged / (statNew + statChanged + statUnchanged)), \"% modules flagged as affected by chunk graph (\").concat(statNew, \" new modules, \").concat(statChanged, \" changed, \").concat(statUnchanged, \" unchanged)\"));\n    }\n  }, {\n    key: \"finish\",\n    value: function finish(callback) {\n      var _this13 = this;\n\n      this.factorizeQueue.clear();\n\n      if (this.profile) {\n        this.logger.time(\"finish module profiles\");\n\n        var ParallelismFactorCalculator = require(\"./util/ParallelismFactorCalculator\");\n\n        var p = new ParallelismFactorCalculator();\n        var moduleGraph = this.moduleGraph;\n        var modulesWithProfiles = new Map();\n\n        var _iterator24 = _createForOfIteratorHelper(this.modules),\n            _step24;\n\n        try {\n          var _loop = function _loop() {\n            var module = _step24.value;\n            var profile = moduleGraph.getProfile(module);\n            if (!profile) return \"continue\";\n            modulesWithProfiles.set(module, profile);\n            p.range(profile.buildingStartTime, profile.buildingEndTime, function (f) {\n              return profile.buildingParallelismFactor = f;\n            });\n            p.range(profile.factoryStartTime, profile.factoryEndTime, function (f) {\n              return profile.factoryParallelismFactor = f;\n            });\n            p.range(profile.integrationStartTime, profile.integrationEndTime, function (f) {\n              return profile.integrationParallelismFactor = f;\n            });\n            p.range(profile.storingStartTime, profile.storingEndTime, function (f) {\n              return profile.storingParallelismFactor = f;\n            });\n            p.range(profile.restoringStartTime, profile.restoringEndTime, function (f) {\n              return profile.restoringParallelismFactor = f;\n            });\n\n            if (profile.additionalFactoryTimes) {\n              var _iterator29 = _createForOfIteratorHelper(profile.additionalFactoryTimes),\n                  _step29;\n\n              try {\n                var _loop2 = function _loop2() {\n                  var _step29$value = _step29.value,\n                      start = _step29$value.start,\n                      end = _step29$value.end;\n                  var influence = (end - start) / profile.additionalFactories;\n                  p.range(start, end, function (f) {\n                    return profile.additionalFactoriesParallelismFactor += f * influence;\n                  });\n                };\n\n                for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n                  _loop2();\n                }\n              } catch (err) {\n                _iterator29.e(err);\n              } finally {\n                _iterator29.f();\n              }\n            }\n          };\n\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var _ret = _loop();\n\n            if (_ret === \"continue\") continue;\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n\n        p.calculate();\n        var logger = this.getLogger(\"webpack.Compilation.ModuleProfile\");\n\n        var logByValue = function logByValue(value, msg) {\n          if (value > 1000) {\n            logger.error(msg);\n          } else if (value > 500) {\n            logger.warn(msg);\n          } else if (value > 200) {\n            logger.info(msg);\n          } else if (value > 30) {\n            logger.log(msg);\n          } else {\n            logger.debug(msg);\n          }\n        };\n\n        var logNormalSummary = function logNormalSummary(category, getDuration, getParallelism) {\n          var sum = 0;\n          var max = 0;\n\n          var _iterator25 = _createForOfIteratorHelper(modulesWithProfiles),\n              _step25;\n\n          try {\n            for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n              var _step25$value = _slicedToArray(_step25.value, 2),\n                  _module9 = _step25$value[0],\n                  profile = _step25$value[1];\n\n              var _p = getParallelism(profile);\n\n              var d = getDuration(profile);\n              if (d === 0 || _p === 0) continue;\n              var t = d / _p;\n              sum += t;\n              if (t <= 10) continue;\n              logByValue(t, \" | \".concat(Math.round(t), \" ms\").concat(_p >= 1.1 ? \" (parallelism \".concat(Math.round(_p * 10) / 10, \")\") : \"\", \" \").concat(category, \" > \").concat(_module9.readableIdentifier(_this13.requestShortener)));\n              max = Math.max(max, t);\n            }\n          } catch (err) {\n            _iterator25.e(err);\n          } finally {\n            _iterator25.f();\n          }\n\n          if (sum <= 10) return;\n          logByValue(Math.max(sum / 10, max), \"\".concat(Math.round(sum), \" ms \").concat(category));\n        };\n\n        var logByLoadersSummary = function logByLoadersSummary(category, getDuration, getParallelism) {\n          var map = new Map();\n\n          var _iterator26 = _createForOfIteratorHelper(modulesWithProfiles),\n              _step26;\n\n          try {\n            for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n              var _step26$value = _slicedToArray(_step26.value, 2),\n                  _module10 = _step26$value[0],\n                  profile = _step26$value[1];\n\n              var list = provide(map, _module10.type + \"!\" + _module10.identifier().replace(/(!|^)[^!]*$/, \"\"), function () {\n                return [];\n              });\n              list.push({\n                module: _module10,\n                profile: profile\n              });\n            }\n          } catch (err) {\n            _iterator26.e(err);\n          } finally {\n            _iterator26.f();\n          }\n\n          var sum = 0;\n          var max = 0;\n\n          var _iterator27 = _createForOfIteratorHelper(map),\n              _step27;\n\n          try {\n            for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n              var _step27$value = _slicedToArray(_step27.value, 2),\n                  key = _step27$value[0],\n                  _modules = _step27$value[1];\n\n              var innerSum = 0;\n              var innerMax = 0;\n\n              var _iterator28 = _createForOfIteratorHelper(_modules),\n                  _step28;\n\n              try {\n                for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n                  var _step28$value = _step28.value,\n                      _module11 = _step28$value.module,\n                      _profile = _step28$value.profile;\n\n                  var _p2 = getParallelism(_profile);\n\n                  var d = getDuration(_profile);\n                  if (d === 0 || _p2 === 0) continue;\n\n                  var _t = d / _p2;\n\n                  innerSum += _t;\n                  if (_t <= 10) continue;\n                  logByValue(_t, \" |  | \".concat(Math.round(_t), \" ms\").concat(_p2 >= 1.1 ? \" (parallelism \".concat(Math.round(_p2 * 10) / 10, \")\") : \"\", \" \").concat(category, \" > \").concat(_module11.readableIdentifier(_this13.requestShortener)));\n                  innerMax = Math.max(innerMax, _t);\n                }\n              } catch (err) {\n                _iterator28.e(err);\n              } finally {\n                _iterator28.f();\n              }\n\n              sum += innerSum;\n              if (innerSum <= 10) continue;\n              var idx = key.indexOf(\"!\");\n              var loaders = key.slice(idx + 1);\n              var moduleType = key.slice(0, idx);\n              var t = Math.max(innerSum / 10, innerMax);\n              logByValue(t, \" | \".concat(Math.round(innerSum), \" ms \").concat(category, \" > \").concat(loaders ? \"\".concat(_modules.length, \" x \").concat(moduleType, \" with \").concat(_this13.requestShortener.shorten(loaders)) : \"\".concat(_modules.length, \" x \").concat(moduleType)));\n              max = Math.max(max, t);\n            }\n          } catch (err) {\n            _iterator27.e(err);\n          } finally {\n            _iterator27.f();\n          }\n\n          if (sum <= 10) return;\n          logByValue(Math.max(sum / 10, max), \"\".concat(Math.round(sum), \" ms \").concat(category));\n        };\n\n        logNormalSummary(\"resolve to new modules\", function (p) {\n          return p.factory;\n        }, function (p) {\n          return p.factoryParallelismFactor;\n        });\n        logNormalSummary(\"resolve to existing modules\", function (p) {\n          return p.additionalFactories;\n        }, function (p) {\n          return p.additionalFactoriesParallelismFactor;\n        });\n        logNormalSummary(\"integrate modules\", function (p) {\n          return p.restoring;\n        }, function (p) {\n          return p.restoringParallelismFactor;\n        });\n        logByLoadersSummary(\"build modules\", function (p) {\n          return p.building;\n        }, function (p) {\n          return p.buildingParallelismFactor;\n        });\n        logNormalSummary(\"store modules\", function (p) {\n          return p.storing;\n        }, function (p) {\n          return p.storingParallelismFactor;\n        });\n        logNormalSummary(\"restore modules\", function (p) {\n          return p.restoring;\n        }, function (p) {\n          return p.restoringParallelismFactor;\n        });\n        this.logger.timeEnd(\"finish module profiles\");\n      }\n\n      this.logger.time(\"compute affected modules\");\n\n      this._computeAffectedModules(this.modules);\n\n      this.logger.timeEnd(\"compute affected modules\");\n      this.logger.time(\"finish modules\");\n      var modules = this.modules,\n          moduleMemCaches = this.moduleMemCaches;\n      this.hooks.finishModules.callAsync(modules, function (err) {\n        _this13.logger.timeEnd(\"finish modules\");\n\n        if (err) return callback(err); // extract warnings and errors from modules\n\n        _this13.moduleGraph.freeze(\"dependency errors\"); // TODO keep a cacheToken (= {}) for each module in the graph\n        // create a new one per compilation and flag all updated files\n        // and parents with it\n\n\n        _this13.logger.time(\"report dependency errors and warnings\");\n\n        var _iterator30 = _createForOfIteratorHelper(modules),\n            _step30;\n\n        try {\n          for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n            var _module12 = _step30.value;\n            // TODO only run for modules with changed cacheToken\n            // global WeakMap<CacheToken, WeakSet<Module>> to keep modules without errors/warnings\n            var memCache = moduleMemCaches && moduleMemCaches.get(_module12);\n            if (memCache && memCache.get(\"noWarningsOrErrors\")) continue;\n\n            var hasProblems = _this13.reportDependencyErrorsAndWarnings(_module12, [_module12]);\n\n            var errors = _module12.getErrors();\n\n            if (errors !== undefined) {\n              var _iterator31 = _createForOfIteratorHelper(errors),\n                  _step31;\n\n              try {\n                for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n                  var error = _step31.value;\n\n                  if (!error.module) {\n                    error.module = _module12;\n                  }\n\n                  _this13.errors.push(error);\n\n                  hasProblems = true;\n                }\n              } catch (err) {\n                _iterator31.e(err);\n              } finally {\n                _iterator31.f();\n              }\n            }\n\n            var warnings = _module12.getWarnings();\n\n            if (warnings !== undefined) {\n              var _iterator32 = _createForOfIteratorHelper(warnings),\n                  _step32;\n\n              try {\n                for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n                  var warning = _step32.value;\n\n                  if (!warning.module) {\n                    warning.module = _module12;\n                  }\n\n                  _this13.warnings.push(warning);\n\n                  hasProblems = true;\n                }\n              } catch (err) {\n                _iterator32.e(err);\n              } finally {\n                _iterator32.f();\n              }\n            }\n\n            if (!hasProblems && memCache) memCache.set(\"noWarningsOrErrors\", true);\n          }\n        } catch (err) {\n          _iterator30.e(err);\n        } finally {\n          _iterator30.f();\n        }\n\n        _this13.moduleGraph.unfreeze();\n\n        _this13.logger.timeEnd(\"report dependency errors and warnings\");\n\n        callback();\n      });\n    }\n  }, {\n    key: \"unseal\",\n    value: function unseal() {\n      this.hooks.unseal.call();\n      this.chunks.clear();\n      this.chunkGroups.length = 0;\n      this.namedChunks.clear();\n      this.namedChunkGroups.clear();\n      this.entrypoints.clear();\n      this.additionalChunkAssets.length = 0;\n      this.assets = {};\n      this.assetsInfo.clear();\n      this.moduleGraph.removeAllModuleAttributes();\n      this.moduleGraph.unfreeze();\n      this.moduleMemCaches2 = undefined;\n    }\n    /**\n     * @param {Callback} callback signals when the call finishes\n     * @returns {void}\n     */\n\n  }, {\n    key: \"seal\",\n    value: function seal(callback) {\n      var _this14 = this;\n\n      var finalCallback = function finalCallback(err) {\n        _this14.factorizeQueue.clear();\n\n        _this14.buildQueue.clear();\n\n        _this14.rebuildQueue.clear();\n\n        _this14.processDependenciesQueue.clear();\n\n        _this14.addModuleQueue.clear();\n\n        return callback(err);\n      };\n\n      var chunkGraph = new ChunkGraph(this.moduleGraph, this.outputOptions.hashFunction);\n      this.chunkGraph = chunkGraph;\n\n      if (this._backCompat) {\n        var _iterator33 = _createForOfIteratorHelper(this.modules),\n            _step33;\n\n        try {\n          for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n            var _module13 = _step33.value;\n            ChunkGraph.setChunkGraphForModule(_module13, chunkGraph);\n          }\n        } catch (err) {\n          _iterator33.e(err);\n        } finally {\n          _iterator33.f();\n        }\n      }\n\n      this.hooks.seal.call();\n      this.logger.time(\"optimize dependencies\");\n\n      while (this.hooks.optimizeDependencies.call(this.modules)) {\n        /* empty */\n      }\n\n      this.hooks.afterOptimizeDependencies.call(this.modules);\n      this.logger.timeEnd(\"optimize dependencies\");\n      this.logger.time(\"create chunks\");\n      this.hooks.beforeChunks.call();\n      this.moduleGraph.freeze(\"seal\");\n      /** @type {Map<Entrypoint, Module[]>} */\n\n      var chunkGraphInit = new Map();\n\n      var _iterator34 = _createForOfIteratorHelper(this.entries),\n          _step34;\n\n      try {\n        for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n          var _step34$value = _slicedToArray(_step34.value, 2),\n              name = _step34$value[0],\n              _step34$value$ = _step34$value[1],\n              dependencies = _step34$value$.dependencies,\n              includeDependencies = _step34$value$.includeDependencies,\n              options = _step34$value$.options;\n\n          var chunk = this.addChunk(name);\n\n          if (options.filename) {\n            chunk.filenameTemplate = options.filename;\n          }\n\n          var entrypoint = new Entrypoint(options);\n\n          if (!options.dependOn && !options.runtime) {\n            entrypoint.setRuntimeChunk(chunk);\n          }\n\n          entrypoint.setEntrypointChunk(chunk);\n          this.namedChunkGroups.set(name, entrypoint);\n          this.entrypoints.set(name, entrypoint);\n          this.chunkGroups.push(entrypoint);\n          connectChunkGroupAndChunk(entrypoint, chunk);\n          var entryModules = new Set();\n\n          for (var _i6 = 0, _arr = [].concat(_toConsumableArray(this.globalEntry.dependencies), _toConsumableArray(dependencies)); _i6 < _arr.length; _i6++) {\n            var dep = _arr[_i6];\n            entrypoint.addOrigin(null, {\n              name: name\n            },\n            /** @type {any} */\n            dep.request);\n\n            var _module14 = this.moduleGraph.getModule(dep);\n\n            if (_module14) {\n              chunkGraph.connectChunkAndEntryModule(chunk, _module14, entrypoint);\n              entryModules.add(_module14);\n\n              var _modulesList = chunkGraphInit.get(entrypoint);\n\n              if (_modulesList === undefined) {\n                chunkGraphInit.set(entrypoint, [_module14]);\n              } else {\n                _modulesList.push(_module14);\n              }\n            }\n          }\n\n          this.assignDepths(entryModules);\n\n          var mapAndSort = function mapAndSort(deps) {\n            return deps.map(function (dep) {\n              return _this14.moduleGraph.getModule(dep);\n            }).filter(Boolean).sort(compareModulesByIdentifier);\n          };\n\n          var includedModules = [].concat(_toConsumableArray(mapAndSort(this.globalEntry.includeDependencies)), _toConsumableArray(mapAndSort(includeDependencies)));\n          var modulesList = chunkGraphInit.get(entrypoint);\n\n          if (modulesList === undefined) {\n            chunkGraphInit.set(entrypoint, modulesList = []);\n          }\n\n          var _iterator36 = _createForOfIteratorHelper(includedModules),\n              _step36;\n\n          try {\n            for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n              var _module15 = _step36.value;\n              this.assignDepth(_module15);\n              modulesList.push(_module15);\n            }\n          } catch (err) {\n            _iterator36.e(err);\n          } finally {\n            _iterator36.f();\n          }\n        }\n      } catch (err) {\n        _iterator34.e(err);\n      } finally {\n        _iterator34.f();\n      }\n\n      var runtimeChunks = new Set();\n\n      var _iterator35 = _createForOfIteratorHelper(this.entries),\n          _step35;\n\n      try {\n        outer: for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n          var _step35$value = _slicedToArray(_step35.value, 2),\n              _name = _step35$value[0],\n              _step35$value$1$optio = _step35$value[1].options,\n              dependOn = _step35$value$1$optio.dependOn,\n              runtime = _step35$value$1$optio.runtime;\n\n          if (dependOn && runtime) {\n            var err = new WebpackError(\"Entrypoint '\".concat(_name, \"' has 'dependOn' and 'runtime' specified. This is not valid.\\nEntrypoints that depend on other entrypoints do not have their own runtime.\\nThey will use the runtime(s) from referenced entrypoints instead.\\nRemove the 'runtime' option from the entrypoint.\"));\n            var entry = this.entrypoints.get(_name);\n            err.chunk = entry.getEntrypointChunk();\n            this.errors.push(err);\n          }\n\n          if (dependOn) {\n            var _entry = this.entrypoints.get(_name);\n\n            var referencedChunks = _entry.getEntrypointChunk().getAllReferencedChunks();\n\n            var dependOnEntries = [];\n\n            var _iterator37 = _createForOfIteratorHelper(dependOn),\n                _step37;\n\n            try {\n              for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n                var _dep = _step37.value;\n\n                var _dependency2 = this.entrypoints.get(_dep);\n\n                if (!_dependency2) {\n                  throw new Error(\"Entry \".concat(_name, \" depends on \").concat(_dep, \", but this entry was not found\"));\n                }\n\n                if (referencedChunks.has(_dependency2.getEntrypointChunk())) {\n                  var _err = new WebpackError(\"Entrypoints '\".concat(_name, \"' and '\").concat(_dep, \"' use 'dependOn' to depend on each other in a circular way.\"));\n\n                  var entryChunk = _entry.getEntrypointChunk();\n\n                  _err.chunk = entryChunk;\n                  this.errors.push(_err);\n\n                  _entry.setRuntimeChunk(entryChunk);\n\n                  continue outer;\n                }\n\n                dependOnEntries.push(_dependency2);\n              }\n            } catch (err) {\n              _iterator37.e(err);\n            } finally {\n              _iterator37.f();\n            }\n\n            for (var _i7 = 0, _dependOnEntries = dependOnEntries; _i7 < _dependOnEntries.length; _i7++) {\n              var dependency = _dependOnEntries[_i7];\n              connectChunkGroupParentAndChild(dependency, _entry);\n            }\n          } else if (runtime) {\n            var _entry2 = this.entrypoints.get(_name);\n\n            var _chunk = this.namedChunks.get(runtime);\n\n            if (_chunk) {\n              if (!runtimeChunks.has(_chunk)) {\n                var _err2 = new WebpackError(\"Entrypoint '\".concat(_name, \"' has a 'runtime' option which points to another entrypoint named '\").concat(runtime, \"'.\\nIt's not valid to use other entrypoints as runtime chunk.\\nDid you mean to use 'dependOn: \").concat(JSON.stringify(runtime), \"' instead to allow using entrypoint '\").concat(_name, \"' within the runtime of entrypoint '\").concat(runtime, \"'? For this '\").concat(runtime, \"' must always be loaded when '\").concat(_name, \"' is used.\\nOr do you want to use the entrypoints '\").concat(_name, \"' and '\").concat(runtime, \"' independently on the same page with a shared runtime? In this case give them both the same value for the 'runtime' option. It must be a name not already used by an entrypoint.\"));\n\n                var _entryChunk = _entry2.getEntrypointChunk();\n\n                _err2.chunk = _entryChunk;\n                this.errors.push(_err2);\n\n                _entry2.setRuntimeChunk(_entryChunk);\n\n                continue;\n              }\n            } else {\n              _chunk = this.addChunk(runtime);\n              _chunk.preventIntegration = true;\n              runtimeChunks.add(_chunk);\n            }\n\n            _entry2.unshiftChunk(_chunk);\n\n            _chunk.addGroup(_entry2);\n\n            _entry2.setRuntimeChunk(_chunk);\n          }\n        }\n      } catch (err) {\n        _iterator35.e(err);\n      } finally {\n        _iterator35.f();\n      }\n\n      buildChunkGraph(this, chunkGraphInit);\n      this.hooks.afterChunks.call(this.chunks);\n      this.logger.timeEnd(\"create chunks\");\n      this.logger.time(\"optimize\");\n      this.hooks.optimize.call();\n\n      while (this.hooks.optimizeModules.call(this.modules)) {\n        /* empty */\n      }\n\n      this.hooks.afterOptimizeModules.call(this.modules);\n\n      while (this.hooks.optimizeChunks.call(this.chunks, this.chunkGroups)) {\n        /* empty */\n      }\n\n      this.hooks.afterOptimizeChunks.call(this.chunks, this.chunkGroups);\n      this.hooks.optimizeTree.callAsync(this.chunks, this.modules, function (err) {\n        if (err) {\n          return finalCallback(makeWebpackError(err, \"Compilation.hooks.optimizeTree\"));\n        }\n\n        _this14.hooks.afterOptimizeTree.call(_this14.chunks, _this14.modules);\n\n        _this14.hooks.optimizeChunkModules.callAsync(_this14.chunks, _this14.modules, function (err) {\n          if (err) {\n            return finalCallback(makeWebpackError(err, \"Compilation.hooks.optimizeChunkModules\"));\n          }\n\n          _this14.hooks.afterOptimizeChunkModules.call(_this14.chunks, _this14.modules);\n\n          var shouldRecord = _this14.hooks.shouldRecord.call() !== false;\n\n          _this14.hooks.reviveModules.call(_this14.modules, _this14.records);\n\n          _this14.hooks.beforeModuleIds.call(_this14.modules);\n\n          _this14.hooks.moduleIds.call(_this14.modules);\n\n          _this14.hooks.optimizeModuleIds.call(_this14.modules);\n\n          _this14.hooks.afterOptimizeModuleIds.call(_this14.modules);\n\n          _this14.hooks.reviveChunks.call(_this14.chunks, _this14.records);\n\n          _this14.hooks.beforeChunkIds.call(_this14.chunks);\n\n          _this14.hooks.chunkIds.call(_this14.chunks);\n\n          _this14.hooks.optimizeChunkIds.call(_this14.chunks);\n\n          _this14.hooks.afterOptimizeChunkIds.call(_this14.chunks);\n\n          _this14.assignRuntimeIds();\n\n          _this14.logger.time(\"compute affected modules with chunk graph\");\n\n          _this14._computeAffectedModulesWithChunkGraph();\n\n          _this14.logger.timeEnd(\"compute affected modules with chunk graph\");\n\n          _this14.sortItemsWithChunkIds();\n\n          if (shouldRecord) {\n            _this14.hooks.recordModules.call(_this14.modules, _this14.records);\n\n            _this14.hooks.recordChunks.call(_this14.chunks, _this14.records);\n          }\n\n          _this14.hooks.optimizeCodeGeneration.call(_this14.modules);\n\n          _this14.logger.timeEnd(\"optimize\");\n\n          _this14.logger.time(\"module hashing\");\n\n          _this14.hooks.beforeModuleHash.call();\n\n          _this14.createModuleHashes();\n\n          _this14.hooks.afterModuleHash.call();\n\n          _this14.logger.timeEnd(\"module hashing\");\n\n          _this14.logger.time(\"code generation\");\n\n          _this14.hooks.beforeCodeGeneration.call();\n\n          _this14.codeGeneration(function (err) {\n            if (err) {\n              return finalCallback(err);\n            }\n\n            _this14.hooks.afterCodeGeneration.call();\n\n            _this14.logger.timeEnd(\"code generation\");\n\n            _this14.logger.time(\"runtime requirements\");\n\n            _this14.hooks.beforeRuntimeRequirements.call();\n\n            _this14.processRuntimeRequirements();\n\n            _this14.hooks.afterRuntimeRequirements.call();\n\n            _this14.logger.timeEnd(\"runtime requirements\");\n\n            _this14.logger.time(\"hashing\");\n\n            _this14.hooks.beforeHash.call();\n\n            var codeGenerationJobs = _this14.createHash();\n\n            _this14.hooks.afterHash.call();\n\n            _this14.logger.timeEnd(\"hashing\");\n\n            _this14._runCodeGenerationJobs(codeGenerationJobs, function (err) {\n              if (err) {\n                return finalCallback(err);\n              }\n\n              if (shouldRecord) {\n                _this14.logger.time(\"record hash\");\n\n                _this14.hooks.recordHash.call(_this14.records);\n\n                _this14.logger.timeEnd(\"record hash\");\n              }\n\n              _this14.logger.time(\"module assets\");\n\n              _this14.clearAssets();\n\n              _this14.hooks.beforeModuleAssets.call();\n\n              _this14.createModuleAssets();\n\n              _this14.logger.timeEnd(\"module assets\");\n\n              var cont = function cont() {\n                _this14.logger.time(\"process assets\");\n\n                _this14.hooks.processAssets.callAsync(_this14.assets, function (err) {\n                  if (err) {\n                    return finalCallback(makeWebpackError(err, \"Compilation.hooks.processAssets\"));\n                  }\n\n                  _this14.hooks.afterProcessAssets.call(_this14.assets);\n\n                  _this14.logger.timeEnd(\"process assets\");\n\n                  _this14.assets = _this14._backCompat ? soonFrozenObjectDeprecation(_this14.assets, \"Compilation.assets\", \"DEP_WEBPACK_COMPILATION_ASSETS\", \"BREAKING CHANGE: No more changes should happen to Compilation.assets after sealing the Compilation.\\n\\tDo changes to assets earlier, e. g. in Compilation.hooks.processAssets.\\n\\tMake sure to select an appropriate stage from Compilation.PROCESS_ASSETS_STAGE_*.\") : Object.freeze(_this14.assets);\n\n                  _this14.summarizeDependencies();\n\n                  if (shouldRecord) {\n                    _this14.hooks.record.call(_this14, _this14.records);\n                  }\n\n                  if (_this14.hooks.needAdditionalSeal.call()) {\n                    _this14.unseal();\n\n                    return _this14.seal(callback);\n                  }\n\n                  return _this14.hooks.afterSeal.callAsync(function (err) {\n                    if (err) {\n                      return finalCallback(makeWebpackError(err, \"Compilation.hooks.afterSeal\"));\n                    }\n\n                    _this14.fileSystemInfo.logStatistics();\n\n                    finalCallback();\n                  });\n                });\n              };\n\n              _this14.logger.time(\"create chunk assets\");\n\n              if (_this14.hooks.shouldGenerateChunkAssets.call() !== false) {\n                _this14.hooks.beforeChunkAssets.call();\n\n                _this14.createChunkAssets(function (err) {\n                  _this14.logger.timeEnd(\"create chunk assets\");\n\n                  if (err) {\n                    return finalCallback(err);\n                  }\n\n                  cont();\n                });\n              } else {\n                _this14.logger.timeEnd(\"create chunk assets\");\n\n                cont();\n              }\n            });\n          });\n        });\n      });\n    }\n    /**\n     * @param {Module} module module to report from\n     * @param {DependenciesBlock[]} blocks blocks to report from\n     * @returns {boolean} true, when it has warnings or errors\n     */\n\n  }, {\n    key: \"reportDependencyErrorsAndWarnings\",\n    value: function reportDependencyErrorsAndWarnings(module, blocks) {\n      var hasProblems = false;\n\n      for (var indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n        var block = blocks[indexBlock];\n        var dependencies = block.dependencies;\n\n        for (var indexDep = 0; indexDep < dependencies.length; indexDep++) {\n          var d = dependencies[indexDep];\n          var warnings = d.getWarnings(this.moduleGraph);\n\n          if (warnings) {\n            for (var indexWar = 0; indexWar < warnings.length; indexWar++) {\n              var w = warnings[indexWar];\n              var warning = new ModuleDependencyWarning(module, w, d.loc);\n              this.warnings.push(warning);\n              hasProblems = true;\n            }\n          }\n\n          var errors = d.getErrors(this.moduleGraph);\n\n          if (errors) {\n            for (var indexErr = 0; indexErr < errors.length; indexErr++) {\n              var e = errors[indexErr];\n              var error = new ModuleDependencyError(module, e, d.loc);\n              this.errors.push(error);\n              hasProblems = true;\n            }\n          }\n        }\n\n        if (this.reportDependencyErrorsAndWarnings(module, block.blocks)) hasProblems = true;\n      }\n\n      return hasProblems;\n    }\n  }, {\n    key: \"codeGeneration\",\n    value: function codeGeneration(callback) {\n      var chunkGraph = this.chunkGraph;\n      this.codeGenerationResults = new CodeGenerationResults(this.outputOptions.hashFunction);\n      /** @type {{module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}[]} */\n\n      var jobs = [];\n\n      var _iterator38 = _createForOfIteratorHelper(this.modules),\n          _step38;\n\n      try {\n        for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n          var _module16 = _step38.value;\n          var runtimes = chunkGraph.getModuleRuntimes(_module16);\n\n          if (runtimes.size === 1) {\n            var _iterator39 = _createForOfIteratorHelper(runtimes),\n                _step39;\n\n            try {\n              for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n                var runtime = _step39.value;\n                var hash = chunkGraph.getModuleHash(_module16, runtime);\n                jobs.push({\n                  module: _module16,\n                  hash: hash,\n                  runtime: runtime,\n                  runtimes: [runtime]\n                });\n              }\n            } catch (err) {\n              _iterator39.e(err);\n            } finally {\n              _iterator39.f();\n            }\n          } else if (runtimes.size > 1) {\n            /** @type {Map<string, { runtimes: RuntimeSpec[] }>} */\n            var map = new Map();\n\n            var _iterator40 = _createForOfIteratorHelper(runtimes),\n                _step40;\n\n            try {\n              for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n                var _runtime = _step40.value;\n\n                var _hash = chunkGraph.getModuleHash(_module16, _runtime);\n\n                var job = map.get(_hash);\n\n                if (job === undefined) {\n                  var newJob = {\n                    module: _module16,\n                    hash: _hash,\n                    runtime: _runtime,\n                    runtimes: [_runtime]\n                  };\n                  jobs.push(newJob);\n                  map.set(_hash, newJob);\n                } else {\n                  job.runtimes.push(_runtime);\n                }\n              }\n            } catch (err) {\n              _iterator40.e(err);\n            } finally {\n              _iterator40.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator38.e(err);\n      } finally {\n        _iterator38.f();\n      }\n\n      this._runCodeGenerationJobs(jobs, callback);\n    }\n  }, {\n    key: \"_runCodeGenerationJobs\",\n    value: function _runCodeGenerationJobs(jobs, callback) {\n      var _this15 = this;\n\n      var statModulesFromCache = 0;\n      var statModulesGenerated = 0;\n      var chunkGraph = this.chunkGraph,\n          moduleGraph = this.moduleGraph,\n          dependencyTemplates = this.dependencyTemplates,\n          runtimeTemplate = this.runtimeTemplate;\n      var results = this.codeGenerationResults;\n      var errors = [];\n      /** @type {Set<Module> | undefined} */\n\n      var notCodeGeneratedModules = undefined;\n\n      var runIteration = function runIteration() {\n        var delayedJobs = [];\n        var delayedModules = new Set();\n        asyncLib.eachLimit(jobs, _this15.options.parallelism, function (job, callback) {\n          var module = job.module;\n          var codeGenerationDependencies = module.codeGenerationDependencies;\n\n          if (codeGenerationDependencies !== undefined) {\n            if (notCodeGeneratedModules === undefined || codeGenerationDependencies.some(function (dep) {\n              var referencedModule = moduleGraph.getModule(dep);\n              return notCodeGeneratedModules.has(referencedModule);\n            })) {\n              delayedJobs.push(job);\n              delayedModules.add(module);\n              return callback();\n            }\n          }\n\n          var hash = job.hash,\n              runtime = job.runtime,\n              runtimes = job.runtimes;\n\n          _this15._codeGenerationModule(module, runtime, runtimes, hash, dependencyTemplates, chunkGraph, moduleGraph, runtimeTemplate, errors, results, function (err, codeGenerated) {\n            if (codeGenerated) statModulesGenerated++;else statModulesFromCache++;\n            callback(err);\n          });\n        }, function (err) {\n          if (err) return callback(err);\n\n          if (delayedJobs.length > 0) {\n            if (delayedJobs.length === jobs.length) {\n              return callback(new Error(\"Unable to make progress during code generation because of circular code generation dependency: \".concat(Array.from(delayedModules, function (m) {\n                return m.identifier();\n              }).join(\", \"))));\n            }\n\n            jobs = delayedJobs;\n            delayedJobs = [];\n            notCodeGeneratedModules = delayedModules;\n            delayedModules = new Set();\n            return runIteration();\n          }\n\n          if (errors.length > 0) {\n            errors.sort(compareSelect(function (err) {\n              return err.module;\n            }, compareModulesByIdentifier));\n\n            var _iterator41 = _createForOfIteratorHelper(errors),\n                _step41;\n\n            try {\n              for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n                var error = _step41.value;\n\n                _this15.errors.push(error);\n              }\n            } catch (err) {\n              _iterator41.e(err);\n            } finally {\n              _iterator41.f();\n            }\n          }\n\n          _this15.logger.log(\"\".concat(Math.round(100 * statModulesGenerated / (statModulesGenerated + statModulesFromCache)), \"% code generated (\").concat(statModulesGenerated, \" generated, \").concat(statModulesFromCache, \" from cache)\"));\n\n          callback();\n        });\n      };\n\n      runIteration();\n    }\n    /**\n     * @param {Module} module module\n     * @param {RuntimeSpec} runtime runtime\n     * @param {RuntimeSpec[]} runtimes runtimes\n     * @param {string} hash hash\n     * @param {DependencyTemplates} dependencyTemplates dependencyTemplates\n     * @param {ChunkGraph} chunkGraph chunkGraph\n     * @param {ModuleGraph} moduleGraph moduleGraph\n     * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate\n     * @param {WebpackError[]} errors errors\n     * @param {CodeGenerationResults} results results\n     * @param {function(WebpackError=, boolean=): void} callback callback\n     */\n\n  }, {\n    key: \"_codeGenerationModule\",\n    value: function _codeGenerationModule(module, runtime, runtimes, hash, dependencyTemplates, chunkGraph, moduleGraph, runtimeTemplate, errors, results, callback) {\n      var _this16 = this;\n\n      var codeGenerated = false;\n      var cache = new MultiItemCache(runtimes.map(function (runtime) {\n        return _this16._codeGenerationCache.getItemCache(\"\".concat(module.identifier(), \"|\").concat(getRuntimeKey(runtime)), \"\".concat(hash, \"|\").concat(dependencyTemplates.getHash()));\n      }));\n      cache.get(function (err, cachedResult) {\n        if (err) return callback(err);\n        var result;\n\n        if (!cachedResult) {\n          try {\n            codeGenerated = true;\n\n            _this16.codeGeneratedModules.add(module);\n\n            result = module.codeGeneration({\n              chunkGraph: chunkGraph,\n              moduleGraph: moduleGraph,\n              dependencyTemplates: dependencyTemplates,\n              runtimeTemplate: runtimeTemplate,\n              runtime: runtime,\n              codeGenerationResults: results\n            });\n          } catch (err) {\n            errors.push(new CodeGenerationError(module, err));\n            result = cachedResult = {\n              sources: new Map(),\n              runtimeRequirements: null\n            };\n          }\n        } else {\n          result = cachedResult;\n        }\n\n        var _iterator42 = _createForOfIteratorHelper(runtimes),\n            _step42;\n\n        try {\n          for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n            var _runtime2 = _step42.value;\n            results.add(module, _runtime2, result);\n          }\n        } catch (err) {\n          _iterator42.e(err);\n        } finally {\n          _iterator42.f();\n        }\n\n        if (!cachedResult) {\n          cache.store(result, function (err) {\n            return callback(err, codeGenerated);\n          });\n        } else {\n          callback(null, codeGenerated);\n        }\n      });\n    }\n  }, {\n    key: \"_getChunkGraphEntries\",\n    value: function _getChunkGraphEntries() {\n      /** @type {Set<Chunk>} */\n      var treeEntries = new Set();\n\n      var _iterator43 = _createForOfIteratorHelper(this.entrypoints.values()),\n          _step43;\n\n      try {\n        for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n          var ep = _step43.value;\n          var chunk = ep.getRuntimeChunk();\n          if (chunk) treeEntries.add(chunk);\n        }\n      } catch (err) {\n        _iterator43.e(err);\n      } finally {\n        _iterator43.f();\n      }\n\n      var _iterator44 = _createForOfIteratorHelper(this.asyncEntrypoints),\n          _step44;\n\n      try {\n        for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n          var _ep = _step44.value;\n\n          var _chunk2 = _ep.getRuntimeChunk();\n\n          if (_chunk2) treeEntries.add(_chunk2);\n        }\n      } catch (err) {\n        _iterator44.e(err);\n      } finally {\n        _iterator44.f();\n      }\n\n      return treeEntries;\n    }\n    /**\n     * @param {Object} options options\n     * @param {ChunkGraph=} options.chunkGraph the chunk graph\n     * @param {Iterable<Module>=} options.modules modules\n     * @param {Iterable<Chunk>=} options.chunks chunks\n     * @param {CodeGenerationResults=} options.codeGenerationResults codeGenerationResults\n     * @param {Iterable<Chunk>=} options.chunkGraphEntries chunkGraphEntries\n     * @returns {void}\n     */\n\n  }, {\n    key: \"processRuntimeRequirements\",\n    value: function processRuntimeRequirements() {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref5$chunkGraph = _ref5.chunkGraph,\n          chunkGraph = _ref5$chunkGraph === void 0 ? this.chunkGraph : _ref5$chunkGraph,\n          _ref5$modules = _ref5.modules,\n          modules = _ref5$modules === void 0 ? this.modules : _ref5$modules,\n          _ref5$chunks = _ref5.chunks,\n          chunks = _ref5$chunks === void 0 ? this.chunks : _ref5$chunks,\n          _ref5$codeGenerationR = _ref5.codeGenerationResults,\n          codeGenerationResults = _ref5$codeGenerationR === void 0 ? this.codeGenerationResults : _ref5$codeGenerationR,\n          _ref5$chunkGraphEntri = _ref5.chunkGraphEntries,\n          chunkGraphEntries = _ref5$chunkGraphEntri === void 0 ? this._getChunkGraphEntries() : _ref5$chunkGraphEntri;\n\n      var context = {\n        chunkGraph: chunkGraph,\n        codeGenerationResults: codeGenerationResults\n      };\n      var moduleMemCaches2 = this.moduleMemCaches2;\n      this.logger.time(\"runtime requirements.modules\");\n      var additionalModuleRuntimeRequirements = this.hooks.additionalModuleRuntimeRequirements;\n      var runtimeRequirementInModule = this.hooks.runtimeRequirementInModule;\n\n      var _iterator45 = _createForOfIteratorHelper(modules),\n          _step45;\n\n      try {\n        for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n          var _module17 = _step45.value;\n\n          if (chunkGraph.getNumberOfModuleChunks(_module17) > 0) {\n            var memCache = moduleMemCaches2 && moduleMemCaches2.get(_module17);\n\n            var _iterator48 = _createForOfIteratorHelper(chunkGraph.getModuleRuntimes(_module17)),\n                _step48;\n\n            try {\n              for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {\n                var runtime = _step48.value;\n\n                if (memCache) {\n                  var cached = memCache.get(\"moduleRuntimeRequirements-\".concat(getRuntimeKey(runtime)));\n\n                  if (cached !== undefined) {\n                    if (cached !== null) {\n                      chunkGraph.addModuleRuntimeRequirements(_module17, runtime, cached, false);\n                    }\n\n                    continue;\n                  }\n                }\n\n                var set = void 0;\n                var runtimeRequirements = codeGenerationResults.getRuntimeRequirements(_module17, runtime);\n\n                if (runtimeRequirements && runtimeRequirements.size > 0) {\n                  set = new Set(runtimeRequirements);\n                } else if (additionalModuleRuntimeRequirements.isUsed()) {\n                  set = new Set();\n                } else {\n                  if (memCache) {\n                    memCache.set(\"moduleRuntimeRequirements-\".concat(getRuntimeKey(runtime)), null);\n                  }\n\n                  continue;\n                }\n\n                additionalModuleRuntimeRequirements.call(_module17, set, context);\n\n                var _iterator49 = _createForOfIteratorHelper(set),\n                    _step49;\n\n                try {\n                  for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {\n                    var r = _step49.value;\n                    var hook = runtimeRequirementInModule.get(r);\n                    if (hook !== undefined) hook.call(_module17, set, context);\n                  }\n                } catch (err) {\n                  _iterator49.e(err);\n                } finally {\n                  _iterator49.f();\n                }\n\n                if (set.size === 0) {\n                  if (memCache) {\n                    memCache.set(\"moduleRuntimeRequirements-\".concat(getRuntimeKey(runtime)), null);\n                  }\n                } else {\n                  if (memCache) {\n                    memCache.set(\"moduleRuntimeRequirements-\".concat(getRuntimeKey(runtime)), set);\n                    chunkGraph.addModuleRuntimeRequirements(_module17, runtime, set, false);\n                  } else {\n                    chunkGraph.addModuleRuntimeRequirements(_module17, runtime, set);\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator48.e(err);\n            } finally {\n              _iterator48.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator45.e(err);\n      } finally {\n        _iterator45.f();\n      }\n\n      this.logger.timeEnd(\"runtime requirements.modules\");\n      this.logger.time(\"runtime requirements.chunks\");\n\n      var _iterator46 = _createForOfIteratorHelper(chunks),\n          _step46;\n\n      try {\n        for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n          var chunk = _step46.value;\n\n          var _set = new Set();\n\n          var _iterator50 = _createForOfIteratorHelper(chunkGraph.getChunkModulesIterable(chunk)),\n              _step50;\n\n          try {\n            for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {\n              var _module18 = _step50.value;\n\n              var _runtimeRequirements = chunkGraph.getModuleRuntimeRequirements(_module18, chunk.runtime);\n\n              var _iterator52 = _createForOfIteratorHelper(_runtimeRequirements),\n                  _step52;\n\n              try {\n                for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {\n                  var _r = _step52.value;\n\n                  _set.add(_r);\n                }\n              } catch (err) {\n                _iterator52.e(err);\n              } finally {\n                _iterator52.f();\n              }\n            }\n          } catch (err) {\n            _iterator50.e(err);\n          } finally {\n            _iterator50.f();\n          }\n\n          this.hooks.additionalChunkRuntimeRequirements.call(chunk, _set, context);\n\n          var _iterator51 = _createForOfIteratorHelper(_set),\n              _step51;\n\n          try {\n            for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {\n              var _r2 = _step51.value;\n              this.hooks.runtimeRequirementInChunk.for(_r2).call(chunk, _set, context);\n            }\n          } catch (err) {\n            _iterator51.e(err);\n          } finally {\n            _iterator51.f();\n          }\n\n          chunkGraph.addChunkRuntimeRequirements(chunk, _set);\n        }\n      } catch (err) {\n        _iterator46.e(err);\n      } finally {\n        _iterator46.f();\n      }\n\n      this.logger.timeEnd(\"runtime requirements.chunks\");\n      this.logger.time(\"runtime requirements.entries\");\n\n      var _iterator47 = _createForOfIteratorHelper(chunkGraphEntries),\n          _step47;\n\n      try {\n        for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n          var treeEntry = _step47.value;\n\n          var _set2 = new Set();\n\n          var _iterator53 = _createForOfIteratorHelper(treeEntry.getAllReferencedChunks()),\n              _step53;\n\n          try {\n            for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {\n              var _chunk3 = _step53.value;\n\n              var _runtimeRequirements2 = chunkGraph.getChunkRuntimeRequirements(_chunk3);\n\n              var _iterator55 = _createForOfIteratorHelper(_runtimeRequirements2),\n                  _step55;\n\n              try {\n                for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {\n                  var _r3 = _step55.value;\n\n                  _set2.add(_r3);\n                }\n              } catch (err) {\n                _iterator55.e(err);\n              } finally {\n                _iterator55.f();\n              }\n            }\n          } catch (err) {\n            _iterator53.e(err);\n          } finally {\n            _iterator53.f();\n          }\n\n          this.hooks.additionalTreeRuntimeRequirements.call(treeEntry, _set2, context);\n\n          var _iterator54 = _createForOfIteratorHelper(_set2),\n              _step54;\n\n          try {\n            for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {\n              var _r4 = _step54.value;\n              this.hooks.runtimeRequirementInTree.for(_r4).call(treeEntry, _set2, context);\n            }\n          } catch (err) {\n            _iterator54.e(err);\n          } finally {\n            _iterator54.f();\n          }\n\n          chunkGraph.addTreeRuntimeRequirements(treeEntry, _set2);\n        }\n      } catch (err) {\n        _iterator47.e(err);\n      } finally {\n        _iterator47.f();\n      }\n\n      this.logger.timeEnd(\"runtime requirements.entries\");\n    } // TODO webpack 6 make chunkGraph argument non-optional\n\n    /**\n     * @param {Chunk} chunk target chunk\n     * @param {RuntimeModule} module runtime module\n     * @param {ChunkGraph} chunkGraph the chunk graph\n     * @returns {void}\n     */\n\n  }, {\n    key: \"addRuntimeModule\",\n    value: function addRuntimeModule(chunk, module) {\n      var chunkGraph = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.chunkGraph;\n      // Deprecated ModuleGraph association\n      if (this._backCompat) ModuleGraph.setModuleGraphForModule(module, this.moduleGraph); // add it to the list\n\n      this.modules.add(module);\n\n      this._modules.set(module.identifier(), module); // connect to the chunk graph\n\n\n      chunkGraph.connectChunkAndModule(chunk, module);\n      chunkGraph.connectChunkAndRuntimeModule(chunk, module);\n\n      if (module.fullHash) {\n        chunkGraph.addFullHashModuleToChunk(chunk, module);\n      } else if (module.dependentHash) {\n        chunkGraph.addDependentHashModuleToChunk(chunk, module);\n      } // attach runtime module\n\n\n      module.attach(this, chunk, chunkGraph); // Setup internals\n\n      var exportsInfo = this.moduleGraph.getExportsInfo(module);\n      exportsInfo.setHasProvideInfo();\n\n      if (typeof chunk.runtime === \"string\") {\n        exportsInfo.setUsedForSideEffectsOnly(chunk.runtime);\n      } else if (chunk.runtime === undefined) {\n        exportsInfo.setUsedForSideEffectsOnly(undefined);\n      } else {\n        var _iterator56 = _createForOfIteratorHelper(chunk.runtime),\n            _step56;\n\n        try {\n          for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {\n            var runtime = _step56.value;\n            exportsInfo.setUsedForSideEffectsOnly(runtime);\n          }\n        } catch (err) {\n          _iterator56.e(err);\n        } finally {\n          _iterator56.f();\n        }\n      }\n\n      chunkGraph.addModuleRuntimeRequirements(module, chunk.runtime, new Set([RuntimeGlobals.requireScope])); // runtime modules don't need ids\n\n      chunkGraph.setModuleId(module, \"\"); // Call hook\n\n      this.hooks.runtimeModule.call(module, chunk);\n    }\n    /**\n     * If `module` is passed, `loc` and `request` must also be passed.\n     * @param {string | ChunkGroupOptions} groupOptions options for the chunk group\n     * @param {Module=} module the module the references the chunk group\n     * @param {DependencyLocation=} loc the location from with the chunk group is referenced (inside of module)\n     * @param {string=} request the request from which the the chunk group is referenced\n     * @returns {ChunkGroup} the new or existing chunk group\n     */\n\n  }, {\n    key: \"addChunkInGroup\",\n    value: function addChunkInGroup(groupOptions, module, loc, request) {\n      if (typeof groupOptions === \"string\") {\n        groupOptions = {\n          name: groupOptions\n        };\n      }\n\n      var name = groupOptions.name;\n\n      if (name) {\n        var _chunkGroup = this.namedChunkGroups.get(name);\n\n        if (_chunkGroup !== undefined) {\n          _chunkGroup.addOptions(groupOptions);\n\n          if (module) {\n            _chunkGroup.addOrigin(module, loc, request);\n          }\n\n          return _chunkGroup;\n        }\n      }\n\n      var chunkGroup = new ChunkGroup(groupOptions);\n      if (module) chunkGroup.addOrigin(module, loc, request);\n      var chunk = this.addChunk(name);\n      connectChunkGroupAndChunk(chunkGroup, chunk);\n      this.chunkGroups.push(chunkGroup);\n\n      if (name) {\n        this.namedChunkGroups.set(name, chunkGroup);\n      }\n\n      return chunkGroup;\n    }\n    /**\n     * @param {EntryOptions} options options for the entrypoint\n     * @param {Module} module the module the references the chunk group\n     * @param {DependencyLocation} loc the location from with the chunk group is referenced (inside of module)\n     * @param {string} request the request from which the the chunk group is referenced\n     * @returns {Entrypoint} the new or existing entrypoint\n     */\n\n  }, {\n    key: \"addAsyncEntrypoint\",\n    value: function addAsyncEntrypoint(options, module, loc, request) {\n      var name = options.name;\n\n      if (name) {\n        var _entrypoint = this.namedChunkGroups.get(name);\n\n        if (_entrypoint instanceof Entrypoint) {\n          if (_entrypoint !== undefined) {\n            if (module) {\n              _entrypoint.addOrigin(module, loc, request);\n            }\n\n            return _entrypoint;\n          }\n        } else if (_entrypoint) {\n          throw new Error(\"Cannot add an async entrypoint with the name '\".concat(name, \"', because there is already an chunk group with this name\"));\n        }\n      }\n\n      var chunk = this.addChunk(name);\n\n      if (options.filename) {\n        chunk.filenameTemplate = options.filename;\n      }\n\n      var entrypoint = new Entrypoint(options, false);\n      entrypoint.setRuntimeChunk(chunk);\n      entrypoint.setEntrypointChunk(chunk);\n\n      if (name) {\n        this.namedChunkGroups.set(name, entrypoint);\n      }\n\n      this.chunkGroups.push(entrypoint);\n      this.asyncEntrypoints.push(entrypoint);\n      connectChunkGroupAndChunk(entrypoint, chunk);\n\n      if (module) {\n        entrypoint.addOrigin(module, loc, request);\n      }\n\n      return entrypoint;\n    }\n    /**\n     * This method first looks to see if a name is provided for a new chunk,\n     * and first looks to see if any named chunks already exist and reuse that chunk instead.\n     *\n     * @param {string=} name optional chunk name to be provided\n     * @returns {Chunk} create a chunk (invoked during seal event)\n     */\n\n  }, {\n    key: \"addChunk\",\n    value: function addChunk(name) {\n      if (name) {\n        var _chunk4 = this.namedChunks.get(name);\n\n        if (_chunk4 !== undefined) {\n          return _chunk4;\n        }\n      }\n\n      var chunk = new Chunk(name, this._backCompat);\n      this.chunks.add(chunk);\n      if (this._backCompat) ChunkGraph.setChunkGraphForChunk(chunk, this.chunkGraph);\n\n      if (name) {\n        this.namedChunks.set(name, chunk);\n      }\n\n      return chunk;\n    }\n    /**\n     * @deprecated\n     * @param {Module} module module to assign depth\n     * @returns {void}\n     */\n\n  }, {\n    key: \"assignDepth\",\n    value: function assignDepth(module) {\n      var moduleGraph = this.moduleGraph;\n      var queue = new Set([module]);\n      var depth;\n      moduleGraph.setDepth(module, 0);\n      /**\n       * @param {Module} module module for processing\n       * @returns {void}\n       */\n\n      var processModule = function processModule(module) {\n        if (!moduleGraph.setDepthIfLower(module, depth)) return;\n        queue.add(module);\n      };\n\n      var _iterator57 = _createForOfIteratorHelper(queue),\n          _step57;\n\n      try {\n        for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {\n          module = _step57.value;\n          queue.delete(module);\n          depth = moduleGraph.getDepth(module) + 1;\n\n          var _iterator58 = _createForOfIteratorHelper(moduleGraph.getOutgoingConnections(module)),\n              _step58;\n\n          try {\n            for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {\n              var connection = _step58.value;\n              var refModule = connection.module;\n\n              if (refModule) {\n                processModule(refModule);\n              }\n            }\n          } catch (err) {\n            _iterator58.e(err);\n          } finally {\n            _iterator58.f();\n          }\n        }\n      } catch (err) {\n        _iterator57.e(err);\n      } finally {\n        _iterator57.f();\n      }\n    }\n    /**\n     * @param {Set<Module>} modules module to assign depth\n     * @returns {void}\n     */\n\n  }, {\n    key: \"assignDepths\",\n    value: function assignDepths(modules) {\n      var moduleGraph = this.moduleGraph;\n      /** @type {Set<Module | number>} */\n\n      var queue = new Set(modules);\n      queue.add(1);\n      var depth = 0;\n      var i = 0;\n\n      var _iterator59 = _createForOfIteratorHelper(queue),\n          _step59;\n\n      try {\n        for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {\n          var _module19 = _step59.value;\n          i++;\n\n          if (typeof _module19 === \"number\") {\n            depth = _module19;\n            if (queue.size === i) return;\n            queue.add(depth + 1);\n          } else {\n            moduleGraph.setDepth(_module19, depth);\n\n            var _iterator60 = _createForOfIteratorHelper(moduleGraph.getOutgoingConnections(_module19)),\n                _step60;\n\n            try {\n              for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {\n                var refModule = _step60.value.module;\n\n                if (refModule) {\n                  queue.add(refModule);\n                }\n              }\n            } catch (err) {\n              _iterator60.e(err);\n            } finally {\n              _iterator60.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator59.e(err);\n      } finally {\n        _iterator59.f();\n      }\n    }\n    /**\n     * @param {Dependency} dependency the dependency\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {(string[] | ReferencedExport)[]} referenced exports\n     */\n\n  }, {\n    key: \"getDependencyReferencedExports\",\n    value: function getDependencyReferencedExports(dependency, runtime) {\n      var referencedExports = dependency.getReferencedExports(this.moduleGraph, runtime);\n      return this.hooks.dependencyReferencedExports.call(referencedExports, dependency, runtime);\n    }\n    /**\n     *\n     * @param {Module} module module relationship for removal\n     * @param {DependenciesBlockLike} block //TODO: good description\n     * @returns {void}\n     */\n\n  }, {\n    key: \"removeReasonsOfDependencyBlock\",\n    value: function removeReasonsOfDependencyBlock(module, block) {\n      if (block.blocks) {\n        var _iterator61 = _createForOfIteratorHelper(block.blocks),\n            _step61;\n\n        try {\n          for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {\n            var b = _step61.value;\n            this.removeReasonsOfDependencyBlock(module, b);\n          }\n        } catch (err) {\n          _iterator61.e(err);\n        } finally {\n          _iterator61.f();\n        }\n      }\n\n      if (block.dependencies) {\n        var _iterator62 = _createForOfIteratorHelper(block.dependencies),\n            _step62;\n\n        try {\n          for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {\n            var dep = _step62.value;\n            var originalModule = this.moduleGraph.getModule(dep);\n\n            if (originalModule) {\n              this.moduleGraph.removeConnection(dep);\n\n              if (this.chunkGraph) {\n                var _iterator63 = _createForOfIteratorHelper(this.chunkGraph.getModuleChunks(originalModule)),\n                    _step63;\n\n                try {\n                  for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {\n                    var chunk = _step63.value;\n                    this.patchChunksAfterReasonRemoval(originalModule, chunk);\n                  }\n                } catch (err) {\n                  _iterator63.e(err);\n                } finally {\n                  _iterator63.f();\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _iterator62.e(err);\n        } finally {\n          _iterator62.f();\n        }\n      }\n    }\n    /**\n     * @param {Module} module module to patch tie\n     * @param {Chunk} chunk chunk to patch tie\n     * @returns {void}\n     */\n\n  }, {\n    key: \"patchChunksAfterReasonRemoval\",\n    value: function patchChunksAfterReasonRemoval(module, chunk) {\n      if (!module.hasReasons(this.moduleGraph, chunk.runtime)) {\n        this.removeReasonsOfDependencyBlock(module, module);\n      }\n\n      if (!module.hasReasonForChunk(chunk, this.moduleGraph, this.chunkGraph)) {\n        if (this.chunkGraph.isModuleInChunk(module, chunk)) {\n          this.chunkGraph.disconnectChunkAndModule(chunk, module);\n          this.removeChunkFromDependencies(module, chunk);\n        }\n      }\n    }\n    /**\n     *\n     * @param {DependenciesBlock} block block tie for Chunk\n     * @param {Chunk} chunk chunk to remove from dep\n     * @returns {void}\n     */\n\n  }, {\n    key: \"removeChunkFromDependencies\",\n    value: function removeChunkFromDependencies(block, chunk) {\n      var _this17 = this;\n\n      /**\n       * @param {Dependency} d dependency to (maybe) patch up\n       */\n      var iteratorDependency = function iteratorDependency(d) {\n        var depModule = _this17.moduleGraph.getModule(d);\n\n        if (!depModule) {\n          return;\n        }\n\n        _this17.patchChunksAfterReasonRemoval(depModule, chunk);\n      };\n\n      var blocks = block.blocks;\n\n      for (var indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n        var asyncBlock = blocks[indexBlock];\n        var chunkGroup = this.chunkGraph.getBlockChunkGroup(asyncBlock); // Grab all chunks from the first Block's AsyncDepBlock\n\n        var chunks = chunkGroup.chunks; // For each chunk in chunkGroup\n\n        for (var indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n          var iteratedChunk = chunks[indexChunk];\n          chunkGroup.removeChunk(iteratedChunk); // Recurse\n\n          this.removeChunkFromDependencies(block, iteratedChunk);\n        }\n      }\n\n      if (block.dependencies) {\n        var _iterator64 = _createForOfIteratorHelper(block.dependencies),\n            _step64;\n\n        try {\n          for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {\n            var dep = _step64.value;\n            iteratorDependency(dep);\n          }\n        } catch (err) {\n          _iterator64.e(err);\n        } finally {\n          _iterator64.f();\n        }\n      }\n    }\n  }, {\n    key: \"assignRuntimeIds\",\n    value: function assignRuntimeIds() {\n      var chunkGraph = this.chunkGraph;\n\n      var processEntrypoint = function processEntrypoint(ep) {\n        var runtime = ep.options.runtime || ep.name;\n        var chunk = ep.getRuntimeChunk();\n        chunkGraph.setRuntimeId(runtime, chunk.id);\n      };\n\n      var _iterator65 = _createForOfIteratorHelper(this.entrypoints.values()),\n          _step65;\n\n      try {\n        for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {\n          var ep = _step65.value;\n          processEntrypoint(ep);\n        }\n      } catch (err) {\n        _iterator65.e(err);\n      } finally {\n        _iterator65.f();\n      }\n\n      var _iterator66 = _createForOfIteratorHelper(this.asyncEntrypoints),\n          _step66;\n\n      try {\n        for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {\n          var _ep2 = _step66.value;\n          processEntrypoint(_ep2);\n        }\n      } catch (err) {\n        _iterator66.e(err);\n      } finally {\n        _iterator66.f();\n      }\n    }\n  }, {\n    key: \"sortItemsWithChunkIds\",\n    value: function sortItemsWithChunkIds() {\n      var _iterator67 = _createForOfIteratorHelper(this.chunkGroups),\n          _step67;\n\n      try {\n        for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {\n          var chunkGroup = _step67.value;\n          chunkGroup.sortItems();\n        }\n      } catch (err) {\n        _iterator67.e(err);\n      } finally {\n        _iterator67.f();\n      }\n\n      this.errors.sort(compareErrors);\n      this.warnings.sort(compareErrors);\n      this.children.sort(byNameOrHash);\n    }\n  }, {\n    key: \"summarizeDependencies\",\n    value: function summarizeDependencies() {\n      for (var indexChildren = 0; indexChildren < this.children.length; indexChildren++) {\n        var child = this.children[indexChildren];\n        this.fileDependencies.addAll(child.fileDependencies);\n        this.contextDependencies.addAll(child.contextDependencies);\n        this.missingDependencies.addAll(child.missingDependencies);\n        this.buildDependencies.addAll(child.buildDependencies);\n      }\n\n      var _iterator68 = _createForOfIteratorHelper(this.modules),\n          _step68;\n\n      try {\n        for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {\n          var _module20 = _step68.value;\n\n          _module20.addCacheDependencies(this.fileDependencies, this.contextDependencies, this.missingDependencies, this.buildDependencies);\n        }\n      } catch (err) {\n        _iterator68.e(err);\n      } finally {\n        _iterator68.f();\n      }\n    }\n  }, {\n    key: \"createModuleHashes\",\n    value: function createModuleHashes() {\n      var statModulesHashed = 0;\n      var statModulesFromCache = 0;\n      var chunkGraph = this.chunkGraph,\n          runtimeTemplate = this.runtimeTemplate,\n          moduleMemCaches2 = this.moduleMemCaches2;\n      var _this$outputOptions = this.outputOptions,\n          hashFunction = _this$outputOptions.hashFunction,\n          hashDigest = _this$outputOptions.hashDigest,\n          hashDigestLength = _this$outputOptions.hashDigestLength;\n\n      var _iterator69 = _createForOfIteratorHelper(this.modules),\n          _step69;\n\n      try {\n        for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {\n          var _module21 = _step69.value;\n          var memCache = moduleMemCaches2 && moduleMemCaches2.get(_module21);\n\n          var _iterator70 = _createForOfIteratorHelper(chunkGraph.getModuleRuntimes(_module21)),\n              _step70;\n\n          try {\n            for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {\n              var runtime = _step70.value;\n\n              if (memCache) {\n                var _digest = memCache.get(\"moduleHash-\".concat(getRuntimeKey(runtime)));\n\n                if (_digest !== undefined) {\n                  chunkGraph.setModuleHashes(_module21, runtime, _digest, _digest.substr(0, hashDigestLength));\n                  statModulesFromCache++;\n                  continue;\n                }\n              }\n\n              statModulesHashed++;\n\n              var digest = this._createModuleHash(_module21, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength);\n\n              if (memCache) {\n                memCache.set(\"moduleHash-\".concat(getRuntimeKey(runtime)), digest);\n              }\n            }\n          } catch (err) {\n            _iterator70.e(err);\n          } finally {\n            _iterator70.f();\n          }\n        }\n      } catch (err) {\n        _iterator69.e(err);\n      } finally {\n        _iterator69.f();\n      }\n\n      this.logger.log(\"\".concat(statModulesHashed, \" modules hashed, \").concat(statModulesFromCache, \" from cache (\").concat(Math.round(100 * (statModulesHashed + statModulesFromCache) / this.modules.size) / 100, \" variants per module in average)\"));\n    }\n  }, {\n    key: \"_createModuleHash\",\n    value: function _createModuleHash(module, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength) {\n      var moduleHash = _createHash(hashFunction);\n\n      module.updateHash(moduleHash, {\n        chunkGraph: chunkGraph,\n        runtime: runtime,\n        runtimeTemplate: runtimeTemplate\n      });\n      var moduleHashDigest =\n      /** @type {string} */\n      moduleHash.digest(hashDigest);\n      chunkGraph.setModuleHashes(module, runtime, moduleHashDigest, moduleHashDigest.substr(0, hashDigestLength));\n      return moduleHashDigest;\n    }\n  }, {\n    key: \"createHash\",\n    value: function createHash() {\n      var _this18 = this;\n\n      this.logger.time(\"hashing: initialize hash\");\n      var chunkGraph = this.chunkGraph;\n      var runtimeTemplate = this.runtimeTemplate;\n      var outputOptions = this.outputOptions;\n      var hashFunction = outputOptions.hashFunction;\n      var hashDigest = outputOptions.hashDigest;\n      var hashDigestLength = outputOptions.hashDigestLength;\n\n      var hash = _createHash(hashFunction);\n\n      if (outputOptions.hashSalt) {\n        hash.update(outputOptions.hashSalt);\n      }\n\n      this.logger.timeEnd(\"hashing: initialize hash\");\n\n      if (this.children.length > 0) {\n        this.logger.time(\"hashing: hash child compilations\");\n\n        var _iterator71 = _createForOfIteratorHelper(this.children),\n            _step71;\n\n        try {\n          for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {\n            var child = _step71.value;\n            hash.update(child.hash);\n          }\n        } catch (err) {\n          _iterator71.e(err);\n        } finally {\n          _iterator71.f();\n        }\n\n        this.logger.timeEnd(\"hashing: hash child compilations\");\n      }\n\n      if (this.warnings.length > 0) {\n        this.logger.time(\"hashing: hash warnings\");\n\n        var _iterator72 = _createForOfIteratorHelper(this.warnings),\n            _step72;\n\n        try {\n          for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {\n            var warning = _step72.value;\n            hash.update(\"\".concat(warning.message));\n          }\n        } catch (err) {\n          _iterator72.e(err);\n        } finally {\n          _iterator72.f();\n        }\n\n        this.logger.timeEnd(\"hashing: hash warnings\");\n      }\n\n      if (this.errors.length > 0) {\n        this.logger.time(\"hashing: hash errors\");\n\n        var _iterator73 = _createForOfIteratorHelper(this.errors),\n            _step73;\n\n        try {\n          for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {\n            var error = _step73.value;\n            hash.update(\"\".concat(error.message));\n          }\n        } catch (err) {\n          _iterator73.e(err);\n        } finally {\n          _iterator73.f();\n        }\n\n        this.logger.timeEnd(\"hashing: hash errors\");\n      }\n\n      this.logger.time(\"hashing: sort chunks\");\n      /*\n       * all non-runtime chunks need to be hashes first,\n       * since runtime chunk might use their hashes.\n       * runtime chunks need to be hashed in the correct order\n       * since they may depend on each other (for async entrypoints).\n       * So we put all non-runtime chunks first and hash them in any order.\n       * And order runtime chunks according to referenced between each other.\n       * Chunks need to be in deterministic order since we add hashes to full chunk\n       * during these hashing.\n       */\n\n      /** @type {Chunk[]} */\n\n      var unorderedRuntimeChunks = [];\n      /** @type {Chunk[]} */\n\n      var otherChunks = [];\n\n      var _iterator74 = _createForOfIteratorHelper(this.chunks),\n          _step74;\n\n      try {\n        for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {\n          var _c = _step74.value;\n\n          if (_c.hasRuntime()) {\n            unorderedRuntimeChunks.push(_c);\n          } else {\n            otherChunks.push(_c);\n          }\n        }\n      } catch (err) {\n        _iterator74.e(err);\n      } finally {\n        _iterator74.f();\n      }\n\n      unorderedRuntimeChunks.sort(byId);\n      otherChunks.sort(byId);\n      /** @typedef {{ chunk: Chunk, referencedBy: RuntimeChunkInfo[], remaining: number }} RuntimeChunkInfo */\n\n      /** @type {Map<Chunk, RuntimeChunkInfo>} */\n\n      var runtimeChunksMap = new Map();\n\n      for (var _i8 = 0, _unorderedRuntimeChun = unorderedRuntimeChunks; _i8 < _unorderedRuntimeChun.length; _i8++) {\n        var chunk = _unorderedRuntimeChun[_i8];\n        runtimeChunksMap.set(chunk, {\n          chunk: chunk,\n          referencedBy: [],\n          remaining: 0\n        });\n      }\n\n      var remaining = 0;\n\n      var _iterator75 = _createForOfIteratorHelper(runtimeChunksMap.values()),\n          _step75;\n\n      try {\n        for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {\n          var _info2 = _step75.value;\n\n          var _iterator83 = _createForOfIteratorHelper(new Set(Array.from(_info2.chunk.getAllReferencedAsyncEntrypoints()).map(function (e) {\n            return e.chunks[e.chunks.length - 1];\n          }))),\n              _step83;\n\n          try {\n            for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {\n              var other = _step83.value;\n\n              var _otherInfo = runtimeChunksMap.get(other);\n\n              _otherInfo.referencedBy.push(_info2);\n\n              _info2.remaining++;\n              remaining++;\n            }\n          } catch (err) {\n            _iterator83.e(err);\n          } finally {\n            _iterator83.f();\n          }\n        }\n        /** @type {Chunk[]} */\n\n      } catch (err) {\n        _iterator75.e(err);\n      } finally {\n        _iterator75.f();\n      }\n\n      var runtimeChunks = [];\n\n      var _iterator76 = _createForOfIteratorHelper(runtimeChunksMap.values()),\n          _step76;\n\n      try {\n        for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {\n          var _info3 = _step76.value;\n\n          if (_info3.remaining === 0) {\n            runtimeChunks.push(_info3.chunk);\n          }\n        } // If there are any references between chunks\n        // make sure to follow these chains\n\n      } catch (err) {\n        _iterator76.e(err);\n      } finally {\n        _iterator76.f();\n      }\n\n      if (remaining > 0) {\n        var readyChunks = [];\n\n        var _iterator77 = _createForOfIteratorHelper(runtimeChunks),\n            _step77;\n\n        try {\n          for (_iterator77.s(); !(_step77 = _iterator77.n()).done;) {\n            var _chunk5 = _step77.value;\n            var hasFullHashModules = chunkGraph.getNumberOfChunkFullHashModules(_chunk5) !== 0;\n            var info = runtimeChunksMap.get(_chunk5);\n\n            var _iterator78 = _createForOfIteratorHelper(info.referencedBy),\n                _step78;\n\n            try {\n              for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {\n                var otherInfo = _step78.value;\n\n                if (hasFullHashModules) {\n                  chunkGraph.upgradeDependentToFullHashModules(otherInfo.chunk);\n                }\n\n                remaining--;\n\n                if (--otherInfo.remaining === 0) {\n                  readyChunks.push(otherInfo.chunk);\n                }\n              }\n            } catch (err) {\n              _iterator78.e(err);\n            } finally {\n              _iterator78.f();\n            }\n\n            if (readyChunks.length > 0) {\n              // This ensures deterministic ordering, since referencedBy is non-deterministic\n              readyChunks.sort(byId);\n\n              var _iterator79 = _createForOfIteratorHelper(readyChunks),\n                  _step79;\n\n              try {\n                for (_iterator79.s(); !(_step79 = _iterator79.n()).done;) {\n                  var c = _step79.value;\n                  runtimeChunks.push(c);\n                }\n              } catch (err) {\n                _iterator79.e(err);\n              } finally {\n                _iterator79.f();\n              }\n\n              readyChunks.length = 0;\n            }\n          }\n        } catch (err) {\n          _iterator77.e(err);\n        } finally {\n          _iterator77.f();\n        }\n      } // If there are still remaining references we have cycles and want to create a warning\n\n\n      if (remaining > 0) {\n        var circularRuntimeChunkInfo = [];\n\n        var _iterator80 = _createForOfIteratorHelper(runtimeChunksMap.values()),\n            _step80;\n\n        try {\n          for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {\n            var _info = _step80.value;\n\n            if (_info.remaining !== 0) {\n              circularRuntimeChunkInfo.push(_info);\n            }\n          }\n        } catch (err) {\n          _iterator80.e(err);\n        } finally {\n          _iterator80.f();\n        }\n\n        circularRuntimeChunkInfo.sort(compareSelect(function (i) {\n          return i.chunk;\n        }, byId));\n        var err = new WebpackError(\"Circular dependency between chunks with runtime (\".concat(Array.from(circularRuntimeChunkInfo, function (c) {\n          return c.chunk.name || c.chunk.id;\n        }).join(\", \"), \")\\nThis prevents using hashes of each other and should be avoided.\"));\n        err.chunk = circularRuntimeChunkInfo[0].chunk;\n        this.warnings.push(err);\n\n        for (var _i9 = 0, _circularRuntimeChunk = circularRuntimeChunkInfo; _i9 < _circularRuntimeChunk.length; _i9++) {\n          var i = _circularRuntimeChunk[_i9];\n          runtimeChunks.push(i.chunk);\n        }\n      }\n\n      this.logger.timeEnd(\"hashing: sort chunks\");\n      var fullHashChunks = new Set();\n      /** @type {{module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}[]} */\n\n      var codeGenerationJobs = [];\n      /** @type {Map<string, Map<Module, {module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}>>} */\n\n      var codeGenerationJobsMap = new Map();\n\n      var processChunk = function processChunk(chunk) {\n        // Last minute module hash generation for modules that depend on chunk hashes\n        _this18.logger.time(\"hashing: hash runtime modules\");\n\n        var runtime = chunk.runtime;\n\n        var _iterator81 = _createForOfIteratorHelper(chunkGraph.getChunkModulesIterable(chunk)),\n            _step81;\n\n        try {\n          for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {\n            var _module22 = _step81.value;\n\n            if (!chunkGraph.hasModuleHashes(_module22, runtime)) {\n              var _hash2 = _this18._createModuleHash(_module22, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength);\n\n              var hashMap = codeGenerationJobsMap.get(_hash2);\n\n              if (hashMap) {\n                var moduleJob = hashMap.get(_module22);\n\n                if (moduleJob) {\n                  moduleJob.runtimes.push(runtime);\n                  continue;\n                }\n              } else {\n                hashMap = new Map();\n                codeGenerationJobsMap.set(_hash2, hashMap);\n              }\n\n              var job = {\n                module: _module22,\n                hash: _hash2,\n                runtime: runtime,\n                runtimes: [runtime]\n              };\n              hashMap.set(_module22, job);\n              codeGenerationJobs.push(job);\n            }\n          }\n        } catch (err) {\n          _iterator81.e(err);\n        } finally {\n          _iterator81.f();\n        }\n\n        _this18.logger.timeAggregate(\"hashing: hash runtime modules\");\n\n        _this18.logger.time(\"hashing: hash chunks\");\n\n        var chunkHash = _createHash(hashFunction);\n\n        try {\n          if (outputOptions.hashSalt) {\n            chunkHash.update(outputOptions.hashSalt);\n          }\n\n          chunk.updateHash(chunkHash, chunkGraph);\n\n          _this18.hooks.chunkHash.call(chunk, chunkHash, {\n            chunkGraph: chunkGraph,\n            codeGenerationResults: _this18.codeGenerationResults,\n            moduleGraph: _this18.moduleGraph,\n            runtimeTemplate: _this18.runtimeTemplate\n          });\n\n          var chunkHashDigest =\n          /** @type {string} */\n          chunkHash.digest(hashDigest);\n          hash.update(chunkHashDigest);\n          chunk.hash = chunkHashDigest;\n          chunk.renderedHash = chunk.hash.substr(0, hashDigestLength);\n          var fullHashModules = chunkGraph.getChunkFullHashModulesIterable(chunk);\n\n          if (fullHashModules) {\n            fullHashChunks.add(chunk);\n          } else {\n            _this18.hooks.contentHash.call(chunk);\n          }\n        } catch (err) {\n          _this18.errors.push(new ChunkRenderError(chunk, \"\", err));\n        }\n\n        _this18.logger.timeAggregate(\"hashing: hash chunks\");\n      };\n\n      otherChunks.forEach(processChunk);\n\n      for (var _i10 = 0, _runtimeChunks = runtimeChunks; _i10 < _runtimeChunks.length; _i10++) {\n        var _chunk6 = _runtimeChunks[_i10];\n        processChunk(_chunk6);\n      }\n\n      this.logger.timeAggregateEnd(\"hashing: hash runtime modules\");\n      this.logger.timeAggregateEnd(\"hashing: hash chunks\");\n      this.logger.time(\"hashing: hash digest\");\n      this.hooks.fullHash.call(hash);\n      this.fullHash =\n      /** @type {string} */\n      hash.digest(hashDigest);\n      this.hash = this.fullHash.substr(0, hashDigestLength);\n      this.logger.timeEnd(\"hashing: hash digest\");\n      this.logger.time(\"hashing: process full hash modules\");\n\n      var _iterator82 = _createForOfIteratorHelper(fullHashChunks),\n          _step82;\n\n      try {\n        for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {\n          var _chunk7 = _step82.value;\n\n          var _iterator84 = _createForOfIteratorHelper(chunkGraph.getChunkFullHashModulesIterable(_chunk7)),\n              _step84;\n\n          try {\n            for (_iterator84.s(); !(_step84 = _iterator84.n()).done;) {\n              var _module23 = _step84.value;\n\n              var moduleHash = _createHash(hashFunction);\n\n              _module23.updateHash(moduleHash, {\n                chunkGraph: chunkGraph,\n                runtime: _chunk7.runtime,\n                runtimeTemplate: runtimeTemplate\n              });\n\n              var moduleHashDigest =\n              /** @type {string} */\n              moduleHash.digest(hashDigest);\n              var oldHash = chunkGraph.getModuleHash(_module23, _chunk7.runtime);\n              chunkGraph.setModuleHashes(_module23, _chunk7.runtime, moduleHashDigest, moduleHashDigest.substr(0, hashDigestLength));\n              codeGenerationJobsMap.get(oldHash).get(_module23).hash = moduleHashDigest;\n            }\n          } catch (err) {\n            _iterator84.e(err);\n          } finally {\n            _iterator84.f();\n          }\n\n          var chunkHash = _createHash(hashFunction);\n\n          chunkHash.update(_chunk7.hash);\n          chunkHash.update(this.hash);\n          var chunkHashDigest =\n          /** @type {string} */\n          chunkHash.digest(hashDigest);\n          _chunk7.hash = chunkHashDigest;\n          _chunk7.renderedHash = _chunk7.hash.substr(0, hashDigestLength);\n          this.hooks.contentHash.call(_chunk7);\n        }\n      } catch (err) {\n        _iterator82.e(err);\n      } finally {\n        _iterator82.f();\n      }\n\n      this.logger.timeEnd(\"hashing: process full hash modules\");\n      return codeGenerationJobs;\n    }\n    /**\n     * @param {string} file file name\n     * @param {Source} source asset source\n     * @param {AssetInfo} assetInfo extra asset information\n     * @returns {void}\n     */\n\n  }, {\n    key: \"emitAsset\",\n    value: function emitAsset(file, source) {\n      var assetInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (this.assets[file]) {\n        if (!isSourceEqual(this.assets[file], source)) {\n          this.errors.push(new WebpackError(\"Conflict: Multiple assets emit different content to the same filename \".concat(file)));\n          this.assets[file] = source;\n\n          this._setAssetInfo(file, assetInfo);\n\n          return;\n        }\n\n        var oldInfo = this.assetsInfo.get(file);\n        var newInfo = Object.assign({}, oldInfo, assetInfo);\n\n        this._setAssetInfo(file, newInfo, oldInfo);\n\n        return;\n      }\n\n      this.assets[file] = source;\n\n      this._setAssetInfo(file, assetInfo, undefined);\n    }\n  }, {\n    key: \"_setAssetInfo\",\n    value: function _setAssetInfo(file, newInfo) {\n      var _this19 = this;\n\n      var oldInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.assetsInfo.get(file);\n\n      if (newInfo === undefined) {\n        this.assetsInfo.delete(file);\n      } else {\n        this.assetsInfo.set(file, newInfo);\n      }\n\n      var oldRelated = oldInfo && oldInfo.related;\n      var newRelated = newInfo && newInfo.related;\n\n      if (oldRelated) {\n        var _loop3 = function _loop3() {\n          var key = _Object$keys3[_i11];\n\n          var remove = function remove(name) {\n            var relatedIn = _this19._assetsRelatedIn.get(name);\n\n            if (relatedIn === undefined) return;\n            var entry = relatedIn.get(key);\n            if (entry === undefined) return;\n            entry.delete(file);\n            if (entry.size !== 0) return;\n            relatedIn.delete(key);\n            if (relatedIn.size === 0) _this19._assetsRelatedIn.delete(name);\n          };\n\n          var entry = oldRelated[key];\n\n          if (Array.isArray(entry)) {\n            entry.forEach(remove);\n          } else if (entry) {\n            remove(entry);\n          }\n        };\n\n        for (var _i11 = 0, _Object$keys3 = Object.keys(oldRelated); _i11 < _Object$keys3.length; _i11++) {\n          _loop3();\n        }\n      }\n\n      if (newRelated) {\n        var _loop4 = function _loop4() {\n          var key = _Object$keys4[_i12];\n\n          var add = function add(name) {\n            var relatedIn = _this19._assetsRelatedIn.get(name);\n\n            if (relatedIn === undefined) {\n              _this19._assetsRelatedIn.set(name, relatedIn = new Map());\n            }\n\n            var entry = relatedIn.get(key);\n\n            if (entry === undefined) {\n              relatedIn.set(key, entry = new Set());\n            }\n\n            entry.add(file);\n          };\n\n          var entry = newRelated[key];\n\n          if (Array.isArray(entry)) {\n            entry.forEach(add);\n          } else if (entry) {\n            add(entry);\n          }\n        };\n\n        for (var _i12 = 0, _Object$keys4 = Object.keys(newRelated); _i12 < _Object$keys4.length; _i12++) {\n          _loop4();\n        }\n      }\n    }\n    /**\n     * @param {string} file file name\n     * @param {Source | function(Source): Source} newSourceOrFunction new asset source or function converting old to new\n     * @param {AssetInfo | function(AssetInfo | undefined): AssetInfo} assetInfoUpdateOrFunction new asset info or function converting old to new\n     */\n\n  }, {\n    key: \"updateAsset\",\n    value: function updateAsset(file, newSourceOrFunction) {\n      var assetInfoUpdateOrFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n\n      if (!this.assets[file]) {\n        throw new Error(\"Called Compilation.updateAsset for not existing filename \".concat(file));\n      }\n\n      if (typeof newSourceOrFunction === \"function\") {\n        this.assets[file] = newSourceOrFunction(this.assets[file]);\n      } else {\n        this.assets[file] = newSourceOrFunction;\n      }\n\n      if (assetInfoUpdateOrFunction !== undefined) {\n        var oldInfo = this.assetsInfo.get(file) || EMPTY_ASSET_INFO;\n\n        if (typeof assetInfoUpdateOrFunction === \"function\") {\n          this._setAssetInfo(file, assetInfoUpdateOrFunction(oldInfo), oldInfo);\n        } else {\n          this._setAssetInfo(file, cachedCleverMerge(oldInfo, assetInfoUpdateOrFunction), oldInfo);\n        }\n      }\n    }\n  }, {\n    key: \"renameAsset\",\n    value: function renameAsset(file, newFile) {\n      var source = this.assets[file];\n\n      if (!source) {\n        throw new Error(\"Called Compilation.renameAsset for not existing filename \".concat(file));\n      }\n\n      if (this.assets[newFile]) {\n        if (!isSourceEqual(this.assets[file], source)) {\n          this.errors.push(new WebpackError(\"Conflict: Called Compilation.renameAsset for already existing filename \".concat(newFile, \" with different content\")));\n        }\n      }\n\n      var assetInfo = this.assetsInfo.get(file); // Update related in all other assets\n\n      var relatedInInfo = this._assetsRelatedIn.get(file);\n\n      if (relatedInInfo) {\n        var _iterator85 = _createForOfIteratorHelper(relatedInInfo),\n            _step85;\n\n        try {\n          for (_iterator85.s(); !(_step85 = _iterator85.n()).done;) {\n            var _step85$value = _slicedToArray(_step85.value, 2),\n                key = _step85$value[0],\n                assets = _step85$value[1];\n\n            var _iterator86 = _createForOfIteratorHelper(assets),\n                _step86;\n\n            try {\n              for (_iterator86.s(); !(_step86 = _iterator86.n()).done;) {\n                var name = _step86.value;\n                var info = this.assetsInfo.get(name);\n                if (!info) continue;\n                var related = info.related;\n                if (!related) continue;\n                var entry = related[key];\n                var newEntry = void 0;\n\n                if (Array.isArray(entry)) {\n                  newEntry = entry.map(function (x) {\n                    return x === file ? newFile : x;\n                  });\n                } else if (entry === file) {\n                  newEntry = newFile;\n                } else continue;\n\n                this.assetsInfo.set(name, _objectSpread(_objectSpread({}, info), {}, {\n                  related: _objectSpread(_objectSpread({}, related), {}, _defineProperty({}, key, newEntry))\n                }));\n              }\n            } catch (err) {\n              _iterator86.e(err);\n            } finally {\n              _iterator86.f();\n            }\n          }\n        } catch (err) {\n          _iterator85.e(err);\n        } finally {\n          _iterator85.f();\n        }\n      }\n\n      this._setAssetInfo(file, undefined, assetInfo);\n\n      this._setAssetInfo(newFile, assetInfo);\n\n      delete this.assets[file];\n      this.assets[newFile] = source;\n\n      var _iterator87 = _createForOfIteratorHelper(this.chunks),\n          _step87;\n\n      try {\n        for (_iterator87.s(); !(_step87 = _iterator87.n()).done;) {\n          var chunk = _step87.value;\n          {\n            var size = chunk.files.size;\n            chunk.files.delete(file);\n\n            if (size !== chunk.files.size) {\n              chunk.files.add(newFile);\n            }\n          }\n          {\n            var _size = chunk.auxiliaryFiles.size;\n            chunk.auxiliaryFiles.delete(file);\n\n            if (_size !== chunk.auxiliaryFiles.size) {\n              chunk.auxiliaryFiles.add(newFile);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator87.e(err);\n      } finally {\n        _iterator87.f();\n      }\n    }\n    /**\n     * @param {string} file file name\n     */\n\n  }, {\n    key: \"deleteAsset\",\n    value: function deleteAsset(file) {\n      var _this20 = this;\n\n      if (!this.assets[file]) {\n        return;\n      }\n\n      delete this.assets[file];\n      var assetInfo = this.assetsInfo.get(file);\n\n      this._setAssetInfo(file, undefined, assetInfo);\n\n      var related = assetInfo && assetInfo.related;\n\n      if (related) {\n        for (var _i13 = 0, _Object$keys5 = Object.keys(related); _i13 < _Object$keys5.length; _i13++) {\n          var key = _Object$keys5[_i13];\n\n          var checkUsedAndDelete = function checkUsedAndDelete(file) {\n            if (!_this20._assetsRelatedIn.has(file)) {\n              _this20.deleteAsset(file);\n            }\n          };\n\n          var items = related[key];\n\n          if (Array.isArray(items)) {\n            items.forEach(checkUsedAndDelete);\n          } else if (items) {\n            checkUsedAndDelete(items);\n          }\n        }\n      } // TODO If this becomes a performance problem\n      // store a reverse mapping from asset to chunk\n\n\n      var _iterator88 = _createForOfIteratorHelper(this.chunks),\n          _step88;\n\n      try {\n        for (_iterator88.s(); !(_step88 = _iterator88.n()).done;) {\n          var chunk = _step88.value;\n          chunk.files.delete(file);\n          chunk.auxiliaryFiles.delete(file);\n        }\n      } catch (err) {\n        _iterator88.e(err);\n      } finally {\n        _iterator88.f();\n      }\n    }\n  }, {\n    key: \"getAssets\",\n    value: function getAssets() {\n      /** @type {Readonly<Asset>[]} */\n      var array = [];\n\n      for (var _i14 = 0, _Object$keys6 = Object.keys(this.assets); _i14 < _Object$keys6.length; _i14++) {\n        var assetName = _Object$keys6[_i14];\n\n        if (Object.prototype.hasOwnProperty.call(this.assets, assetName)) {\n          array.push({\n            name: assetName,\n            source: this.assets[assetName],\n            info: this.assetsInfo.get(assetName) || EMPTY_ASSET_INFO\n          });\n        }\n      }\n\n      return array;\n    }\n    /**\n     * @param {string} name the name of the asset\n     * @returns {Readonly<Asset> | undefined} the asset or undefined when not found\n     */\n\n  }, {\n    key: \"getAsset\",\n    value: function getAsset(name) {\n      if (!Object.prototype.hasOwnProperty.call(this.assets, name)) return undefined;\n      return {\n        name: name,\n        source: this.assets[name],\n        info: this.assetsInfo.get(name) || EMPTY_ASSET_INFO\n      };\n    }\n  }, {\n    key: \"clearAssets\",\n    value: function clearAssets() {\n      var _iterator89 = _createForOfIteratorHelper(this.chunks),\n          _step89;\n\n      try {\n        for (_iterator89.s(); !(_step89 = _iterator89.n()).done;) {\n          var chunk = _step89.value;\n          chunk.files.clear();\n          chunk.auxiliaryFiles.clear();\n        }\n      } catch (err) {\n        _iterator89.e(err);\n      } finally {\n        _iterator89.f();\n      }\n    }\n  }, {\n    key: \"createModuleAssets\",\n    value: function createModuleAssets() {\n      var chunkGraph = this.chunkGraph;\n\n      var _iterator90 = _createForOfIteratorHelper(this.modules),\n          _step90;\n\n      try {\n        for (_iterator90.s(); !(_step90 = _iterator90.n()).done;) {\n          var _module24 = _step90.value;\n\n          if (_module24.buildInfo.assets) {\n            var assetsInfo = _module24.buildInfo.assetsInfo;\n\n            for (var _i15 = 0, _Object$keys7 = Object.keys(_module24.buildInfo.assets); _i15 < _Object$keys7.length; _i15++) {\n              var assetName = _Object$keys7[_i15];\n              var fileName = this.getPath(assetName, {\n                chunkGraph: this.chunkGraph,\n                module: _module24\n              });\n\n              var _iterator91 = _createForOfIteratorHelper(chunkGraph.getModuleChunksIterable(_module24)),\n                  _step91;\n\n              try {\n                for (_iterator91.s(); !(_step91 = _iterator91.n()).done;) {\n                  var chunk = _step91.value;\n                  chunk.auxiliaryFiles.add(fileName);\n                }\n              } catch (err) {\n                _iterator91.e(err);\n              } finally {\n                _iterator91.f();\n              }\n\n              this.emitAsset(fileName, _module24.buildInfo.assets[assetName], assetsInfo ? assetsInfo.get(assetName) : undefined);\n              this.hooks.moduleAsset.call(_module24, fileName);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator90.e(err);\n      } finally {\n        _iterator90.f();\n      }\n    }\n    /**\n     * @param {RenderManifestOptions} options options object\n     * @returns {RenderManifestEntry[]} manifest entries\n     */\n\n  }, {\n    key: \"getRenderManifest\",\n    value: function getRenderManifest(options) {\n      return this.hooks.renderManifest.call([], options);\n    }\n    /**\n     * @param {Callback} callback signals when the call finishes\n     * @returns {void}\n     */\n\n  }, {\n    key: \"createChunkAssets\",\n    value: function createChunkAssets(callback) {\n      var _this21 = this;\n\n      var outputOptions = this.outputOptions;\n      var cachedSourceMap = new WeakMap();\n      /** @type {Map<string, {hash: string, source: Source, chunk: Chunk}>} */\n\n      var alreadyWrittenFiles = new Map();\n      asyncLib.forEachLimit(this.chunks, 15, function (chunk, callback) {\n        /** @type {RenderManifestEntry[]} */\n        var manifest;\n\n        try {\n          manifest = _this21.getRenderManifest({\n            chunk: chunk,\n            hash: _this21.hash,\n            fullHash: _this21.fullHash,\n            outputOptions: outputOptions,\n            codeGenerationResults: _this21.codeGenerationResults,\n            moduleTemplates: _this21.moduleTemplates,\n            dependencyTemplates: _this21.dependencyTemplates,\n            chunkGraph: _this21.chunkGraph,\n            moduleGraph: _this21.moduleGraph,\n            runtimeTemplate: _this21.runtimeTemplate\n          });\n        } catch (err) {\n          _this21.errors.push(new ChunkRenderError(chunk, \"\", err));\n\n          return callback();\n        }\n\n        asyncLib.forEach(manifest, function (fileManifest, callback) {\n          var ident = fileManifest.identifier;\n          var usedHash = fileManifest.hash;\n\n          var assetCacheItem = _this21._assetsCache.getItemCache(ident, usedHash);\n\n          assetCacheItem.get(function (err, sourceFromCache) {\n            /** @type {string | function(PathData, AssetInfo=): string} */\n            var filenameTemplate;\n            /** @type {string} */\n\n            var file;\n            /** @type {AssetInfo} */\n\n            var assetInfo;\n            var inTry = true;\n\n            var errorAndCallback = function errorAndCallback(err) {\n              var filename = file || (typeof file === \"string\" ? file : typeof filenameTemplate === \"string\" ? filenameTemplate : \"\");\n\n              _this21.errors.push(new ChunkRenderError(chunk, filename, err));\n\n              inTry = false;\n              return callback();\n            };\n\n            try {\n              if (\"filename\" in fileManifest) {\n                file = fileManifest.filename;\n                assetInfo = fileManifest.info;\n              } else {\n                filenameTemplate = fileManifest.filenameTemplate;\n\n                var pathAndInfo = _this21.getPathWithInfo(filenameTemplate, fileManifest.pathOptions);\n\n                file = pathAndInfo.path;\n                assetInfo = fileManifest.info ? _objectSpread(_objectSpread({}, pathAndInfo.info), fileManifest.info) : pathAndInfo.info;\n              }\n\n              if (err) {\n                return errorAndCallback(err);\n              }\n\n              var source = sourceFromCache; // check if the same filename was already written by another chunk\n\n              var alreadyWritten = alreadyWrittenFiles.get(file);\n\n              if (alreadyWritten !== undefined) {\n                if (alreadyWritten.hash !== usedHash) {\n                  inTry = false;\n                  return callback(new WebpackError(\"Conflict: Multiple chunks emit assets to the same filename \".concat(file) + \" (chunks \".concat(alreadyWritten.chunk.id, \" and \").concat(chunk.id, \")\")));\n                } else {\n                  source = alreadyWritten.source;\n                }\n              } else if (!source) {\n                // render the asset\n                source = fileManifest.render(); // Ensure that source is a cached source to avoid additional cost because of repeated access\n\n                if (!(source instanceof CachedSource)) {\n                  var cacheEntry = cachedSourceMap.get(source);\n\n                  if (cacheEntry) {\n                    source = cacheEntry;\n                  } else {\n                    var cachedSource = new CachedSource(source);\n                    cachedSourceMap.set(source, cachedSource);\n                    source = cachedSource;\n                  }\n                }\n              }\n\n              _this21.emitAsset(file, source, assetInfo);\n\n              if (fileManifest.auxiliary) {\n                chunk.auxiliaryFiles.add(file);\n              } else {\n                chunk.files.add(file);\n              }\n\n              _this21.hooks.chunkAsset.call(chunk, file);\n\n              alreadyWrittenFiles.set(file, {\n                hash: usedHash,\n                source: source,\n                chunk: chunk\n              });\n\n              if (source !== sourceFromCache) {\n                assetCacheItem.store(source, function (err) {\n                  if (err) return errorAndCallback(err);\n                  inTry = false;\n                  return callback();\n                });\n              } else {\n                inTry = false;\n                callback();\n              }\n            } catch (err) {\n              if (!inTry) throw err;\n              errorAndCallback(err);\n            }\n          });\n        }, callback);\n      }, callback);\n    }\n    /**\n     * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n     * @param {PathData} data context data\n     * @returns {string} interpolated path\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath(filename) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!data.hash) {\n        data = _objectSpread({\n          hash: this.hash\n        }, data);\n      }\n\n      return this.getAssetPath(filename, data);\n    }\n    /**\n     * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n     * @param {PathData} data context data\n     * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n     */\n\n  }, {\n    key: \"getPathWithInfo\",\n    value: function getPathWithInfo(filename) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!data.hash) {\n        data = _objectSpread({\n          hash: this.hash\n        }, data);\n      }\n\n      return this.getAssetPathWithInfo(filename, data);\n    }\n    /**\n     * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n     * @param {PathData} data context data\n     * @returns {string} interpolated path\n     */\n\n  }, {\n    key: \"getAssetPath\",\n    value: function getAssetPath(filename, data) {\n      return this.hooks.assetPath.call(typeof filename === \"function\" ? filename(data) : filename, data, undefined);\n    }\n    /**\n     * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n     * @param {PathData} data context data\n     * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n     */\n\n  }, {\n    key: \"getAssetPathWithInfo\",\n    value: function getAssetPathWithInfo(filename, data) {\n      var assetInfo = {}; // TODO webpack 5: refactor assetPath hook to receive { path, info } object\n\n      var newPath = this.hooks.assetPath.call(typeof filename === \"function\" ? filename(data, assetInfo) : filename, data, assetInfo);\n      return {\n        path: newPath,\n        info: assetInfo\n      };\n    }\n  }, {\n    key: \"getWarnings\",\n    value: function getWarnings() {\n      return this.hooks.processWarnings.call(this.warnings);\n    }\n  }, {\n    key: \"getErrors\",\n    value: function getErrors() {\n      return this.hooks.processErrors.call(this.errors);\n    }\n    /**\n     * This function allows you to run another instance of webpack inside of webpack however as\n     * a child with different settings and configurations (if desired) applied. It copies all hooks, plugins\n     * from parent (or top level compiler) and creates a child Compilation\n     *\n     * @param {string} name name of the child compiler\n     * @param {OutputOptions=} outputOptions // Need to convert config schema to types for this\n     * @param {Array<WebpackPluginInstance | WebpackPluginFunction>=} plugins webpack plugins that will be applied\n     * @returns {Compiler} creates a child Compiler instance\n     */\n\n  }, {\n    key: \"createChildCompiler\",\n    value: function createChildCompiler(name, outputOptions, plugins) {\n      var idx = this.childrenCounters[name] || 0;\n      this.childrenCounters[name] = idx + 1;\n      return this.compiler.createChildCompiler(this, name, idx, outputOptions, plugins);\n    }\n    /**\n     * @param {Module} module the module\n     * @param {ExecuteModuleOptions} options options\n     * @param {ExecuteModuleCallback} callback callback\n     */\n\n  }, {\n    key: \"executeModule\",\n    value: function executeModule(module, options, callback) {\n      var _this22 = this;\n\n      // Aggregate all referenced modules and ensure they are ready\n      var modules = new Set([module]);\n      processAsyncTree(modules, 10,\n      /**\n       * @param {Module} module the module\n       * @param {function(Module): void} push push more jobs\n       * @param {Callback} callback callback\n       * @returns {void}\n       */\n      function (module, push, callback) {\n        _this22.buildQueue.waitFor(module, function (err) {\n          if (err) return callback(err);\n\n          _this22.processDependenciesQueue.waitFor(module, function (err) {\n            if (err) return callback(err);\n\n            var _iterator92 = _createForOfIteratorHelper(_this22.moduleGraph.getOutgoingConnections(module)),\n                _step92;\n\n            try {\n              for (_iterator92.s(); !(_step92 = _iterator92.n()).done;) {\n                var m = _step92.value.module;\n                var size = modules.size;\n                modules.add(m);\n                if (modules.size !== size) push(m);\n              }\n            } catch (err) {\n              _iterator92.e(err);\n            } finally {\n              _iterator92.f();\n            }\n\n            callback();\n          });\n        });\n      }, function (err) {\n        if (err) return callback(err); // Create new chunk graph, chunk and entrypoint for the build time execution\n\n        var chunkGraph = new ChunkGraph(_this22.moduleGraph, _this22.outputOptions.hashFunction);\n        var runtime = \"build time\";\n        var _this22$outputOptions = _this22.outputOptions,\n            hashFunction = _this22$outputOptions.hashFunction,\n            hashDigest = _this22$outputOptions.hashDigest,\n            hashDigestLength = _this22$outputOptions.hashDigestLength;\n        var runtimeTemplate = _this22.runtimeTemplate;\n        var chunk = new Chunk(\"build time chunk\", _this22._backCompat);\n        chunk.id = chunk.name;\n        chunk.ids = [chunk.id];\n        chunk.runtime = runtime;\n        var entrypoint = new Entrypoint(_objectSpread({\n          runtime: runtime,\n          chunkLoading: false\n        }, options.entryOptions));\n        chunkGraph.connectChunkAndEntryModule(chunk, module, entrypoint);\n        connectChunkGroupAndChunk(entrypoint, chunk);\n        entrypoint.setRuntimeChunk(chunk);\n        entrypoint.setEntrypointChunk(chunk);\n        var chunks = new Set([chunk]); // Assign ids to modules and modules to the chunk\n\n        var _iterator93 = _createForOfIteratorHelper(modules),\n            _step93;\n\n        try {\n          for (_iterator93.s(); !(_step93 = _iterator93.n()).done;) {\n            var _module26 = _step93.value;\n\n            var id = _module26.identifier();\n\n            chunkGraph.setModuleId(_module26, id);\n            chunkGraph.connectChunkAndModule(chunk, _module26);\n          } // Hash modules\n\n        } catch (err) {\n          _iterator93.e(err);\n        } finally {\n          _iterator93.f();\n        }\n\n        var _iterator94 = _createForOfIteratorHelper(modules),\n            _step94;\n\n        try {\n          for (_iterator94.s(); !(_step94 = _iterator94.n()).done;) {\n            var _module27 = _step94.value;\n\n            _this22._createModuleHash(_module27, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength);\n          }\n        } catch (err) {\n          _iterator94.e(err);\n        } finally {\n          _iterator94.f();\n        }\n\n        var codeGenerationResults = new CodeGenerationResults(_this22.outputOptions.hashFunction);\n        /** @type {WebpackError[]} */\n\n        var errors = [];\n        /**\n         * @param {Module} module the module\n         * @param {Callback} callback callback\n         * @returns {void}\n         */\n\n        var codeGen = function codeGen(module, callback) {\n          _this22._codeGenerationModule(module, runtime, [runtime], chunkGraph.getModuleHash(module, runtime), _this22.dependencyTemplates, chunkGraph, _this22.moduleGraph, runtimeTemplate, errors, codeGenerationResults, function (err, codeGenerated) {\n            callback(err);\n          });\n        };\n\n        var reportErrors = function reportErrors() {\n          if (errors.length > 0) {\n            errors.sort(compareSelect(function (err) {\n              return err.module;\n            }, compareModulesByIdentifier));\n\n            var _iterator95 = _createForOfIteratorHelper(errors),\n                _step95;\n\n            try {\n              for (_iterator95.s(); !(_step95 = _iterator95.n()).done;) {\n                var error = _step95.value;\n\n                _this22.errors.push(error);\n              }\n            } catch (err) {\n              _iterator95.e(err);\n            } finally {\n              _iterator95.f();\n            }\n\n            errors.length = 0;\n          }\n        }; // Generate code for all aggregated modules\n\n\n        asyncLib.eachLimit(modules, 10, codeGen, function (err) {\n          if (err) return callback(err);\n          reportErrors(); // for backward-compat temporary set the chunk graph\n          // TODO webpack 6\n\n          var old = _this22.chunkGraph;\n          _this22.chunkGraph = chunkGraph;\n\n          _this22.processRuntimeRequirements({\n            chunkGraph: chunkGraph,\n            modules: modules,\n            chunks: chunks,\n            codeGenerationResults: codeGenerationResults,\n            chunkGraphEntries: chunks\n          });\n\n          _this22.chunkGraph = old;\n          var runtimeModules = chunkGraph.getChunkRuntimeModulesIterable(chunk); // Hash runtime modules\n\n          var _iterator96 = _createForOfIteratorHelper(runtimeModules),\n              _step96;\n\n          try {\n            for (_iterator96.s(); !(_step96 = _iterator96.n()).done;) {\n              var _module25 = _step96.value;\n              modules.add(_module25);\n\n              _this22._createModuleHash(_module25, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength);\n            } // Generate code for all runtime modules\n\n          } catch (err) {\n            _iterator96.e(err);\n          } finally {\n            _iterator96.f();\n          }\n\n          asyncLib.eachLimit(runtimeModules, 10, codeGen, function (err) {\n            if (err) return callback(err);\n            reportErrors();\n            /** @type {Map<Module, ExecuteModuleArgument>} */\n\n            var moduleArgumentsMap = new Map();\n            /** @type {Map<string, ExecuteModuleArgument>} */\n\n            var moduleArgumentsById = new Map();\n            /** @type {ExecuteModuleResult[\"fileDependencies\"]} */\n\n            var fileDependencies = new LazySet();\n            /** @type {ExecuteModuleResult[\"contextDependencies\"]} */\n\n            var contextDependencies = new LazySet();\n            /** @type {ExecuteModuleResult[\"missingDependencies\"]} */\n\n            var missingDependencies = new LazySet();\n            /** @type {ExecuteModuleResult[\"buildDependencies\"]} */\n\n            var buildDependencies = new LazySet();\n            /** @type {ExecuteModuleResult[\"assets\"]} */\n\n            var assets = new Map();\n            var cacheable = true;\n            /** @type {ExecuteModuleContext} */\n\n            var context = {\n              assets: assets,\n              __webpack_require__: undefined,\n              chunk: chunk,\n              chunkGraph: chunkGraph\n            }; // Prepare execution\n\n            asyncLib.eachLimit(modules, 10, function (module, callback) {\n              var codeGenerationResult = codeGenerationResults.get(module, runtime);\n              /** @type {ExecuteModuleArgument} */\n\n              var moduleArgument = {\n                module: module,\n                codeGenerationResult: codeGenerationResult,\n                preparedInfo: undefined,\n                moduleObject: undefined\n              };\n              moduleArgumentsMap.set(module, moduleArgument);\n              moduleArgumentsById.set(module.identifier(), moduleArgument);\n              module.addCacheDependencies(fileDependencies, contextDependencies, missingDependencies, buildDependencies);\n\n              if (module.buildInfo.cacheable === false) {\n                cacheable = false;\n              }\n\n              if (module.buildInfo && module.buildInfo.assets) {\n                var _module$buildInfo = module.buildInfo,\n                    moduleAssets = _module$buildInfo.assets,\n                    assetsInfo = _module$buildInfo.assetsInfo;\n\n                for (var _i16 = 0, _Object$keys8 = Object.keys(moduleAssets); _i16 < _Object$keys8.length; _i16++) {\n                  var assetName = _Object$keys8[_i16];\n                  assets.set(assetName, {\n                    source: moduleAssets[assetName],\n                    info: assetsInfo ? assetsInfo.get(assetName) : undefined\n                  });\n                }\n              }\n\n              _this22.hooks.prepareModuleExecution.callAsync(moduleArgument, context, callback);\n            }, function (err) {\n              if (err) return callback(err);\n              var exports;\n\n              try {\n                var _this22$outputOptions2 = _this22.outputOptions,\n                    strictModuleErrorHandling = _this22$outputOptions2.strictModuleErrorHandling,\n                    strictModuleExceptionHandling = _this22$outputOptions2.strictModuleExceptionHandling;\n\n                var __webpack_require__ = function __webpack_require__(id) {\n                  var cached = moduleCache[id];\n\n                  if (cached !== undefined) {\n                    if (cached.error) throw cached.error;\n                    return cached.exports;\n                  }\n\n                  var moduleArgument = moduleArgumentsById.get(id);\n                  return __webpack_require_module__(moduleArgument, id);\n                };\n\n                var interceptModuleExecution = __webpack_require__[RuntimeGlobals.interceptModuleExecution.replace(\"__webpack_require__.\", \"\")] = [];\n                var moduleCache = __webpack_require__[RuntimeGlobals.moduleCache.replace(\"__webpack_require__.\", \"\")] = {};\n                context.__webpack_require__ = __webpack_require__;\n                /**\n                 * @param {ExecuteModuleArgument} moduleArgument the module argument\n                 * @param {string=} id id\n                 * @returns {any} exports\n                 */\n\n                var __webpack_require_module__ = function __webpack_require_module__(moduleArgument, id) {\n                  var execOptions = {\n                    id: id,\n                    module: {\n                      id: id,\n                      exports: {},\n                      loaded: false,\n                      error: undefined\n                    },\n                    require: __webpack_require__\n                  };\n                  interceptModuleExecution.forEach(function (handler) {\n                    return handler(execOptions);\n                  });\n                  var module = moduleArgument.module;\n\n                  _this22.buildTimeExecutedModules.add(module);\n\n                  var moduleObject = execOptions.module;\n                  moduleArgument.moduleObject = moduleObject;\n\n                  try {\n                    if (id) moduleCache[id] = moduleObject;\n                    tryRunOrWebpackError(function () {\n                      return _this22.hooks.executeModule.call(moduleArgument, context);\n                    }, \"Compilation.hooks.executeModule\");\n                    moduleObject.loaded = true;\n                    return moduleObject.exports;\n                  } catch (e) {\n                    if (strictModuleExceptionHandling) {\n                      if (id) delete moduleCache[id];\n                    } else if (strictModuleErrorHandling) {\n                      moduleObject.error = e;\n                    }\n\n                    if (!e.module) e.module = module;\n                    throw e;\n                  }\n                };\n\n                var _iterator97 = _createForOfIteratorHelper(chunkGraph.getChunkRuntimeModulesInOrder(chunk)),\n                    _step97;\n\n                try {\n                  for (_iterator97.s(); !(_step97 = _iterator97.n()).done;) {\n                    var runtimeModule = _step97.value;\n\n                    __webpack_require_module__(moduleArgumentsMap.get(runtimeModule));\n                  }\n                } catch (err) {\n                  _iterator97.e(err);\n                } finally {\n                  _iterator97.f();\n                }\n\n                exports = __webpack_require__(module.identifier());\n              } catch (e) {\n                var _err3 = new WebpackError(\"Execution of module code from module graph (\".concat(module.readableIdentifier(_this22.requestShortener), \") failed: \").concat(e.message));\n\n                _err3.stack = e.stack;\n                _err3.module = e.module;\n                return callback(_err3);\n              }\n\n              callback(null, {\n                exports: exports,\n                assets: assets,\n                cacheable: cacheable,\n                fileDependencies: fileDependencies,\n                contextDependencies: contextDependencies,\n                missingDependencies: missingDependencies,\n                buildDependencies: buildDependencies\n              });\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"checkConstraints\",\n    value: function checkConstraints() {\n      var chunkGraph = this.chunkGraph;\n      /** @type {Set<number|string>} */\n\n      var usedIds = new Set();\n\n      var _iterator98 = _createForOfIteratorHelper(this.modules),\n          _step98;\n\n      try {\n        for (_iterator98.s(); !(_step98 = _iterator98.n()).done;) {\n          var _module28 = _step98.value;\n          if (_module28.type === \"runtime\") continue;\n          var moduleId = chunkGraph.getModuleId(_module28);\n          if (moduleId === null) continue;\n\n          if (usedIds.has(moduleId)) {\n            throw new Error(\"checkConstraints: duplicate module id \".concat(moduleId));\n          }\n\n          usedIds.add(moduleId);\n        }\n      } catch (err) {\n        _iterator98.e(err);\n      } finally {\n        _iterator98.f();\n      }\n\n      var _iterator99 = _createForOfIteratorHelper(this.chunks),\n          _step99;\n\n      try {\n        for (_iterator99.s(); !(_step99 = _iterator99.n()).done;) {\n          var chunk = _step99.value;\n\n          var _iterator101 = _createForOfIteratorHelper(chunkGraph.getChunkModulesIterable(chunk)),\n              _step101;\n\n          try {\n            for (_iterator101.s(); !(_step101 = _iterator101.n()).done;) {\n              var _module29 = _step101.value;\n\n              if (!this.modules.has(_module29)) {\n                throw new Error(\"checkConstraints: module in chunk but not in compilation \" + \" \".concat(chunk.debugId, \" \").concat(_module29.debugId));\n              }\n            }\n          } catch (err) {\n            _iterator101.e(err);\n          } finally {\n            _iterator101.f();\n          }\n\n          var _iterator102 = _createForOfIteratorHelper(chunkGraph.getChunkEntryModulesIterable(chunk)),\n              _step102;\n\n          try {\n            for (_iterator102.s(); !(_step102 = _iterator102.n()).done;) {\n              var _module30 = _step102.value;\n\n              if (!this.modules.has(_module30)) {\n                throw new Error(\"checkConstraints: entry module in chunk but not in compilation \" + \" \".concat(chunk.debugId, \" \").concat(_module30.debugId));\n              }\n            }\n          } catch (err) {\n            _iterator102.e(err);\n          } finally {\n            _iterator102.f();\n          }\n        }\n      } catch (err) {\n        _iterator99.e(err);\n      } finally {\n        _iterator99.f();\n      }\n\n      var _iterator100 = _createForOfIteratorHelper(this.chunkGroups),\n          _step100;\n\n      try {\n        for (_iterator100.s(); !(_step100 = _iterator100.n()).done;) {\n          var chunkGroup = _step100.value;\n          chunkGroup.checkConstraints();\n        }\n      } catch (err) {\n        _iterator100.e(err);\n      } finally {\n        _iterator100.f();\n      }\n    }\n  }]);\n\n  return Compilation;\n}();\n/**\n * @typedef {Object} FactorizeModuleOptions\n * @property {ModuleProfile} currentProfile\n * @property {ModuleFactory} factory\n * @property {Dependency[]} dependencies\n * @property {boolean=} factoryResult return full ModuleFactoryResult instead of only module\n * @property {Module | null} originModule\n * @property {Partial<ModuleFactoryCreateDataContextInfo>=} contextInfo\n * @property {string=} context\n */\n\n/**\n * @param {FactorizeModuleOptions} options options object\n * @param {ModuleCallback | ModuleFactoryResultCallback} callback callback\n * @returns {void}\n */\n// Workaround for typescript as it doesn't support function overloading in jsdoc within a class\n\n\nCompilation.prototype.factorizeModule =\n/** @type {{\n(options: FactorizeModuleOptions & { factoryResult?: false }, callback: ModuleCallback): void;\n(options: FactorizeModuleOptions & { factoryResult: true }, callback: ModuleFactoryResultCallback): void;\n}} */\nfunction (options, callback) {\n  this.factorizeQueue.add(options, callback);\n}; // Hide from typescript\n\n\nvar compilationPrototype = Compilation.prototype; // TODO webpack 6 remove\n\nObject.defineProperty(compilationPrototype, \"modifyHash\", {\n  writable: false,\n  enumerable: false,\n  configurable: false,\n  value: function value() {\n    throw new Error(\"Compilation.modifyHash was removed in favor of Compilation.hooks.fullHash\");\n  }\n}); // TODO webpack 6 remove\n\nObject.defineProperty(compilationPrototype, \"cache\", {\n  enumerable: false,\n  configurable: false,\n  get: util.deprecate(\n  /**\n   * @this {Compilation} the compilation\n   * @returns {Cache} the cache\n   */\n  function () {\n    return this.compiler.cache;\n  }, \"Compilation.cache was removed in favor of Compilation.getCache()\", \"DEP_WEBPACK_COMPILATION_CACHE\"),\n  set: util.deprecate(function (v) {}, \"Compilation.cache was removed in favor of Compilation.getCache()\", \"DEP_WEBPACK_COMPILATION_CACHE\")\n});\n/**\n * Add additional assets to the compilation.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_ADDITIONAL = -2000;\n/**\n * Basic preprocessing of assets.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_PRE_PROCESS = -1000;\n/**\n * Derive new assets from existing assets.\n * Existing assets should not be treated as complete.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_DERIVED = -200;\n/**\n * Add additional sections to existing assets, like a banner or initialization code.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_ADDITIONS = -100;\n/**\n * Optimize existing assets in a general way.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE = 100;\n/**\n * Optimize the count of existing assets, e. g. by merging them.\n * Only assets of the same type should be merged.\n * For assets of different types see PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT = 200;\n/**\n * Optimize the compatibility of existing assets, e. g. add polyfills or vendor-prefixes.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY = 300;\n/**\n * Optimize the size of existing assets, e. g. by minimizing or omitting whitespace.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE = 400;\n/**\n * Add development tooling to assets, e. g. by extracting a SourceMap.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_DEV_TOOLING = 500;\n/**\n * Optimize the count of existing assets, e. g. by inlining assets of into other assets.\n * Only assets of different types should be inlined.\n * For assets of the same type see PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE = 700;\n/**\n * Summarize the list of existing assets\n * e. g. creating an assets manifest of Service Workers.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_SUMMARIZE = 1000;\n/**\n * Optimize the hashes of the assets, e. g. by generating real hashes of the asset content.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_HASH = 2500;\n/**\n * Optimize the transfer of existing assets, e. g. by preparing a compressed (gzip) file as separate asset.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER = 3000;\n/**\n * Analyse existing assets.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_ANALYSE = 4000;\n/**\n * Creating assets for reporting purposes.\n */\n\nCompilation.PROCESS_ASSETS_STAGE_REPORT = 5000;\nmodule.exports = Compilation;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/Compilation.js"],"names":["asyncLib","require","HookMap","SyncHook","SyncBailHook","SyncWaterfallHook","AsyncSeriesHook","AsyncSeriesBailHook","AsyncParallelHook","util","CachedSource","MultiItemCache","Chunk","ChunkGraph","ChunkGroup","ChunkRenderError","ChunkTemplate","CodeGenerationError","CodeGenerationResults","Dependency","DependencyTemplates","Entrypoint","ErrorHelpers","FileSystemInfo","connectChunkGroupAndChunk","connectChunkGroupParentAndChild","makeWebpackError","tryRunOrWebpackError","MainTemplate","Module","ModuleDependencyError","ModuleDependencyWarning","ModuleGraph","ModuleNotFoundError","ModuleProfile","ModuleRestoreError","ModuleStoreError","ModuleTemplate","RuntimeGlobals","RuntimeTemplate","Stats","WebpackError","buildChunkGraph","BuildCycleError","Logger","LogType","StatsFactory","StatsPrinter","arrayEquals","equals","AsyncQueue","LazySet","provide","WeakTupleMap","cachedCleverMerge","compareLocations","concatComparators","compareSelect","compareIds","compareStringsNumeric","compareModulesByIdentifier","createHash","arrayToSetDeprecation","soonFrozenObjectDeprecation","createFakeHook","processAsyncTree","getRuntimeKey","isSourceEqual","EMPTY_ASSET_INFO","Object","freeze","esmDependencyCategory","deprecatedNormalModuleLoaderHook","deprecate","compilation","getCompilationHooks","loader","defineRemovedModuleTemplates","moduleTemplates","defineProperties","asset","enumerable","configurable","get","webassembly","undefined","byId","c","id","byNameOrHash","name","fullHash","byMessage","err","message","byModule","module","identifier","byLocation","loc","compareErrors","unsafeCacheDependencies","WeakMap","unsafeCacheData","Compilation","compiler","params","_backCompat","getNormalModuleLoader","processAssetsHook","savedAssets","Set","popNewAssets","assets","newAssets","keys","file","has","create","add","intercept","call","register","tap","type","fn","additionalAssets","remainingTap","additionalAssetsFn","processedAssets","WeakSet","hooks","processAdditionalAssets","callback","e","callAsync","tapAsync","tapPromise","Promise","resolve","p","then","promise","afterProcessAssetsHook","createProcessAssetsHook","stage","getArgs","code","errorMessage","reason","getOptions","options","Error","interceptor","buildModule","rebuildModule","failedModule","succeedModule","stillValidModule","addEntry","failedEntry","succeedEntry","dependencyReferencedExports","executeModule","prepareModuleExecution","finishModules","finishRebuildingModule","unseal","seal","beforeChunks","afterChunks","optimizeDependencies","afterOptimizeDependencies","optimize","optimizeModules","afterOptimizeModules","optimizeChunks","afterOptimizeChunks","optimizeTree","afterOptimizeTree","optimizeChunkModules","afterOptimizeChunkModules","shouldRecord","additionalChunkRuntimeRequirements","runtimeRequirementInChunk","additionalModuleRuntimeRequirements","runtimeRequirementInModule","additionalTreeRuntimeRequirements","runtimeRequirementInTree","runtimeModule","reviveModules","beforeModuleIds","moduleIds","optimizeModuleIds","afterOptimizeModuleIds","reviveChunks","beforeChunkIds","chunkIds","optimizeChunkIds","afterOptimizeChunkIds","recordModules","recordChunks","optimizeCodeGeneration","beforeModuleHash","afterModuleHash","beforeCodeGeneration","afterCodeGeneration","beforeRuntimeRequirements","afterRuntimeRequirements","beforeHash","contentHash","afterHash","recordHash","record","beforeModuleAssets","shouldGenerateChunkAssets","beforeChunkAssets","additionalChunkAssets","PROCESS_ASSETS_STAGE_ADDITIONAL","chunks","optimizeChunkAssets","PROCESS_ASSETS_STAGE_OPTIMIZE","afterOptimizeChunkAssets","optimizeAssets","afterOptimizeAssets","processAssets","afterProcessAssets","needAdditionalSeal","afterSeal","renderManifest","chunkHash","moduleAsset","chunkAsset","assetPath","needAdditionalPass","childCompiler","log","processWarnings","processErrors","statsPreset","statsNormalize","statsFactory","statsPrinter","normalModuleLoader","startTime","endTime","resolverFactory","inputFileSystem","fileSystemInfo","managedPaths","immutablePaths","logger","getLogger","hashFunction","output","fileTimestamps","addFileTimestamps","contextTimestamps","addContextTimestamps","valueCacheVersions","Map","requestShortener","compilerPath","outputOptions","bail","profile","mainTemplate","chunkTemplate","runtimeTemplate","javascript","moduleMemCaches","moduleMemCaches2","moduleGraph","chunkGraph","codeGenerationResults","processDependenciesQueue","parallelism","processor","_processModuleDependencies","bind","addModuleQueue","parent","getKey","_addModule","factorizeQueue","_factorizeModule","buildQueue","_buildModule","rebuildQueue","_rebuildModule","creatingModuleDuringBuild","entries","globalEntry","dependencies","includeDependencies","entrypoints","asyncEntrypoints","chunkGroups","namedChunkGroups","namedChunks","modules","_modules","records","assetsInfo","_assetsRelatedIn","errors","warnings","children","logging","dependencyFactories","dependencyTemplates","childrenCounters","usedChunkIds","usedModuleIds","_restoredUnsafeCacheModuleEntries","_restoredUnsafeCacheEntries","builtModules","codeGeneratedModules","buildTimeExecutedModules","_rebuildingModules","emittedAssets","comparedForEmitAssets","fileDependencies","contextDependencies","missingDependencies","buildDependencies","compilationDependencies","item","_modulesCache","getCache","_assetsCache","_codeGenerationCache","unsafeCache","_unsafeCache","_unsafeCachePredicate","optionsOrPreset","context","preset","key","for","TypeError","logEntries","args","trace","warn","error","cutOffLoaderExecution","stack","split","slice","logEntry","time","Date","now","profileEnd","console","set","push","childName","alreadyAddedModule","currentProfile","getProfile","markRestoringStart","cacheModule","markRestoringEnd","markIntegrationStart","updateCacheModule","setModuleGraphForModule","markIntegrationEnd","markBuildingStart","needBuild","markBuildingEnd","build","resolveOptions","markStoringStart","store","markStoringEnd","processDependenciesBlock","block","i","dep","setParents","blocks","b","sortedDependencies","currentBlock","factoryCacheKey","factoryCacheKey2","factoryCacheValue","listCacheKey1","listCacheKey2","listCacheValue","inProgressSorting","inProgressTransitive","onDependenciesSorted","length","increaseParallelism","handleModuleCreation","onTransitiveTasksFinished","decreaseParallelism","processDependency","index","unsafeCachedModule","_handleExistingModuleFromUnsafeCache","cachedModule","data","processDependencyForResolving","restoreFromUnsafeCache","normalModuleFactory","_handleNewModuleFromUnsafeCache","resourceIdent","getResourceIdentifier","category","constructor","factory","cacheKey","list","originModule","queue","pop","dependency","setResolvedModule","setIssuerIfUnset","_handleModuleBuildAndDependencies","contextInfo","recursive","connectOrigin","factorizeModule","factoryResult","applyFactoryResultDependencies","addAll","every","d","optional","newModule","setProfile","addModule","cacheable","unsafeCacheableModule","getUnsafeCacheData","otherProfile","mergeInto","creatingModuleDuringBuildSet","isProcessing","blockReasons","m","delete","processModuleDependenciesNonRecursive","processModuleDependencies","markFactoryStart","issuer","nameForCondition","issuerLayer","layer","result","notFoundError","map","filter","Boolean","markFactoryEnd","addModuleTree","Dep","moduleFactory","stop","entry","optionsOrName","_addEntryItem","target","entryData","Array","isArray","oldDependencies","oldBlocks","invalidateBuild","invalidate","err2","unfreeze","removeReasonsOfDependencyBlock","moduleMemCacheCache","setModuleMemCaches","affectedModules","infectedModules","statNew","statChanged","statUnchanged","statReferencesChanged","statWithoutBuild","computeReferences","references","getOutgoingConnections","connection","compareReferences","modulesWithoutCache","cachedMemCache","buildInfo","memCache","reduceAffectType","connections","affected","couldAffectReferencingModule","TRANSITIVE","directOnlyInfectedModules","getIncomingConnectionsByOriginModule","referencingModule","directOnlyAffectModules","cache","Math","round","size","getModuleId","outgoing","getOutgoingConnectionsByModule","from","chunkGroup","getBlockChunkGroup","chunk","apply","memCache2","clear","ParallelismFactorCalculator","modulesWithProfiles","range","buildingStartTime","buildingEndTime","f","buildingParallelismFactor","factoryStartTime","factoryEndTime","factoryParallelismFactor","integrationStartTime","integrationEndTime","integrationParallelismFactor","storingStartTime","storingEndTime","storingParallelismFactor","restoringStartTime","restoringEndTime","restoringParallelismFactor","additionalFactoryTimes","start","end","influence","additionalFactories","additionalFactoriesParallelismFactor","calculate","logByValue","value","msg","info","debug","logNormalSummary","getDuration","getParallelism","sum","max","t","readableIdentifier","logByLoadersSummary","replace","innerSum","innerMax","idx","indexOf","loaders","moduleType","shorten","restoring","building","storing","timeEnd","_computeAffectedModules","hasProblems","reportDependencyErrorsAndWarnings","getErrors","getWarnings","warning","removeAllModuleAttributes","finalCallback","setChunkGraphForModule","chunkGraphInit","addChunk","filename","filenameTemplate","entrypoint","dependOn","runtime","setRuntimeChunk","setEntrypointChunk","entryModules","addOrigin","request","getModule","connectChunkAndEntryModule","modulesList","assignDepths","mapAndSort","deps","sort","includedModules","assignDepth","runtimeChunks","outer","getEntrypointChunk","referencedChunks","getAllReferencedChunks","dependOnEntries","entryChunk","JSON","stringify","preventIntegration","unshiftChunk","addGroup","assignRuntimeIds","_computeAffectedModulesWithChunkGraph","sortItemsWithChunkIds","createModuleHashes","codeGeneration","processRuntimeRequirements","codeGenerationJobs","_runCodeGenerationJobs","clearAssets","createModuleAssets","cont","summarizeDependencies","logStatistics","createChunkAssets","indexBlock","indexDep","indexWar","w","indexErr","jobs","runtimes","getModuleRuntimes","hash","getModuleHash","job","newJob","statModulesFromCache","statModulesGenerated","results","notCodeGeneratedModules","runIteration","delayedJobs","delayedModules","eachLimit","codeGenerationDependencies","some","referencedModule","_codeGenerationModule","codeGenerated","join","getItemCache","getHash","cachedResult","sources","runtimeRequirements","treeEntries","values","ep","getRuntimeChunk","chunkGraphEntries","_getChunkGraphEntries","getNumberOfModuleChunks","cached","addModuleRuntimeRequirements","getRuntimeRequirements","isUsed","r","hook","getChunkModulesIterable","getModuleRuntimeRequirements","addChunkRuntimeRequirements","treeEntry","getChunkRuntimeRequirements","addTreeRuntimeRequirements","connectChunkAndModule","connectChunkAndRuntimeModule","addFullHashModuleToChunk","dependentHash","addDependentHashModuleToChunk","attach","exportsInfo","getExportsInfo","setHasProvideInfo","setUsedForSideEffectsOnly","requireScope","setModuleId","groupOptions","addOptions","setChunkGraphForChunk","depth","setDepth","processModule","setDepthIfLower","getDepth","refModule","referencedExports","getReferencedExports","originalModule","removeConnection","getModuleChunks","patchChunksAfterReasonRemoval","hasReasons","hasReasonForChunk","isModuleInChunk","disconnectChunkAndModule","removeChunkFromDependencies","iteratorDependency","depModule","asyncBlock","indexChunk","iteratedChunk","removeChunk","processEntrypoint","setRuntimeId","sortItems","indexChildren","child","addCacheDependencies","statModulesHashed","hashDigest","hashDigestLength","digest","setModuleHashes","substr","_createModuleHash","moduleHash","updateHash","moduleHashDigest","hashSalt","update","unorderedRuntimeChunks","otherChunks","hasRuntime","runtimeChunksMap","referencedBy","remaining","getAllReferencedAsyncEntrypoints","other","otherInfo","readyChunks","hasFullHashModules","getNumberOfChunkFullHashModules","upgradeDependentToFullHashModules","circularRuntimeChunkInfo","fullHashChunks","codeGenerationJobsMap","processChunk","hasModuleHashes","hashMap","moduleJob","timeAggregate","chunkHashDigest","renderedHash","fullHashModules","getChunkFullHashModulesIterable","forEach","timeAggregateEnd","oldHash","source","assetInfo","_setAssetInfo","oldInfo","newInfo","assign","oldRelated","related","newRelated","remove","relatedIn","newSourceOrFunction","assetInfoUpdateOrFunction","newFile","relatedInInfo","newEntry","x","files","auxiliaryFiles","checkUsedAndDelete","deleteAsset","items","array","assetName","prototype","hasOwnProperty","fileName","getPath","getModuleChunksIterable","emitAsset","cachedSourceMap","alreadyWrittenFiles","forEachLimit","manifest","getRenderManifest","fileManifest","ident","usedHash","assetCacheItem","sourceFromCache","inTry","errorAndCallback","pathAndInfo","getPathWithInfo","pathOptions","path","alreadyWritten","render","cacheEntry","cachedSource","auxiliary","getAssetPath","getAssetPathWithInfo","newPath","plugins","createChildCompiler","waitFor","ids","chunkLoading","entryOptions","codeGen","reportErrors","old","runtimeModules","getChunkRuntimeModulesIterable","moduleArgumentsMap","moduleArgumentsById","__webpack_require__","codeGenerationResult","moduleArgument","preparedInfo","moduleObject","moduleAssets","exports","strictModuleErrorHandling","strictModuleExceptionHandling","moduleCache","__webpack_require_module__","interceptModuleExecution","execOptions","loaded","handler","getChunkRuntimeModulesInOrder","usedIds","moduleId","debugId","getChunkEntryModulesIterable","checkConstraints","compilationPrototype","defineProperty","writable","v","PROCESS_ASSETS_STAGE_PRE_PROCESS","PROCESS_ASSETS_STAGE_DERIVED","PROCESS_ASSETS_STAGE_ADDITIONS","PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT","PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","PROCESS_ASSETS_STAGE_DEV_TOOLING","PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE","PROCESS_ASSETS_STAGE_SUMMARIZE","PROCESS_ASSETS_STAGE_OPTIMIZE_HASH","PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER","PROCESS_ASSETS_STAGE_ANALYSE","PROCESS_ASSETS_STAGE_REPORT"],"mappings":"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A,IAAMC,YAAY,GAAGpD,OAAO,CAAC,qBAAD,CAA5B;;AACA,gBAA8BA,OAAO,CAAC,oBAAD,CAArC;AAAA,IAAQqD,iBAAR,aAAQA,iBAAR;;AACA,iBAOIrD,OAAO,CAAC,oBAAD,CAPX;AAAA,IACCsD,gBADD,cACCA,gBADD;AAAA,IAECC,iBAFD,cAECA,iBAFD;AAAA,IAGCC,aAHD,cAGCA,aAHD;AAAA,IAICC,UAJD,cAICA,UAJD;AAAA,IAKCC,qBALD,cAKCA,qBALD;AAAA,IAMCC,0BAND,cAMCA,0BAND;;AAQA,IAAMC,WAAU,GAAG5D,OAAO,CAAC,mBAAD,CAA1B;;AACA,iBAIIA,OAAO,CAAC,oBAAD,CAJX;AAAA,IACC6D,qBADD,cACCA,qBADD;AAAA,IAECC,2BAFD,cAECA,2BAFD;AAAA,IAGCC,cAHD,cAGCA,cAHD;;AAKA,IAAMC,gBAAgB,GAAGhE,OAAO,CAAC,yBAAD,CAAhC;;AACA,iBAA0BA,OAAO,CAAC,gBAAD,CAAjC;AAAA,IAAQiE,aAAR,cAAQA,aAAR;;AACA,iBAA0BjE,OAAO,CAAC,eAAD,CAAjC;AAAA,IAAQkE,aAAR,cAAQA,aAAR;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;AACA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,CAAzB;AAEA,IAAMC,qBAAqB,GAAG,KAA9B,C,CACA;;AACA,IAAMC,gCAAgC,GAAG/D,IAAI,CAACgE,SAAL,CACxC,UAAAC,WAAW,EAAI;AACd,SAAOzE,OAAO,CAAC,gBAAD,CAAP,CAA0B0E,mBAA1B,CAA8CD,WAA9C,EAA2DE,MAAlE;AACA,CAHuC,EAIxC,wGAJwC,EAKxC,mDALwC,CAAzC,C,CAQA;;AACA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAAC,eAAe,EAAI;AACvDT,EAAAA,MAAM,CAACU,gBAAP,CAAwBD,eAAxB,EAAyC;AACxCE,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,YAAY,EAAE,KAFR;AAGNC,MAAAA,GAAG,EAAE,eAAM;AACV,cAAM,IAAI1C,YAAJ,CA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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst {\n\tHookMap,\n\tSyncHook,\n\tSyncBailHook,\n\tSyncWaterfallHook,\n\tAsyncSeriesHook,\n\tAsyncSeriesBailHook,\n\tAsyncParallelHook\n} = require(\"tapable\");\nconst util = require(\"util\");\nconst { CachedSource } = require(\"webpack-sources\");\nconst { MultiItemCache } = require(\"./CacheFacade\");\nconst Chunk = require(\"./Chunk\");\nconst ChunkGraph = require(\"./ChunkGraph\");\nconst ChunkGroup = require(\"./ChunkGroup\");\nconst ChunkRenderError = require(\"./ChunkRenderError\");\nconst ChunkTemplate = require(\"./ChunkTemplate\");\nconst CodeGenerationError = require(\"./CodeGenerationError\");\nconst CodeGenerationResults = require(\"./CodeGenerationResults\");\nconst Dependency = require(\"./Dependency\");\nconst DependencyTemplates = require(\"./DependencyTemplates\");\nconst Entrypoint = require(\"./Entrypoint\");\nconst ErrorHelpers = require(\"./ErrorHelpers\");\nconst FileSystemInfo = require(\"./FileSystemInfo\");\nconst {\n\tconnectChunkGroupAndChunk,\n\tconnectChunkGroupParentAndChild\n} = require(\"./GraphHelpers\");\nconst {\n\tmakeWebpackError,\n\ttryRunOrWebpackError\n} = require(\"./HookWebpackError\");\nconst MainTemplate = require(\"./MainTemplate\");\nconst Module = require(\"./Module\");\nconst ModuleDependencyError = require(\"./ModuleDependencyError\");\nconst ModuleDependencyWarning = require(\"./ModuleDependencyWarning\");\nconst ModuleGraph = require(\"./ModuleGraph\");\nconst ModuleNotFoundError = require(\"./ModuleNotFoundError\");\nconst ModuleProfile = require(\"./ModuleProfile\");\nconst ModuleRestoreError = require(\"./ModuleRestoreError\");\nconst ModuleStoreError = require(\"./ModuleStoreError\");\nconst ModuleTemplate = require(\"./ModuleTemplate\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst RuntimeTemplate = require(\"./RuntimeTemplate\");\nconst Stats = require(\"./Stats\");\nconst WebpackError = require(\"./WebpackError\");\nconst buildChunkGraph = require(\"./buildChunkGraph\");\nconst BuildCycleError = require(\"./errors/BuildCycleError\");\nconst { Logger, LogType } = require(\"./logging/Logger\");\nconst StatsFactory = require(\"./stats/StatsFactory\");\nconst StatsPrinter = require(\"./stats/StatsPrinter\");\nconst { equals: arrayEquals } = require(\"./util/ArrayHelpers\");\nconst AsyncQueue = require(\"./util/AsyncQueue\");\nconst LazySet = require(\"./util/LazySet\");\nconst { provide } = require(\"./util/MapHelpers\");\nconst WeakTupleMap = require(\"./util/WeakTupleMap\");\nconst { cachedCleverMerge } = require(\"./util/cleverMerge\");\nconst {\n\tcompareLocations,\n\tconcatComparators,\n\tcompareSelect,\n\tcompareIds,\n\tcompareStringsNumeric,\n\tcompareModulesByIdentifier\n} = require(\"./util/comparators\");\nconst createHash = require(\"./util/createHash\");\nconst {\n\tarrayToSetDeprecation,\n\tsoonFrozenObjectDeprecation,\n\tcreateFakeHook\n} = require(\"./util/deprecation\");\nconst processAsyncTree = require(\"./util/processAsyncTree\");\nconst { getRuntimeKey } = require(\"./util/runtime\");\nconst { isSourceEqual } = require(\"./util/source\");\n\n/** @template T @typedef {import(\"tapable\").AsArray<T>} AsArray<T> */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDescriptionNormalized} EntryDescription */\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginFunction} WebpackPluginFunction */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginInstance} WebpackPluginInstance */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Cache\")} Cache */\n/** @typedef {import(\"./CacheFacade\")} CacheFacade */\n/** @typedef {import(\"./ChunkGroup\").ChunkGroupOptions} ChunkGroupOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Compiler\").CompilationParams} CompilationParams */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"./DependencyTemplate\")} DependencyTemplate */\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./ModuleFactory\")} ModuleFactory */\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryCreateDataContextInfo} ModuleFactoryCreateDataContextInfo */\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./RuntimeModule\")} RuntimeModule */\n/** @typedef {import(\"./Template\").RenderManifestEntry} RenderManifestEntry */\n/** @typedef {import(\"./Template\").RenderManifestOptions} RenderManifestOptions */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsAsset} StatsAsset */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsError} StatsError */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsModule} StatsModule */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @template T @typedef {import(\"./util/deprecation\").FakeHook<T>} FakeHook<T> */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @callback Callback\n * @param {(WebpackError | null)=} err\n * @returns {void}\n */\n\n/**\n * @callback ModuleCallback\n * @param {(WebpackError | null)=} err\n * @param {Module=} result\n * @returns {void}\n */\n\n/**\n * @callback ModuleFactoryResultCallback\n * @param {(WebpackError | null)=} err\n * @param {ModuleFactoryResult=} result\n * @returns {void}\n */\n\n/**\n * @callback ModuleOrFactoryResultCallback\n * @param {(WebpackError | null)=} err\n * @param {Module | ModuleFactoryResult=} result\n * @returns {void}\n */\n\n/**\n * @callback ExecuteModuleCallback\n * @param {(WebpackError | null)=} err\n * @param {ExecuteModuleResult=} result\n * @returns {void}\n */\n\n/**\n * @callback DepBlockVarDependenciesCallback\n * @param {Dependency} dependency\n * @returns {any}\n */\n\n/** @typedef {new (...args: any[]) => Dependency} DepConstructor */\n/** @typedef {Record<string, Source>} CompilationAssets */\n\n/**\n * @typedef {Object} AvailableModulesChunkGroupMapping\n * @property {ChunkGroup} chunkGroup\n * @property {Set<Module>} availableModules\n * @property {boolean} needCopy\n */\n\n/**\n * @typedef {Object} DependenciesBlockLike\n * @property {Dependency[]} dependencies\n * @property {AsyncDependenciesBlock[]} blocks\n */\n\n/**\n * @typedef {Object} ChunkPathData\n * @property {string|number} id\n * @property {string=} name\n * @property {string} hash\n * @property {function(number): string=} hashWithLength\n * @property {(Record<string, string>)=} contentHash\n * @property {(Record<string, (length: number) => string>)=} contentHashWithLength\n */\n\n/**\n * @typedef {Object} ChunkHashContext\n * @property {CodeGenerationResults} codeGenerationResults results of code generation\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {ModuleGraph} moduleGraph the module graph\n * @property {ChunkGraph} chunkGraph the chunk graph\n */\n\n/**\n * @typedef {Object} RuntimeRequirementsContext\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {CodeGenerationResults} codeGenerationResults the code generation results\n */\n\n/**\n * @typedef {Object} ExecuteModuleOptions\n * @property {EntryOptions=} entryOptions\n */\n\n/**\n * @typedef {Object} ExecuteModuleResult\n * @property {any} exports\n * @property {boolean} cacheable\n * @property {Map<string, { source: Source, info: AssetInfo }>} assets\n * @property {LazySet<string>} fileDependencies\n * @property {LazySet<string>} contextDependencies\n * @property {LazySet<string>} missingDependencies\n * @property {LazySet<string>} buildDependencies\n */\n\n/**\n * @typedef {Object} ExecuteModuleArgument\n * @property {Module} module\n * @property {{ id: string, exports: any, loaded: boolean }=} moduleObject\n * @property {any} preparedInfo\n * @property {CodeGenerationResult} codeGenerationResult\n */\n\n/**\n * @typedef {Object} ExecuteModuleContext\n * @property {Map<string, { source: Source, info: AssetInfo }>} assets\n * @property {Chunk} chunk\n * @property {ChunkGraph} chunkGraph\n * @property {function(string): any=} __webpack_require__\n */\n\n/**\n * @typedef {Object} EntryData\n * @property {Dependency[]} dependencies dependencies of the entrypoint that should be evaluated at startup\n * @property {Dependency[]} includeDependencies dependencies of the entrypoint that should be included but not evaluated\n * @property {EntryOptions} options options of the entrypoint\n */\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} type\n * @property {any[]} args\n * @property {number} time\n * @property {string[]=} trace\n */\n\n/**\n * @typedef {Object} KnownAssetInfo\n * @property {boolean=} immutable true, if the asset can be long term cached forever (contains a hash)\n * @property {boolean=} minimized whether the asset is minimized\n * @property {string | string[]=} fullhash the value(s) of the full hash used for this asset\n * @property {string | string[]=} chunkhash the value(s) of the chunk hash used for this asset\n * @property {string | string[]=} modulehash the value(s) of the module hash used for this asset\n * @property {string | string[]=} contenthash the value(s) of the content hash used for this asset\n * @property {string=} sourceFilename when asset was created from a source file (potentially transformed), the original filename relative to compilation context\n * @property {number=} size size in bytes, only set after asset has been emitted\n * @property {boolean=} development true, when asset is only used for development and doesn't count towards user-facing assets\n * @property {boolean=} hotModuleReplacement true, when asset ships data for updating an existing application (HMR)\n * @property {boolean=} javascriptModule true, when asset is javascript and an ESM\n * @property {Record<string, string | string[]>=} related object of pointers to other assets, keyed by type of relation (only points from parent to child)\n */\n\n/** @typedef {KnownAssetInfo & Record<string, any>} AssetInfo */\n\n/**\n * @typedef {Object} Asset\n * @property {string} name the filename of the asset\n * @property {Source} source source of the asset\n * @property {AssetInfo} info info about the asset\n */\n\n/**\n * @typedef {Object} ModulePathData\n * @property {string|number} id\n * @property {string} hash\n * @property {function(number): string=} hashWithLength\n */\n\n/**\n * @typedef {Object} PathData\n * @property {ChunkGraph=} chunkGraph\n * @property {string=} hash\n * @property {function(number): string=} hashWithLength\n * @property {(Chunk|ChunkPathData)=} chunk\n * @property {(Module|ModulePathData)=} module\n * @property {RuntimeSpec=} runtime\n * @property {string=} filename\n * @property {string=} basename\n * @property {string=} query\n * @property {string=} contentHashType\n * @property {string=} contentHash\n * @property {function(number): string=} contentHashWithLength\n * @property {boolean=} noChunkHash\n * @property {string=} url\n */\n\n/**\n * @typedef {Object} KnownNormalizedStatsOptions\n * @property {string} context\n * @property {RequestShortener} requestShortener\n * @property {string} chunksSort\n * @property {string} modulesSort\n * @property {string} chunkModulesSort\n * @property {string} nestedModulesSort\n * @property {string} assetsSort\n * @property {boolean} ids\n * @property {boolean} cachedAssets\n * @property {boolean} groupAssetsByEmitStatus\n * @property {boolean} groupAssetsByPath\n * @property {boolean} groupAssetsByExtension\n * @property {number} assetsSpace\n * @property {((value: string, asset: StatsAsset) => boolean)[]} excludeAssets\n * @property {((name: string, module: StatsModule, type: \"module\" | \"chunk\" | \"root-of-chunk\" | \"nested\") => boolean)[]} excludeModules\n * @property {((warning: StatsError, textValue: string) => boolean)[]} warningsFilter\n * @property {boolean} cachedModules\n * @property {boolean} orphanModules\n * @property {boolean} dependentModules\n * @property {boolean} runtimeModules\n * @property {boolean} groupModulesByCacheStatus\n * @property {boolean} groupModulesByLayer\n * @property {boolean} groupModulesByAttributes\n * @property {boolean} groupModulesByPath\n * @property {boolean} groupModulesByExtension\n * @property {boolean} groupModulesByType\n * @property {boolean | \"auto\"} entrypoints\n * @property {boolean} chunkGroups\n * @property {boolean} chunkGroupAuxiliary\n * @property {boolean} chunkGroupChildren\n * @property {number} chunkGroupMaxAssets\n * @property {number} modulesSpace\n * @property {number} chunkModulesSpace\n * @property {number} nestedModulesSpace\n * @property {false|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} logging\n * @property {((value: string) => boolean)[]} loggingDebug\n * @property {boolean} loggingTrace\n * @property {any} _env\n */\n\n/** @typedef {KnownNormalizedStatsOptions & Omit<StatsOptions, keyof KnownNormalizedStatsOptions> & Record<string, any>} NormalizedStatsOptions */\n\n/**\n * @typedef {Object} KnownCreateStatsOptionsContext\n * @property {boolean=} forToString\n */\n\n/** @typedef {KnownCreateStatsOptionsContext & Record<string, any>} CreateStatsOptionsContext */\n\n/** @type {AssetInfo} */\nconst EMPTY_ASSET_INFO = Object.freeze({});\n\nconst esmDependencyCategory = \"esm\";\n// TODO webpack 6: remove\nconst deprecatedNormalModuleLoaderHook = util.deprecate(\n\tcompilation => {\n\t\treturn require(\"./NormalModule\").getCompilationHooks(compilation).loader;\n\t},\n\t\"Compilation.hooks.normalModuleLoader was moved to NormalModule.getCompilationHooks(compilation).loader\",\n\t\"DEP_WEBPACK_COMPILATION_NORMAL_MODULE_LOADER_HOOK\"\n);\n\n// TODO webpack 6: remove\nconst defineRemovedModuleTemplates = moduleTemplates => {\n\tObject.defineProperties(moduleTemplates, {\n\t\tasset: {\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tthrow new WebpackError(\n\t\t\t\t\t\"Compilation.moduleTemplates.asset has been removed\"\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\twebassembly: {\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tthrow new WebpackError(\n\t\t\t\t\t\"Compilation.moduleTemplates.webassembly has been removed\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t});\n\tmoduleTemplates = undefined;\n};\n\nconst byId = compareSelect(\n\t/**\n\t * @param {Chunk} c chunk\n\t * @returns {number | string} id\n\t */ c => c.id,\n\tcompareIds\n);\n\nconst byNameOrHash = concatComparators(\n\tcompareSelect(\n\t\t/**\n\t\t * @param {Compilation} c compilation\n\t\t * @returns {string} name\n\t\t */\n\t\tc => c.name,\n\t\tcompareIds\n\t),\n\tcompareSelect(\n\t\t/**\n\t\t * @param {Compilation} c compilation\n\t\t * @returns {string} hash\n\t\t */ c => c.fullHash,\n\t\tcompareIds\n\t)\n);\n\nconst byMessage = compareSelect(err => `${err.message}`, compareStringsNumeric);\n\nconst byModule = compareSelect(\n\terr => (err.module && err.module.identifier()) || \"\",\n\tcompareStringsNumeric\n);\n\nconst byLocation = compareSelect(err => err.loc, compareLocations);\n\nconst compareErrors = concatComparators(byModule, byLocation, byMessage);\n\n/** @type {WeakMap<Dependency, Module & { restoreFromUnsafeCache: Function } | null>} */\nconst unsafeCacheDependencies = new WeakMap();\n\n/** @type {WeakMap<Module & { restoreFromUnsafeCache: Function }, object>} */\nconst unsafeCacheData = new WeakMap();\n\nclass Compilation {\n\t/**\n\t * Creates an instance of Compilation.\n\t * @param {Compiler} compiler the compiler which created the compilation\n\t * @param {CompilationParams} params the compilation parameters\n\t */\n\tconstructor(compiler, params) {\n\t\tthis._backCompat = compiler._backCompat;\n\n\t\tconst getNormalModuleLoader = () => deprecatedNormalModuleLoaderHook(this);\n\t\t/** @typedef {{ additionalAssets?: true | Function }} ProcessAssetsAdditionalOptions */\n\t\t/** @type {AsyncSeriesHook<[CompilationAssets], ProcessAssetsAdditionalOptions>} */\n\t\tconst processAssetsHook = new AsyncSeriesHook([\"assets\"]);\n\n\t\tlet savedAssets = new Set();\n\t\tconst popNewAssets = assets => {\n\t\t\tlet newAssets = undefined;\n\t\t\tfor (const file of Object.keys(assets)) {\n\t\t\t\tif (savedAssets.has(file)) continue;\n\t\t\t\tif (newAssets === undefined) {\n\t\t\t\t\tnewAssets = Object.create(null);\n\t\t\t\t}\n\t\t\t\tnewAssets[file] = assets[file];\n\t\t\t\tsavedAssets.add(file);\n\t\t\t}\n\t\t\treturn newAssets;\n\t\t};\n\t\tprocessAssetsHook.intercept({\n\t\t\tname: \"Compilation\",\n\t\t\tcall: () => {\n\t\t\t\tsavedAssets = new Set(Object.keys(this.assets));\n\t\t\t},\n\t\t\tregister: tap => {\n\t\t\t\tconst { type, name } = tap;\n\t\t\t\tconst { fn, additionalAssets, ...remainingTap } = tap;\n\t\t\t\tconst additionalAssetsFn =\n\t\t\t\t\tadditionalAssets === true ? fn : additionalAssets;\n\t\t\t\tconst processedAssets = additionalAssetsFn ? new WeakSet() : undefined;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase \"sync\":\n\t\t\t\t\t\tif (additionalAssetsFn) {\n\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.tap(name, assets => {\n\t\t\t\t\t\t\t\tif (processedAssets.has(this.assets))\n\t\t\t\t\t\t\t\t\tadditionalAssetsFn(assets);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...remainingTap,\n\t\t\t\t\t\t\ttype: \"async\",\n\t\t\t\t\t\t\tfn: (assets, callback) => {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tfn(assets);\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\treturn callback(e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (processedAssets !== undefined)\n\t\t\t\t\t\t\t\t\tprocessedAssets.add(this.assets);\n\t\t\t\t\t\t\t\tconst newAssets = popNewAssets(assets);\n\t\t\t\t\t\t\t\tif (newAssets !== undefined) {\n\t\t\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.callAsync(\n\t\t\t\t\t\t\t\t\t\tnewAssets,\n\t\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"async\":\n\t\t\t\t\t\tif (additionalAssetsFn) {\n\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.tapAsync(\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t(assets, callback) => {\n\t\t\t\t\t\t\t\t\tif (processedAssets.has(this.assets))\n\t\t\t\t\t\t\t\t\t\treturn additionalAssetsFn(assets, callback);\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...remainingTap,\n\t\t\t\t\t\t\tfn: (assets, callback) => {\n\t\t\t\t\t\t\t\tfn(assets, err => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\tif (processedAssets !== undefined)\n\t\t\t\t\t\t\t\t\t\tprocessedAssets.add(this.assets);\n\t\t\t\t\t\t\t\t\tconst newAssets = popNewAssets(assets);\n\t\t\t\t\t\t\t\t\tif (newAssets !== undefined) {\n\t\t\t\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.callAsync(\n\t\t\t\t\t\t\t\t\t\t\tnewAssets,\n\t\t\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"promise\":\n\t\t\t\t\t\tif (additionalAssetsFn) {\n\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.tapPromise(name, assets => {\n\t\t\t\t\t\t\t\tif (processedAssets.has(this.assets))\n\t\t\t\t\t\t\t\t\treturn additionalAssetsFn(assets);\n\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...remainingTap,\n\t\t\t\t\t\t\tfn: assets => {\n\t\t\t\t\t\t\t\tconst p = fn(assets);\n\t\t\t\t\t\t\t\tif (!p || !p.then) return p;\n\t\t\t\t\t\t\t\treturn p.then(() => {\n\t\t\t\t\t\t\t\t\tif (processedAssets !== undefined)\n\t\t\t\t\t\t\t\t\t\tprocessedAssets.add(this.assets);\n\t\t\t\t\t\t\t\t\tconst newAssets = popNewAssets(assets);\n\t\t\t\t\t\t\t\t\tif (newAssets !== undefined) {\n\t\t\t\t\t\t\t\t\t\treturn this.hooks.processAdditionalAssets.promise(\n\t\t\t\t\t\t\t\t\t\t\tnewAssets\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/** @type {SyncHook<[CompilationAssets]>} */\n\t\tconst afterProcessAssetsHook = new SyncHook([\"assets\"]);\n\n\t\t/**\n\t\t * @template T\n\t\t * @param {string} name name of the hook\n\t\t * @param {number} stage new stage\n\t\t * @param {function(): AsArray<T>} getArgs get old hook function args\n\t\t * @param {string=} code deprecation code (not deprecated when unset)\n\t\t * @returns {FakeHook<Pick<AsyncSeriesHook<T>, \"tap\" | \"tapAsync\" | \"tapPromise\" | \"name\">>} fake hook which redirects\n\t\t */\n\t\tconst createProcessAssetsHook = (name, stage, getArgs, code) => {\n\t\t\tif (!this._backCompat && code) return undefined;\n\t\t\tconst errorMessage =\n\t\t\t\treason => `Can't automatically convert plugin using Compilation.hooks.${name} to Compilation.hooks.processAssets because ${reason}.\nBREAKING CHANGE: Asset processing hooks in Compilation has been merged into a single Compilation.hooks.processAssets hook.`;\n\t\t\tconst getOptions = options => {\n\t\t\t\tif (typeof options === \"string\") options = { name: options };\n\t\t\t\tif (options.stage) {\n\t\t\t\t\tthrow new Error(errorMessage(\"it's using the 'stage' option\"));\n\t\t\t\t}\n\t\t\t\treturn { ...options, stage: stage };\n\t\t\t};\n\t\t\treturn createFakeHook(\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\t/** @type {AsyncSeriesHook<T>[\"intercept\"]} */\n\t\t\t\t\tintercept(interceptor) {\n\t\t\t\t\t\tthrow new Error(errorMessage(\"it's using 'intercept'\"));\n\t\t\t\t\t},\n\t\t\t\t\t/** @type {AsyncSeriesHook<T>[\"tap\"]} */\n\t\t\t\t\ttap: (options, fn) => {\n\t\t\t\t\t\tprocessAssetsHook.tap(getOptions(options), () => fn(...getArgs()));\n\t\t\t\t\t},\n\t\t\t\t\t/** @type {AsyncSeriesHook<T>[\"tapAsync\"]} */\n\t\t\t\t\ttapAsync: (options, fn) => {\n\t\t\t\t\t\tprocessAssetsHook.tapAsync(\n\t\t\t\t\t\t\tgetOptions(options),\n\t\t\t\t\t\t\t(assets, callback) =>\n\t\t\t\t\t\t\t\t/** @type {any} */ (fn)(...getArgs(), callback)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\t/** @type {AsyncSeriesHook<T>[\"tapPromise\"]} */\n\t\t\t\t\ttapPromise: (options, fn) => {\n\t\t\t\t\t\tprocessAssetsHook.tapPromise(getOptions(options), () =>\n\t\t\t\t\t\t\tfn(...getArgs())\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t`${name} is deprecated (use Compilation.hooks.processAssets instead and use one of Compilation.PROCESS_ASSETS_STAGE_* as stage option)`,\n\t\t\t\tcode\n\t\t\t);\n\t\t};\n\t\tthis.hooks = Object.freeze({\n\t\t\t/** @type {SyncHook<[Module]>} */\n\t\t\tbuildModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<[Module]>} */\n\t\t\trebuildModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<[Module, WebpackError]>} */\n\t\t\tfailedModule: new SyncHook([\"module\", \"error\"]),\n\t\t\t/** @type {SyncHook<[Module]>} */\n\t\t\tsucceedModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<[Module]>} */\n\t\t\tstillValidModule: new SyncHook([\"module\"]),\n\n\t\t\t/** @type {SyncHook<[Dependency, EntryOptions]>} */\n\t\t\taddEntry: new SyncHook([\"entry\", \"options\"]),\n\t\t\t/** @type {SyncHook<[Dependency, EntryOptions, Error]>} */\n\t\t\tfailedEntry: new SyncHook([\"entry\", \"options\", \"error\"]),\n\t\t\t/** @type {SyncHook<[Dependency, EntryOptions, Module]>} */\n\t\t\tsucceedEntry: new SyncHook([\"entry\", \"options\", \"module\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<[(string[] | ReferencedExport)[], Dependency, RuntimeSpec]>} */\n\t\t\tdependencyReferencedExports: new SyncWaterfallHook([\n\t\t\t\t\"referencedExports\",\n\t\t\t\t\"dependency\",\n\t\t\t\t\"runtime\"\n\t\t\t]),\n\n\t\t\t/** @type {SyncHook<[ExecuteModuleArgument, ExecuteModuleContext]>} */\n\t\t\texecuteModule: new SyncHook([\"options\", \"context\"]),\n\t\t\t/** @type {AsyncParallelHook<[ExecuteModuleArgument, ExecuteModuleContext]>} */\n\t\t\tprepareModuleExecution: new AsyncParallelHook([\"options\", \"context\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<[Iterable<Module>]>} */\n\t\t\tfinishModules: new AsyncSeriesHook([\"modules\"]),\n\t\t\t/** @type {AsyncSeriesHook<[Module]>} */\n\t\t\tfinishRebuildingModule: new AsyncSeriesHook([\"module\"]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tunseal: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tseal: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeChunks: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\tafterChunks: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {SyncBailHook<[Iterable<Module>]>} */\n\t\t\toptimizeDependencies: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tafterOptimizeDependencies: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\toptimize: new SyncHook([]),\n\t\t\t/** @type {SyncBailHook<[Iterable<Module>]>} */\n\t\t\toptimizeModules: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tafterOptimizeModules: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncBailHook<[Iterable<Chunk>, ChunkGroup[]]>} */\n\t\t\toptimizeChunks: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, ChunkGroup[]]>} */\n\t\t\tafterOptimizeChunks: new SyncHook([\"chunks\", \"chunkGroups\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<[Iterable<Chunk>, Iterable<Module>]>} */\n\t\t\toptimizeTree: new AsyncSeriesHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, Iterable<Module>]>} */\n\t\t\tafterOptimizeTree: new SyncHook([\"chunks\", \"modules\"]),\n\n\t\t\t/** @type {AsyncSeriesBailHook<[Iterable<Chunk>, Iterable<Module>]>} */\n\t\t\toptimizeChunkModules: new AsyncSeriesBailHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, Iterable<Module>]>} */\n\t\t\tafterOptimizeChunkModules: new SyncHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncBailHook<[], boolean>} */\n\t\t\tshouldRecord: new SyncBailHook([]),\n\n\t\t\t/** @type {SyncHook<[Chunk, Set<string>, RuntimeRequirementsContext]>} */\n\t\t\tadditionalChunkRuntimeRequirements: new SyncHook([\n\t\t\t\t\"chunk\",\n\t\t\t\t\"runtimeRequirements\",\n\t\t\t\t\"context\"\n\t\t\t]),\n\t\t\t/** @type {HookMap<SyncBailHook<[Chunk, Set<string>, RuntimeRequirementsContext]>>} */\n\t\t\truntimeRequirementInChunk: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"chunk\", \"runtimeRequirements\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {SyncHook<[Module, Set<string>, RuntimeRequirementsContext]>} */\n\t\t\tadditionalModuleRuntimeRequirements: new SyncHook([\n\t\t\t\t\"module\",\n\t\t\t\t\"runtimeRequirements\",\n\t\t\t\t\"context\"\n\t\t\t]),\n\t\t\t/** @type {HookMap<SyncBailHook<[Module, Set<string>, RuntimeRequirementsContext]>>} */\n\t\t\truntimeRequirementInModule: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"module\", \"runtimeRequirements\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {SyncHook<[Chunk, Set<string>, RuntimeRequirementsContext]>} */\n\t\t\tadditionalTreeRuntimeRequirements: new SyncHook([\n\t\t\t\t\"chunk\",\n\t\t\t\t\"runtimeRequirements\",\n\t\t\t\t\"context\"\n\t\t\t]),\n\t\t\t/** @type {HookMap<SyncBailHook<[Chunk, Set<string>, RuntimeRequirementsContext]>>} */\n\t\t\truntimeRequirementInTree: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"chunk\", \"runtimeRequirements\", \"context\"])\n\t\t\t),\n\n\t\t\t/** @type {SyncHook<[RuntimeModule, Chunk]>} */\n\t\t\truntimeModule: new SyncHook([\"module\", \"chunk\"]),\n\n\t\t\t/** @type {SyncHook<[Iterable<Module>, any]>} */\n\t\t\treviveModules: new SyncHook([\"modules\", \"records\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tbeforeModuleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tmoduleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\toptimizeModuleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tafterOptimizeModuleIds: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, any]>} */\n\t\t\treviveChunks: new SyncHook([\"chunks\", \"records\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\tbeforeChunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\tchunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\toptimizeChunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\tafterOptimizeChunkIds: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {SyncHook<[Iterable<Module>, any]>} */\n\t\t\trecordModules: new SyncHook([\"modules\", \"records\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, any]>} */\n\t\t\trecordChunks: new SyncHook([\"chunks\", \"records\"]),\n\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\toptimizeCodeGeneration: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeModuleHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tafterModuleHash: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeCodeGeneration: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tafterCodeGeneration: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeRuntimeRequirements: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tafterRuntimeRequirements: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[Chunk]>} */\n\t\t\tcontentHash: new SyncHook([\"chunk\"]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tafterHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[any]>} */\n\t\t\trecordHash: new SyncHook([\"records\"]),\n\t\t\t/** @type {SyncHook<[Compilation, any]>} */\n\t\t\trecord: new SyncHook([\"compilation\", \"records\"]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeModuleAssets: new SyncHook([]),\n\t\t\t/** @type {SyncBailHook<[], boolean>} */\n\t\t\tshouldGenerateChunkAssets: new SyncBailHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeChunkAssets: new SyncHook([]),\n\t\t\t// TODO webpack 6 remove\n\t\t\t/** @deprecated */\n\t\t\tadditionalChunkAssets: createProcessAssetsHook(\n\t\t\t\t\"additionalChunkAssets\",\n\t\t\t\tCompilation.PROCESS_ASSETS_STAGE_ADDITIONAL,\n\t\t\t\t() => [this.chunks],\n\t\t\t\t\"DEP_WEBPACK_COMPILATION_ADDITIONAL_CHUNK_ASSETS\"\n\t\t\t),\n\n\t\t\t// TODO webpack 6 deprecate\n\t\t\t/** @deprecated */\n\t\t\tadditionalAssets: createProcessAssetsHook(\n\t\t\t\t\"additionalAssets\",\n\t\t\t\tCompilation.PROCESS_ASSETS_STAGE_ADDITIONAL,\n\t\t\t\t() => []\n\t\t\t),\n\t\t\t// TODO webpack 6 remove\n\t\t\t/** @deprecated */\n\t\t\toptimizeChunkAssets: createProcessAssetsHook(\n\t\t\t\t\"optimizeChunkAssets\",\n\t\t\t\tCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE,\n\t\t\t\t() => [this.chunks],\n\t\t\t\t\"DEP_WEBPACK_COMPILATION_OPTIMIZE_CHUNK_ASSETS\"\n\t\t\t),\n\t\t\t// TODO webpack 6 remove\n\t\t\t/** @deprecated */\n\t\t\tafterOptimizeChunkAssets: createProcessAssetsHook(\n\t\t\t\t\"afterOptimizeChunkAssets\",\n\t\t\t\tCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE + 1,\n\t\t\t\t() => [this.chunks],\n\t\t\t\t\"DEP_WEBPACK_COMPILATION_AFTER_OPTIMIZE_CHUNK_ASSETS\"\n\t\t\t),\n\t\t\t// TODO webpack 6 deprecate\n\t\t\t/** @deprecated */\n\t\t\toptimizeAssets: processAssetsHook,\n\t\t\t// TODO webpack 6 deprecate\n\t\t\t/** @deprecated */\n\t\t\tafterOptimizeAssets: afterProcessAssetsHook,\n\n\t\t\tprocessAssets: processAssetsHook,\n\t\t\tafterProcessAssets: afterProcessAssetsHook,\n\t\t\t/** @type {AsyncSeriesHook<[CompilationAssets]>} */\n\t\t\tprocessAdditionalAssets: new AsyncSeriesHook([\"assets\"]),\n\n\t\t\t/** @type {SyncBailHook<[], boolean>} */\n\t\t\tneedAdditionalSeal: new SyncBailHook([]),\n\t\t\t/** @type {AsyncSeriesHook<[]>} */\n\t\t\tafterSeal: new AsyncSeriesHook([]),\n\n\t\t\t/** @type {SyncWaterfallHook<[RenderManifestEntry[], RenderManifestOptions]>} */\n\t\t\trenderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n\n\t\t\t/** @type {SyncHook<[Hash]>} */\n\t\t\tfullHash: new SyncHook([\"hash\"]),\n\t\t\t/** @type {SyncHook<[Chunk, Hash, ChunkHashContext]>} */\n\t\t\tchunkHash: new SyncHook([\"chunk\", \"chunkHash\", \"ChunkHashContext\"]),\n\n\t\t\t/** @type {SyncHook<[Module, string]>} */\n\t\t\tmoduleAsset: new SyncHook([\"module\", \"filename\"]),\n\t\t\t/** @type {SyncHook<[Chunk, string]>} */\n\t\t\tchunkAsset: new SyncHook([\"chunk\", \"filename\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<[string, object, AssetInfo]>} */\n\t\t\tassetPath: new SyncWaterfallHook([\"path\", \"options\", \"assetInfo\"]),\n\n\t\t\t/** @type {SyncBailHook<[], boolean>} */\n\t\t\tneedAdditionalPass: new SyncBailHook([]),\n\n\t\t\t/** @type {SyncHook<[Compiler, string, number]>} */\n\t\t\tchildCompiler: new SyncHook([\n\t\t\t\t\"childCompiler\",\n\t\t\t\t\"compilerName\",\n\t\t\t\t\"compilerIndex\"\n\t\t\t]),\n\n\t\t\t/** @type {SyncBailHook<[string, LogEntry], true>} */\n\t\t\tlog: new SyncBailHook([\"origin\", \"logEntry\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<[WebpackError[]]>} */\n\t\t\tprocessWarnings: new SyncWaterfallHook([\"warnings\"]),\n\t\t\t/** @type {SyncWaterfallHook<[WebpackError[]]>} */\n\t\t\tprocessErrors: new SyncWaterfallHook([\"errors\"]),\n\n\t\t\t/** @type {HookMap<SyncHook<[Partial<NormalizedStatsOptions>, CreateStatsOptionsContext]>>} */\n\t\t\tstatsPreset: new HookMap(() => new SyncHook([\"options\", \"context\"])),\n\t\t\t/** @type {SyncHook<[Partial<NormalizedStatsOptions>, CreateStatsOptionsContext]>} */\n\t\t\tstatsNormalize: new SyncHook([\"options\", \"context\"]),\n\t\t\t/** @type {SyncHook<[StatsFactory, NormalizedStatsOptions]>} */\n\t\t\tstatsFactory: new SyncHook([\"statsFactory\", \"options\"]),\n\t\t\t/** @type {SyncHook<[StatsPrinter, NormalizedStatsOptions]>} */\n\t\t\tstatsPrinter: new SyncHook([\"statsPrinter\", \"options\"]),\n\n\t\t\tget normalModuleLoader() {\n\t\t\t\treturn getNormalModuleLoader();\n\t\t\t}\n\t\t});\n\t\t/** @type {string=} */\n\t\tthis.name = undefined;\n\t\tthis.startTime = undefined;\n\t\tthis.endTime = undefined;\n\t\t/** @type {Compiler} */\n\t\tthis.compiler = compiler;\n\t\tthis.resolverFactory = compiler.resolverFactory;\n\t\tthis.inputFileSystem = compiler.inputFileSystem;\n\t\tthis.fileSystemInfo = new FileSystemInfo(this.inputFileSystem, {\n\t\t\tmanagedPaths: compiler.managedPaths,\n\t\t\timmutablePaths: compiler.immutablePaths,\n\t\t\tlogger: this.getLogger(\"webpack.FileSystemInfo\"),\n\t\t\thashFunction: compiler.options.output.hashFunction\n\t\t});\n\t\tif (compiler.fileTimestamps) {\n\t\t\tthis.fileSystemInfo.addFileTimestamps(compiler.fileTimestamps, true);\n\t\t}\n\t\tif (compiler.contextTimestamps) {\n\t\t\tthis.fileSystemInfo.addContextTimestamps(\n\t\t\t\tcompiler.contextTimestamps,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t\t/** @type {Map<string, string | Set<string>>} */\n\t\tthis.valueCacheVersions = new Map();\n\t\tthis.requestShortener = compiler.requestShortener;\n\t\tthis.compilerPath = compiler.compilerPath;\n\n\t\tthis.logger = this.getLogger(\"webpack.Compilation\");\n\n\t\tconst options = compiler.options;\n\t\tthis.options = options;\n\t\tthis.outputOptions = options && options.output;\n\t\t/** @type {boolean} */\n\t\tthis.bail = (options && options.bail) || false;\n\t\t/** @type {boolean} */\n\t\tthis.profile = (options && options.profile) || false;\n\n\t\tthis.params = params;\n\t\tthis.mainTemplate = new MainTemplate(this.outputOptions, this);\n\t\tthis.chunkTemplate = new ChunkTemplate(this.outputOptions, this);\n\t\tthis.runtimeTemplate = new RuntimeTemplate(\n\t\t\tthis,\n\t\t\tthis.outputOptions,\n\t\t\tthis.requestShortener\n\t\t);\n\t\t/** @type {{javascript: ModuleTemplate}} */\n\t\tthis.moduleTemplates = {\n\t\t\tjavascript: new ModuleTemplate(this.runtimeTemplate, this)\n\t\t};\n\t\tdefineRemovedModuleTemplates(this.moduleTemplates);\n\n\t\t/** @type {Map<Module, WeakTupleMap<any, any>> | undefined} */\n\t\tthis.moduleMemCaches = undefined;\n\t\t/** @type {Map<Module, WeakTupleMap<any, any>> | undefined} */\n\t\tthis.moduleMemCaches2 = undefined;\n\t\tthis.moduleGraph = new ModuleGraph();\n\t\t/** @type {ChunkGraph} */\n\t\tthis.chunkGraph = undefined;\n\t\t/** @type {CodeGenerationResults} */\n\t\tthis.codeGenerationResults = undefined;\n\n\t\t/** @type {AsyncQueue<Module, Module, Module>} */\n\t\tthis.processDependenciesQueue = new AsyncQueue({\n\t\t\tname: \"processDependencies\",\n\t\t\tparallelism: options.parallelism || 100,\n\t\t\tprocessor: this._processModuleDependencies.bind(this)\n\t\t});\n\t\t/** @type {AsyncQueue<Module, string, Module>} */\n\t\tthis.addModuleQueue = new AsyncQueue({\n\t\t\tname: \"addModule\",\n\t\t\tparent: this.processDependenciesQueue,\n\t\t\tgetKey: module => module.identifier(),\n\t\t\tprocessor: this._addModule.bind(this)\n\t\t});\n\t\t/** @type {AsyncQueue<FactorizeModuleOptions, string, Module | ModuleFactoryResult>} */\n\t\tthis.factorizeQueue = new AsyncQueue({\n\t\t\tname: \"factorize\",\n\t\t\tparent: this.addModuleQueue,\n\t\t\tprocessor: this._factorizeModule.bind(this)\n\t\t});\n\t\t/** @type {AsyncQueue<Module, Module, Module>} */\n\t\tthis.buildQueue = new AsyncQueue({\n\t\t\tname: \"build\",\n\t\t\tparent: this.factorizeQueue,\n\t\t\tprocessor: this._buildModule.bind(this)\n\t\t});\n\t\t/** @type {AsyncQueue<Module, Module, Module>} */\n\t\tthis.rebuildQueue = new AsyncQueue({\n\t\t\tname: \"rebuild\",\n\t\t\tparallelism: options.parallelism || 100,\n\t\t\tprocessor: this._rebuildModule.bind(this)\n\t\t});\n\n\t\t/**\n\t\t * Modules in value are building during the build of Module in key.\n\t\t * Means value blocking key from finishing.\n\t\t * Needed to detect build cycles.\n\t\t * @type {WeakMap<Module, Set<Module>>}\n\t\t */\n\t\tthis.creatingModuleDuringBuild = new WeakMap();\n\n\t\t/** @type {Map<string, EntryData>} */\n\t\tthis.entries = new Map();\n\t\t/** @type {EntryData} */\n\t\tthis.globalEntry = {\n\t\t\tdependencies: [],\n\t\t\tincludeDependencies: [],\n\t\t\toptions: {\n\t\t\t\tname: undefined\n\t\t\t}\n\t\t};\n\t\t/** @type {Map<string, Entrypoint>} */\n\t\tthis.entrypoints = new Map();\n\t\t/** @type {Entrypoint[]} */\n\t\tthis.asyncEntrypoints = [];\n\t\t/** @type {Set<Chunk>} */\n\t\tthis.chunks = new Set();\n\t\t/** @type {ChunkGroup[]} */\n\t\tthis.chunkGroups = [];\n\t\t/** @type {Map<string, ChunkGroup>} */\n\t\tthis.namedChunkGroups = new Map();\n\t\t/** @type {Map<string, Chunk>} */\n\t\tthis.namedChunks = new Map();\n\t\t/** @type {Set<Module>} */\n\t\tthis.modules = new Set();\n\t\tif (this._backCompat) {\n\t\t\tarrayToSetDeprecation(this.chunks, \"Compilation.chunks\");\n\t\t\tarrayToSetDeprecation(this.modules, \"Compilation.modules\");\n\t\t}\n\t\t/** @private @type {Map<string, Module>} */\n\t\tthis._modules = new Map();\n\t\tthis.records = null;\n\t\t/** @type {string[]} */\n\t\tthis.additionalChunkAssets = [];\n\t\t/** @type {CompilationAssets} */\n\t\tthis.assets = {};\n\t\t/** @type {Map<string, AssetInfo>} */\n\t\tthis.assetsInfo = new Map();\n\t\t/** @type {Map<string, Map<string, Set<string>>>} */\n\t\tthis._assetsRelatedIn = new Map();\n\t\t/** @type {WebpackError[]} */\n\t\tthis.errors = [];\n\t\t/** @type {WebpackError[]} */\n\t\tthis.warnings = [];\n\t\t/** @type {Compilation[]} */\n\t\tthis.children = [];\n\t\t/** @type {Map<string, LogEntry[]>} */\n\t\tthis.logging = new Map();\n\t\t/** @type {Map<DepConstructor, ModuleFactory>} */\n\t\tthis.dependencyFactories = new Map();\n\t\t/** @type {DependencyTemplates} */\n\t\tthis.dependencyTemplates = new DependencyTemplates(\n\t\t\tthis.outputOptions.hashFunction\n\t\t);\n\t\tthis.childrenCounters = {};\n\t\t/** @type {Set<number|string>} */\n\t\tthis.usedChunkIds = null;\n\t\t/** @type {Set<number>} */\n\t\tthis.usedModuleIds = null;\n\t\t/** @type {boolean} */\n\t\tthis.needAdditionalPass = false;\n\t\t/** @type {Set<Module & { restoreFromUnsafeCache: Function }>} */\n\t\tthis._restoredUnsafeCacheModuleEntries = new Set();\n\t\t/** @type {Map<string, Module & { restoreFromUnsafeCache: Function }>} */\n\t\tthis._restoredUnsafeCacheEntries = new Map();\n\t\t/** @type {WeakSet<Module>} */\n\t\tthis.builtModules = new WeakSet();\n\t\t/** @type {WeakSet<Module>} */\n\t\tthis.codeGeneratedModules = new WeakSet();\n\t\t/** @type {WeakSet<Module>} */\n\t\tthis.buildTimeExecutedModules = new WeakSet();\n\t\t/** @private @type {Map<Module, Callback[]>} */\n\t\tthis._rebuildingModules = new Map();\n\t\t/** @type {Set<string>} */\n\t\tthis.emittedAssets = new Set();\n\t\t/** @type {Set<string>} */\n\t\tthis.comparedForEmitAssets = new Set();\n\t\t/** @type {LazySet<string>} */\n\t\tthis.fileDependencies = new LazySet();\n\t\t/** @type {LazySet<string>} */\n\t\tthis.contextDependencies = new LazySet();\n\t\t/** @type {LazySet<string>} */\n\t\tthis.missingDependencies = new LazySet();\n\t\t/** @type {LazySet<string>} */\n\t\tthis.buildDependencies = new LazySet();\n\t\t// TODO webpack 6 remove\n\t\tthis.compilationDependencies = {\n\t\t\tadd: util.deprecate(\n\t\t\t\titem => this.fileDependencies.add(item),\n\t\t\t\t\"Compilation.compilationDependencies is deprecated (used Compilation.fileDependencies instead)\",\n\t\t\t\t\"DEP_WEBPACK_COMPILATION_COMPILATION_DEPENDENCIES\"\n\t\t\t)\n\t\t};\n\n\t\tthis._modulesCache = this.getCache(\"Compilation/modules\");\n\t\tthis._assetsCache = this.getCache(\"Compilation/assets\");\n\t\tthis._codeGenerationCache = this.getCache(\"Compilation/codeGeneration\");\n\n\t\tconst unsafeCache = options.module.unsafeCache;\n\t\tthis._unsafeCache = !!unsafeCache;\n\t\tthis._unsafeCachePredicate =\n\t\t\ttypeof unsafeCache === \"function\" ? unsafeCache : () => true;\n\t}\n\n\tgetStats() {\n\t\treturn new Stats(this);\n\t}\n\n\t/**\n\t * @param {StatsOptions | string} optionsOrPreset stats option value\n\t * @param {CreateStatsOptionsContext} context context\n\t * @returns {NormalizedStatsOptions} normalized options\n\t */\n\tcreateStatsOptions(optionsOrPreset, context = {}) {\n\t\tif (\n\t\t\ttypeof optionsOrPreset === \"boolean\" ||\n\t\t\ttypeof optionsOrPreset === \"string\"\n\t\t) {\n\t\t\toptionsOrPreset = { preset: optionsOrPreset };\n\t\t}\n\t\tif (typeof optionsOrPreset === \"object\" && optionsOrPreset !== null) {\n\t\t\t// We use this method of shallow cloning this object to include\n\t\t\t// properties in the prototype chain\n\t\t\t/** @type {Partial<NormalizedStatsOptions>} */\n\t\t\tconst options = {};\n\t\t\tfor (const key in optionsOrPreset) {\n\t\t\t\toptions[key] = optionsOrPreset[key];\n\t\t\t}\n\t\t\tif (options.preset !== undefined) {\n\t\t\t\tthis.hooks.statsPreset.for(options.preset).call(options, context);\n\t\t\t}\n\t\t\tthis.hooks.statsNormalize.call(options, context);\n\t\t\treturn /** @type {NormalizedStatsOptions} */ (options);\n\t\t} else {\n\t\t\t/** @type {Partial<NormalizedStatsOptions>} */\n\t\t\tconst options = {};\n\t\t\tthis.hooks.statsNormalize.call(options, context);\n\t\t\treturn /** @type {NormalizedStatsOptions} */ (options);\n\t\t}\n\t}\n\n\tcreateStatsFactory(options) {\n\t\tconst statsFactory = new StatsFactory();\n\t\tthis.hooks.statsFactory.call(statsFactory, options);\n\t\treturn statsFactory;\n\t}\n\n\tcreateStatsPrinter(options) {\n\t\tconst statsPrinter = new StatsPrinter();\n\t\tthis.hooks.statsPrinter.call(statsPrinter, options);\n\t\treturn statsPrinter;\n\t}\n\n\t/**\n\t * @param {string} name cache name\n\t * @returns {CacheFacade} the cache facade instance\n\t */\n\tgetCache(name) {\n\t\treturn this.compiler.getCache(name);\n\t}\n\n\t/**\n\t * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n\t * @returns {Logger} a logger with that name\n\t */\n\tgetLogger(name) {\n\t\tif (!name) {\n\t\t\tthrow new TypeError(\"Compilation.getLogger(name) called without a name\");\n\t\t}\n\t\t/** @type {LogEntry[] | undefined} */\n\t\tlet logEntries;\n\t\treturn new Logger(\n\t\t\t(type, args) => {\n\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\tname = name();\n\t\t\t\t\tif (!name) {\n\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\"Compilation.getLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet trace;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase LogType.warn:\n\t\t\t\t\tcase LogType.error:\n\t\t\t\t\tcase LogType.trace:\n\t\t\t\t\t\ttrace = ErrorHelpers.cutOffLoaderExecution(new Error(\"Trace\").stack)\n\t\t\t\t\t\t\t.split(\"\\n\")\n\t\t\t\t\t\t\t.slice(3);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/** @type {LogEntry} */\n\t\t\t\tconst logEntry = {\n\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\ttype,\n\t\t\t\t\targs,\n\t\t\t\t\ttrace\n\t\t\t\t};\n\t\t\t\tif (this.hooks.log.call(name, logEntry) === undefined) {\n\t\t\t\t\tif (logEntry.type === LogType.profileEnd) {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tif (typeof console.profileEnd === \"function\") {\n\t\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\t\tconsole.profileEnd(`[${name}] ${logEntry.args[0]}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (logEntries === undefined) {\n\t\t\t\t\t\tlogEntries = this.logging.get(name);\n\t\t\t\t\t\tif (logEntries === undefined) {\n\t\t\t\t\t\t\tlogEntries = [];\n\t\t\t\t\t\t\tthis.logging.set(name, logEntries);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlogEntries.push(logEntry);\n\t\t\t\t\tif (logEntry.type === LogType.profile) {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tif (typeof console.profile === \"function\") {\n\t\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\t\tconsole.profile(`[${name}] ${logEntry.args[0]}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildName => {\n\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\tif (typeof childName === \"function\") {\n\t\t\t\t\t\treturn this.getLogger(() => {\n\t\t\t\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\t\t\t\tname = name();\n\t\t\t\t\t\t\t\tif (!name) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\t\t\t\"Compilation.getLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (typeof childName === \"function\") {\n\t\t\t\t\t\t\t\tchildName = childName();\n\t\t\t\t\t\t\t\tif (!childName) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\t\t\t\"Logger.getChildLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn `${name}/${childName}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.getLogger(() => {\n\t\t\t\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\t\t\t\tname = name();\n\t\t\t\t\t\t\t\tif (!name) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\t\t\t\"Compilation.getLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn `${name}/${childName}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof childName === \"function\") {\n\t\t\t\t\t\treturn this.getLogger(() => {\n\t\t\t\t\t\t\tif (typeof childName === \"function\") {\n\t\t\t\t\t\t\t\tchildName = childName();\n\t\t\t\t\t\t\t\tif (!childName) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\t\t\t\"Logger.getChildLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn `${name}/${childName}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.getLogger(`${name}/${childName}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module module to be added that was created\n\t * @param {ModuleCallback} callback returns the module in the compilation,\n\t * it could be the passed one (if new), or an already existing in the compilation\n\t * @returns {void}\n\t */\n\taddModule(module, callback) {\n\t\tthis.addModuleQueue.add(module, callback);\n\t}\n\n\t/**\n\t * @param {Module} module module to be added that was created\n\t * @param {ModuleCallback} callback returns the module in the compilation,\n\t * it could be the passed one (if new), or an already existing in the compilation\n\t * @returns {void}\n\t */\n\t_addModule(module, callback) {\n\t\tconst identifier = module.identifier();\n\t\tconst alreadyAddedModule = this._modules.get(identifier);\n\t\tif (alreadyAddedModule) {\n\t\t\treturn callback(null, alreadyAddedModule);\n\t\t}\n\n\t\tconst currentProfile = this.profile\n\t\t\t? this.moduleGraph.getProfile(module)\n\t\t\t: undefined;\n\t\tif (currentProfile !== undefined) {\n\t\t\tcurrentProfile.markRestoringStart();\n\t\t}\n\n\t\tthis._modulesCache.get(identifier, null, (err, cacheModule) => {\n\t\t\tif (err) return callback(new ModuleRestoreError(module, err));\n\n\t\t\tif (currentProfile !== undefined) {\n\t\t\t\tcurrentProfile.markRestoringEnd();\n\t\t\t\tcurrentProfile.markIntegrationStart();\n\t\t\t}\n\n\t\t\tif (cacheModule) {\n\t\t\t\tcacheModule.updateCacheModule(module);\n\n\t\t\t\tmodule = cacheModule;\n\t\t\t}\n\t\t\tthis._modules.set(identifier, module);\n\t\t\tthis.modules.add(module);\n\t\t\tif (this._backCompat)\n\t\t\t\tModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n\t\t\tif (currentProfile !== undefined) {\n\t\t\t\tcurrentProfile.markIntegrationEnd();\n\t\t\t}\n\t\t\tcallback(null, module);\n\t\t});\n\t}\n\n\t/**\n\t * Fetches a module from a compilation by its identifier\n\t * @param {Module} module the module provided\n\t * @returns {Module} the module requested\n\t */\n\tgetModule(module) {\n\t\tconst identifier = module.identifier();\n\t\treturn this._modules.get(identifier);\n\t}\n\n\t/**\n\t * Attempts to search for a module by its identifier\n\t * @param {string} identifier identifier (usually path) for module\n\t * @returns {Module|undefined} attempt to search for module and return it, else undefined\n\t */\n\tfindModule(identifier) {\n\t\treturn this._modules.get(identifier);\n\t}\n\n\t/**\n\t * Schedules a build of the module object\n\t *\n\t * @param {Module} module module to be built\n\t * @param {ModuleCallback} callback the callback\n\t * @returns {void}\n\t */\n\tbuildModule(module, callback) {\n\t\tthis.buildQueue.add(module, callback);\n\t}\n\n\t/**\n\t * Builds the module object\n\t *\n\t * @param {Module} module module to be built\n\t * @param {ModuleCallback} callback the callback\n\t * @returns {void}\n\t */\n\t_buildModule(module, callback) {\n\t\tconst currentProfile = this.profile\n\t\t\t? this.moduleGraph.getProfile(module)\n\t\t\t: undefined;\n\t\tif (currentProfile !== undefined) {\n\t\t\tcurrentProfile.markBuildingStart();\n\t\t}\n\n\t\tmodule.needBuild(\n\t\t\t{\n\t\t\t\tcompilation: this,\n\t\t\t\tfileSystemInfo: this.fileSystemInfo,\n\t\t\t\tvalueCacheVersions: this.valueCacheVersions\n\t\t\t},\n\t\t\t(err, needBuild) => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\tif (!needBuild) {\n\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\tcurrentProfile.markBuildingEnd();\n\t\t\t\t\t}\n\t\t\t\t\tthis.hooks.stillValidModule.call(module);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tthis.hooks.buildModule.call(module);\n\t\t\t\tthis.builtModules.add(module);\n\t\t\t\tmodule.build(\n\t\t\t\t\tthis.options,\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.resolverFactory.get(\"normal\", module.resolveOptions),\n\t\t\t\t\tthis.inputFileSystem,\n\t\t\t\t\terr => {\n\t\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\t\tcurrentProfile.markBuildingEnd();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tthis.hooks.failedModule.call(module, err);\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\t\tcurrentProfile.markStoringStart();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._modulesCache.store(module.identifier(), null, module, err => {\n\t\t\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\t\t\tcurrentProfile.markStoringEnd();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tthis.hooks.failedModule.call(module, err);\n\t\t\t\t\t\t\t\treturn callback(new ModuleStoreError(module, err));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.hooks.succeedModule.call(module);\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module to be processed for deps\n\t * @param {ModuleCallback} callback callback to be triggered\n\t * @returns {void}\n\t */\n\tprocessModuleDependencies(module, callback) {\n\t\tthis.processDependenciesQueue.add(module, callback);\n\t}\n\n\t/**\n\t * @param {Module} module to be processed for deps\n\t * @returns {void}\n\t */\n\tprocessModuleDependenciesNonRecursive(module) {\n\t\tconst processDependenciesBlock = block => {\n\t\t\tif (block.dependencies) {\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const dep of block.dependencies) {\n\t\t\t\t\tthis.moduleGraph.setParents(dep, block, module, i++);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (block.blocks) {\n\t\t\t\tfor (const b of block.blocks) processDependenciesBlock(b);\n\t\t\t}\n\t\t};\n\n\t\tprocessDependenciesBlock(module);\n\t}\n\n\t/**\n\t * @param {Module} module to be processed for deps\n\t * @param {ModuleCallback} callback callback to be triggered\n\t * @returns {void}\n\t */\n\t_processModuleDependencies(module, callback) {\n\t\t/** @type {Array<{factory: ModuleFactory, dependencies: Dependency[], originModule: Module|null}>} */\n\t\tconst sortedDependencies = [];\n\n\t\t/** @type {DependenciesBlock} */\n\t\tlet currentBlock;\n\n\t\t/** @type {Map<ModuleFactory, Map<string, Dependency[]>>} */\n\t\tlet dependencies;\n\t\t/** @type {DepConstructor} */\n\t\tlet factoryCacheKey;\n\t\t/** @type {ModuleFactory} */\n\t\tlet factoryCacheKey2;\n\t\t/** @type {Map<string, Dependency[]>} */\n\t\tlet factoryCacheValue;\n\t\t/** @type {string} */\n\t\tlet listCacheKey1;\n\t\t/** @type {string} */\n\t\tlet listCacheKey2;\n\t\t/** @type {Dependency[]} */\n\t\tlet listCacheValue;\n\n\t\tlet inProgressSorting = 1;\n\t\tlet inProgressTransitive = 1;\n\n\t\tconst onDependenciesSorted = err => {\n\t\t\tif (err) return callback(err);\n\n\t\t\t// early exit without changing parallelism back and forth\n\t\t\tif (sortedDependencies.length === 0 && inProgressTransitive === 1) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\t// This is nested so we need to allow one additional task\n\t\t\tthis.processDependenciesQueue.increaseParallelism();\n\n\t\t\tfor (const item of sortedDependencies) {\n\t\t\t\tinProgressTransitive++;\n\t\t\t\tthis.handleModuleCreation(item, err => {\n\t\t\t\t\t// In V8, the Error objects keep a reference to the functions on the stack. These warnings &\n\t\t\t\t\t// errors are created inside closures that keep a reference to the Compilation, so errors are\n\t\t\t\t\t// leaking the Compilation object.\n\t\t\t\t\tif (err && this.bail) {\n\t\t\t\t\t\tif (inProgressTransitive <= 0) return;\n\t\t\t\t\t\tinProgressTransitive = -1;\n\t\t\t\t\t\t// eslint-disable-next-line no-self-assign\n\t\t\t\t\t\terr.stack = err.stack;\n\t\t\t\t\t\tonTransitiveTasksFinished(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (--inProgressTransitive === 0) onTransitiveTasksFinished();\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (--inProgressTransitive === 0) onTransitiveTasksFinished();\n\t\t};\n\n\t\tconst onTransitiveTasksFinished = err => {\n\t\t\tif (err) return callback(err);\n\t\t\tthis.processDependenciesQueue.decreaseParallelism();\n\n\t\t\treturn callback();\n\t\t};\n\n\t\t/**\n\t\t * @param {Dependency} dep dependency\n\t\t * @param {number} index index in block\n\t\t * @returns {void}\n\t\t */\n\t\tconst processDependency = (dep, index) => {\n\t\t\tthis.moduleGraph.setParents(dep, currentBlock, module, index);\n\t\t\tif (this._unsafeCache) {\n\t\t\t\ttry {\n\t\t\t\t\tconst unsafeCachedModule = unsafeCacheDependencies.get(dep);\n\t\t\t\t\tif (unsafeCachedModule === null) return;\n\t\t\t\t\tif (unsafeCachedModule !== undefined) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis._restoredUnsafeCacheModuleEntries.has(unsafeCachedModule)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis._handleExistingModuleFromUnsafeCache(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\tunsafeCachedModule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifier = unsafeCachedModule.identifier();\n\t\t\t\t\t\tconst cachedModule =\n\t\t\t\t\t\t\tthis._restoredUnsafeCacheEntries.get(identifier);\n\t\t\t\t\t\tif (cachedModule !== undefined) {\n\t\t\t\t\t\t\t// update unsafe cache to new module\n\t\t\t\t\t\t\tunsafeCacheDependencies.set(dep, cachedModule);\n\t\t\t\t\t\t\tthis._handleExistingModuleFromUnsafeCache(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\tcachedModule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinProgressSorting++;\n\t\t\t\t\t\tthis._modulesCache.get(identifier, null, (err, cachedModule) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tif (inProgressSorting <= 0) return;\n\t\t\t\t\t\t\t\tinProgressSorting = -1;\n\t\t\t\t\t\t\t\tonDependenciesSorted(err);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!this._restoredUnsafeCacheEntries.has(identifier)) {\n\t\t\t\t\t\t\t\t\tconst data = unsafeCacheData.get(cachedModule);\n\t\t\t\t\t\t\t\t\tif (data === undefined) {\n\t\t\t\t\t\t\t\t\t\tprocessDependencyForResolving(dep);\n\t\t\t\t\t\t\t\t\t\tif (--inProgressSorting === 0) onDependenciesSorted();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (cachedModule !== unsafeCachedModule) {\n\t\t\t\t\t\t\t\t\t\tunsafeCacheDependencies.set(dep, cachedModule);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcachedModule.restoreFromUnsafeCache(\n\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t\tthis.params.normalModuleFactory,\n\t\t\t\t\t\t\t\t\t\tthis.params\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis._restoredUnsafeCacheEntries.set(\n\t\t\t\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t\t\t\t\tcachedModule\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis._restoredUnsafeCacheModuleEntries.add(cachedModule);\n\t\t\t\t\t\t\t\t\tif (!this.modules.has(cachedModule)) {\n\t\t\t\t\t\t\t\t\t\tinProgressTransitive++;\n\t\t\t\t\t\t\t\t\t\tthis._handleNewModuleFromUnsafeCache(\n\t\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\t\t\tcachedModule,\n\t\t\t\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (inProgressTransitive <= 0) return;\n\t\t\t\t\t\t\t\t\t\t\t\t\tinProgressTransitive = -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\tonTransitiveTasksFinished(err);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (--inProgressTransitive === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn onTransitiveTasksFinished();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (--inProgressSorting === 0) onDependenciesSorted();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (unsafeCachedModule !== cachedModule) {\n\t\t\t\t\t\t\t\t\tunsafeCacheDependencies.set(dep, cachedModule);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._handleExistingModuleFromUnsafeCache(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\tcachedModule\n\t\t\t\t\t\t\t\t); // a3\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (inProgressSorting <= 0) return;\n\t\t\t\t\t\t\t\tinProgressSorting = -1;\n\t\t\t\t\t\t\t\tonDependenciesSorted(err);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (--inProgressSorting === 0) onDependenciesSorted();\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprocessDependencyForResolving(dep);\n\t\t};\n\n\t\t/**\n\t\t * @param {Dependency} dep dependency\n\t\t * @returns {void}\n\t\t */\n\t\tconst processDependencyForResolving = dep => {\n\t\t\tconst resourceIdent = dep.getResourceIdentifier();\n\t\t\tif (resourceIdent !== undefined && resourceIdent !== null) {\n\t\t\t\tconst category = dep.category;\n\t\t\t\tconst constructor = /** @type {DepConstructor} */ (dep.constructor);\n\t\t\t\tif (factoryCacheKey === constructor) {\n\t\t\t\t\t// Fast path 1: same constructor as prev item\n\t\t\t\t\tif (listCacheKey1 === category && listCacheKey2 === resourceIdent) {\n\t\t\t\t\t\t// Super fast path 1: also same resource\n\t\t\t\t\t\tlistCacheValue.push(dep);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst factory = this.dependencyFactories.get(constructor);\n\t\t\t\t\tif (factory === undefined) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`No module factory available for dependency type: ${constructor.name}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (factoryCacheKey2 === factory) {\n\t\t\t\t\t\t// Fast path 2: same factory as prev item\n\t\t\t\t\t\tfactoryCacheKey = constructor;\n\t\t\t\t\t\tif (listCacheKey1 === category && listCacheKey2 === resourceIdent) {\n\t\t\t\t\t\t\t// Super fast path 2: also same resource\n\t\t\t\t\t\t\tlistCacheValue.push(dep);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Slow path\n\t\t\t\t\t\tif (factoryCacheKey2 !== undefined) {\n\t\t\t\t\t\t\t// Archive last cache entry\n\t\t\t\t\t\t\tif (dependencies === undefined) dependencies = new Map();\n\t\t\t\t\t\t\tdependencies.set(factoryCacheKey2, factoryCacheValue);\n\t\t\t\t\t\t\tfactoryCacheValue = dependencies.get(factory);\n\t\t\t\t\t\t\tif (factoryCacheValue === undefined) {\n\t\t\t\t\t\t\t\tfactoryCacheValue = new Map();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfactoryCacheValue = new Map();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfactoryCacheKey = constructor;\n\t\t\t\t\t\tfactoryCacheKey2 = factory;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Here webpack is using heuristic that assumes\n\t\t\t\t// mostly esm dependencies would be used\n\t\t\t\t// so we don't allocate extra string for them\n\t\t\t\tconst cacheKey =\n\t\t\t\t\tcategory === esmDependencyCategory\n\t\t\t\t\t\t? resourceIdent\n\t\t\t\t\t\t: `${category}${resourceIdent}`;\n\t\t\t\tlet list = factoryCacheValue.get(cacheKey);\n\t\t\t\tif (list === undefined) {\n\t\t\t\t\tfactoryCacheValue.set(cacheKey, (list = []));\n\t\t\t\t\tsortedDependencies.push({\n\t\t\t\t\t\tfactory: factoryCacheKey2,\n\t\t\t\t\t\tdependencies: list,\n\t\t\t\t\t\toriginModule: module\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tlist.push(dep);\n\t\t\t\tlistCacheKey1 = category;\n\t\t\t\tlistCacheKey2 = resourceIdent;\n\t\t\t\tlistCacheValue = list;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\t/** @type {DependenciesBlock[]} */\n\t\t\tconst queue = [module];\n\t\t\tdo {\n\t\t\t\tconst block = queue.pop();\n\t\t\t\tif (block.dependencies) {\n\t\t\t\t\tcurrentBlock = block;\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tfor (const dep of block.dependencies) processDependency(dep, i++);\n\t\t\t\t}\n\t\t\t\tif (block.blocks) {\n\t\t\t\t\tfor (const b of block.blocks) queue.push(b);\n\t\t\t\t}\n\t\t\t} while (queue.length !== 0);\n\t\t} catch (e) {\n\t\t\treturn callback(e);\n\t\t}\n\n\t\tif (--inProgressSorting === 0) onDependenciesSorted();\n\t}\n\n\t_handleNewModuleFromUnsafeCache(originModule, dependency, module, callback) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\tmoduleGraph.setResolvedModule(originModule, dependency, module);\n\n\t\tmoduleGraph.setIssuerIfUnset(\n\t\t\tmodule,\n\t\t\toriginModule !== undefined ? originModule : null\n\t\t);\n\n\t\tthis._modules.set(module.identifier(), module);\n\t\tthis.modules.add(module);\n\t\tif (this._backCompat)\n\t\t\tModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n\n\t\tthis._handleModuleBuildAndDependencies(\n\t\t\toriginModule,\n\t\t\tmodule,\n\t\t\ttrue,\n\t\t\tcallback\n\t\t);\n\t}\n\n\t_handleExistingModuleFromUnsafeCache(originModule, dependency, module) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\tmoduleGraph.setResolvedModule(originModule, dependency, module);\n\t}\n\n\t/**\n\t * @typedef {Object} HandleModuleCreationOptions\n\t * @property {ModuleFactory} factory\n\t * @property {Dependency[]} dependencies\n\t * @property {Module | null} originModule\n\t * @property {Partial<ModuleFactoryCreateDataContextInfo>=} contextInfo\n\t * @property {string=} context\n\t * @property {boolean=} recursive recurse into dependencies of the created module\n\t * @property {boolean=} connectOrigin connect the resolved module with the origin module\n\t */\n\n\t/**\n\t * @param {HandleModuleCreationOptions} options options object\n\t * @param {ModuleCallback} callback callback\n\t * @returns {void}\n\t */\n\thandleModuleCreation(\n\t\t{\n\t\t\tfactory,\n\t\t\tdependencies,\n\t\t\toriginModule,\n\t\t\tcontextInfo,\n\t\t\tcontext,\n\t\t\trecursive = true,\n\t\t\tconnectOrigin = recursive\n\t\t},\n\t\tcallback\n\t) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\tconst currentProfile = this.profile ? new ModuleProfile() : undefined;\n\n\t\tthis.factorizeModule(\n\t\t\t{\n\t\t\t\tcurrentProfile,\n\t\t\t\tfactory,\n\t\t\t\tdependencies,\n\t\t\t\tfactoryResult: true,\n\t\t\t\toriginModule,\n\t\t\t\tcontextInfo,\n\t\t\t\tcontext\n\t\t\t},\n\t\t\t(err, factoryResult) => {\n\t\t\t\tconst applyFactoryResultDependencies = () => {\n\t\t\t\t\tconst { fileDependencies, contextDependencies, missingDependencies } =\n\t\t\t\t\t\tfactoryResult;\n\t\t\t\t\tif (fileDependencies) {\n\t\t\t\t\t\tthis.fileDependencies.addAll(fileDependencies);\n\t\t\t\t\t}\n\t\t\t\t\tif (contextDependencies) {\n\t\t\t\t\t\tthis.contextDependencies.addAll(contextDependencies);\n\t\t\t\t\t}\n\t\t\t\t\tif (missingDependencies) {\n\t\t\t\t\t\tthis.missingDependencies.addAll(missingDependencies);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (err) {\n\t\t\t\t\tif (factoryResult) applyFactoryResultDependencies();\n\t\t\t\t\tif (dependencies.every(d => d.optional)) {\n\t\t\t\t\t\tthis.warnings.push(err);\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst newModule = factoryResult.module;\n\n\t\t\t\tif (!newModule) {\n\t\t\t\t\tapplyFactoryResultDependencies();\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\tmoduleGraph.setProfile(newModule, currentProfile);\n\t\t\t\t}\n\n\t\t\t\tthis.addModule(newModule, (err, module) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tapplyFactoryResultDependencies();\n\t\t\t\t\t\tif (!err.module) {\n\t\t\t\t\t\t\terr.module = module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.errors.push(err);\n\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._unsafeCache &&\n\t\t\t\t\t\tfactoryResult.cacheable !== false &&\n\t\t\t\t\t\t/** @type {any} */ (module).restoreFromUnsafeCache &&\n\t\t\t\t\t\tthis._unsafeCachePredicate(module)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst unsafeCacheableModule =\n\t\t\t\t\t\t\t/** @type {Module & { restoreFromUnsafeCache: Function }} */ (\n\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\t\t\tmoduleGraph.setResolvedModule(\n\t\t\t\t\t\t\t\tconnectOrigin ? originModule : null,\n\t\t\t\t\t\t\t\tdependency,\n\t\t\t\t\t\t\t\tunsafeCacheableModule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tunsafeCacheDependencies.set(dependency, unsafeCacheableModule);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!unsafeCacheData.has(unsafeCacheableModule)) {\n\t\t\t\t\t\t\tunsafeCacheData.set(\n\t\t\t\t\t\t\t\tunsafeCacheableModule,\n\t\t\t\t\t\t\t\tunsafeCacheableModule.getUnsafeCacheData()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tapplyFactoryResultDependencies();\n\t\t\t\t\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\t\t\tmoduleGraph.setResolvedModule(\n\t\t\t\t\t\t\t\tconnectOrigin ? originModule : null,\n\t\t\t\t\t\t\t\tdependency,\n\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tmoduleGraph.setIssuerIfUnset(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\toriginModule !== undefined ? originModule : null\n\t\t\t\t\t);\n\t\t\t\t\tif (module !== newModule) {\n\t\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\t\tconst otherProfile = moduleGraph.getProfile(module);\n\t\t\t\t\t\t\tif (otherProfile !== undefined) {\n\t\t\t\t\t\t\t\tcurrentProfile.mergeInto(otherProfile);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmoduleGraph.setProfile(module, currentProfile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleModuleBuildAndDependencies(\n\t\t\t\t\t\toriginModule,\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\trecursive,\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t_handleModuleBuildAndDependencies(originModule, module, recursive, callback) {\n\t\t// Check for cycles when build is trigger inside another build\n\t\tlet creatingModuleDuringBuildSet = undefined;\n\t\tif (!recursive && this.buildQueue.isProcessing(originModule)) {\n\t\t\t// Track build dependency\n\t\t\tcreatingModuleDuringBuildSet =\n\t\t\t\tthis.creatingModuleDuringBuild.get(originModule);\n\t\t\tif (creatingModuleDuringBuildSet === undefined) {\n\t\t\t\tcreatingModuleDuringBuildSet = new Set();\n\t\t\t\tthis.creatingModuleDuringBuild.set(\n\t\t\t\t\toriginModule,\n\t\t\t\t\tcreatingModuleDuringBuildSet\n\t\t\t\t);\n\t\t\t}\n\t\t\tcreatingModuleDuringBuildSet.add(module);\n\n\t\t\t// When building is blocked by another module\n\t\t\t// search for a cycle, cancel the cycle by throwing\n\t\t\t// an error (otherwise this would deadlock)\n\t\t\tconst blockReasons = this.creatingModuleDuringBuild.get(module);\n\t\t\tif (blockReasons !== undefined) {\n\t\t\t\tconst set = new Set(blockReasons);\n\t\t\t\tfor (const item of set) {\n\t\t\t\t\tconst blockReasons = this.creatingModuleDuringBuild.get(item);\n\t\t\t\t\tif (blockReasons !== undefined) {\n\t\t\t\t\t\tfor (const m of blockReasons) {\n\t\t\t\t\t\t\tif (m === module) {\n\t\t\t\t\t\t\t\treturn callback(new BuildCycleError(module));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tset.add(m);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.buildModule(module, err => {\n\t\t\tif (creatingModuleDuringBuildSet !== undefined) {\n\t\t\t\tcreatingModuleDuringBuildSet.delete(module);\n\t\t\t}\n\t\t\tif (err) {\n\t\t\t\tif (!err.module) {\n\t\t\t\t\terr.module = module;\n\t\t\t\t}\n\t\t\t\tthis.errors.push(err);\n\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!recursive) {\n\t\t\t\tthis.processModuleDependenciesNonRecursive(module);\n\t\t\t\tcallback(null, module);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This avoids deadlocks for circular dependencies\n\t\t\tif (this.processDependenciesQueue.isProcessing(module)) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tthis.processModuleDependencies(module, err => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tcallback(null, module);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {FactorizeModuleOptions} options options object\n\t * @param {ModuleOrFactoryResultCallback} callback callback\n\t * @returns {void}\n\t */\n\t_factorizeModule(\n\t\t{\n\t\t\tcurrentProfile,\n\t\t\tfactory,\n\t\t\tdependencies,\n\t\t\toriginModule,\n\t\t\tfactoryResult,\n\t\t\tcontextInfo,\n\t\t\tcontext\n\t\t},\n\t\tcallback\n\t) {\n\t\tif (currentProfile !== undefined) {\n\t\t\tcurrentProfile.markFactoryStart();\n\t\t}\n\t\tfactory.create(\n\t\t\t{\n\t\t\t\tcontextInfo: {\n\t\t\t\t\tissuer: originModule ? originModule.nameForCondition() : \"\",\n\t\t\t\t\tissuerLayer: originModule ? originModule.layer : null,\n\t\t\t\t\tcompiler: this.compiler.name,\n\t\t\t\t\t...contextInfo\n\t\t\t\t},\n\t\t\t\tresolveOptions: originModule ? originModule.resolveOptions : undefined,\n\t\t\t\tcontext: context\n\t\t\t\t\t? context\n\t\t\t\t\t: originModule\n\t\t\t\t\t? originModule.context\n\t\t\t\t\t: this.compiler.context,\n\t\t\t\tdependencies: dependencies\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\t// TODO webpack 6: remove\n\t\t\t\t\t// For backward-compat\n\t\t\t\t\tif (result.module === undefined && result instanceof Module) {\n\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\tmodule: result\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (!factoryResult) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tfileDependencies,\n\t\t\t\t\t\t\tcontextDependencies,\n\t\t\t\t\t\t\tmissingDependencies\n\t\t\t\t\t\t} = result;\n\t\t\t\t\t\tif (fileDependencies) {\n\t\t\t\t\t\t\tthis.fileDependencies.addAll(fileDependencies);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (contextDependencies) {\n\t\t\t\t\t\t\tthis.contextDependencies.addAll(contextDependencies);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (missingDependencies) {\n\t\t\t\t\t\t\tthis.missingDependencies.addAll(missingDependencies);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (err) {\n\t\t\t\t\tconst notFoundError = new ModuleNotFoundError(\n\t\t\t\t\t\toriginModule,\n\t\t\t\t\t\terr,\n\t\t\t\t\t\tdependencies.map(d => d.loc).filter(Boolean)[0]\n\t\t\t\t\t);\n\t\t\t\t\treturn callback(notFoundError, factoryResult ? result : undefined);\n\t\t\t\t}\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\tcurrentProfile.markFactoryEnd();\n\t\t\t\t}\n\n\t\t\t\tcallback(null, factoryResult ? result : result.module);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context string path\n\t * @param {Dependency} dependency dependency used to create Module chain\n\t * @param {ModuleCallback} callback callback for when module chain is complete\n\t * @returns {void} will throw if dependency instance is not a valid Dependency\n\t */\n\taddModuleChain(context, dependency, callback) {\n\t\treturn this.addModuleTree({ context, dependency }, callback);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.context context string path\n\t * @param {Dependency} options.dependency dependency used to create Module chain\n\t * @param {Partial<ModuleFactoryCreateDataContextInfo>=} options.contextInfo additional context info for the root module\n\t * @param {ModuleCallback} callback callback for when module chain is complete\n\t * @returns {void} will throw if dependency instance is not a valid Dependency\n\t */\n\taddModuleTree({ context, dependency, contextInfo }, callback) {\n\t\tif (\n\t\t\ttypeof dependency !== \"object\" ||\n\t\t\tdependency === null ||\n\t\t\t!dependency.constructor\n\t\t) {\n\t\t\treturn callback(\n\t\t\t\tnew WebpackError(\"Parameter 'dependency' must be a Dependency\")\n\t\t\t);\n\t\t}\n\t\tconst Dep = /** @type {DepConstructor} */ (dependency.constructor);\n\t\tconst moduleFactory = this.dependencyFactories.get(Dep);\n\t\tif (!moduleFactory) {\n\t\t\treturn callback(\n\t\t\t\tnew WebpackError(\n\t\t\t\t\t`No dependency factory available for this dependency type: ${dependency.constructor.name}`\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.handleModuleCreation(\n\t\t\t{\n\t\t\t\tfactory: moduleFactory,\n\t\t\t\tdependencies: [dependency],\n\t\t\t\toriginModule: null,\n\t\t\t\tcontextInfo,\n\t\t\t\tcontext\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (err && this.bail) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t\tthis.buildQueue.stop();\n\t\t\t\t\tthis.rebuildQueue.stop();\n\t\t\t\t\tthis.processDependenciesQueue.stop();\n\t\t\t\t\tthis.factorizeQueue.stop();\n\t\t\t\t} else if (!err && result) {\n\t\t\t\t\tcallback(null, result);\n\t\t\t\t} else {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context path for entry\n\t * @param {Dependency} entry entry dependency that should be followed\n\t * @param {string | EntryOptions} optionsOrName options or deprecated name of entry\n\t * @param {ModuleCallback} callback callback function\n\t * @returns {void} returns\n\t */\n\taddEntry(context, entry, optionsOrName, callback) {\n\t\t// TODO webpack 6 remove\n\t\tconst options =\n\t\t\ttypeof optionsOrName === \"object\"\n\t\t\t\t? optionsOrName\n\t\t\t\t: { name: optionsOrName };\n\n\t\tthis._addEntryItem(context, entry, \"dependencies\", options, callback);\n\t}\n\n\t/**\n\t * @param {string} context context path for entry\n\t * @param {Dependency} dependency dependency that should be followed\n\t * @param {EntryOptions} options options\n\t * @param {ModuleCallback} callback callback function\n\t * @returns {void} returns\n\t */\n\taddInclude(context, dependency, options, callback) {\n\t\tthis._addEntryItem(\n\t\t\tcontext,\n\t\t\tdependency,\n\t\t\t\"includeDependencies\",\n\t\t\toptions,\n\t\t\tcallback\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context path for entry\n\t * @param {Dependency} entry entry dependency that should be followed\n\t * @param {\"dependencies\" | \"includeDependencies\"} target type of entry\n\t * @param {EntryOptions} options options\n\t * @param {ModuleCallback} callback callback function\n\t * @returns {void} returns\n\t */\n\t_addEntryItem(context, entry, target, options, callback) {\n\t\tconst { name } = options;\n\t\tlet entryData =\n\t\t\tname !== undefined ? this.entries.get(name) : this.globalEntry;\n\t\tif (entryData === undefined) {\n\t\t\tentryData = {\n\t\t\t\tdependencies: [],\n\t\t\t\tincludeDependencies: [],\n\t\t\t\toptions: {\n\t\t\t\t\tname: undefined,\n\t\t\t\t\t...options\n\t\t\t\t}\n\t\t\t};\n\t\t\tentryData[target].push(entry);\n\t\t\tthis.entries.set(name, entryData);\n\t\t} else {\n\t\t\tentryData[target].push(entry);\n\t\t\tfor (const key of Object.keys(options)) {\n\t\t\t\tif (options[key] === undefined) continue;\n\t\t\t\tif (entryData.options[key] === options[key]) continue;\n\t\t\t\tif (\n\t\t\t\t\tArray.isArray(entryData.options[key]) &&\n\t\t\t\t\tArray.isArray(options[key]) &&\n\t\t\t\t\tarrayEquals(entryData.options[key], options[key])\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (entryData.options[key] === undefined) {\n\t\t\t\t\tentryData.options[key] = options[key];\n\t\t\t\t} else {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t\t`Conflicting entry option ${key} = ${entryData.options[key]} vs ${options[key]}`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.hooks.addEntry.call(entry, options);\n\n\t\tthis.addModuleTree(\n\t\t\t{\n\t\t\t\tcontext,\n\t\t\t\tdependency: entry,\n\t\t\t\tcontextInfo: entryData.options.layer\n\t\t\t\t\t? { issuerLayer: entryData.options.layer }\n\t\t\t\t\t: undefined\n\t\t\t},\n\t\t\t(err, module) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthis.hooks.failedEntry.call(entry, options, err);\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tthis.hooks.succeedEntry.call(entry, options, module);\n\t\t\t\treturn callback(null, module);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module module to be rebuilt\n\t * @param {ModuleCallback} callback callback when module finishes rebuilding\n\t * @returns {void}\n\t */\n\trebuildModule(module, callback) {\n\t\tthis.rebuildQueue.add(module, callback);\n\t}\n\n\t/**\n\t * @param {Module} module module to be rebuilt\n\t * @param {ModuleCallback} callback callback when module finishes rebuilding\n\t * @returns {void}\n\t */\n\t_rebuildModule(module, callback) {\n\t\tthis.hooks.rebuildModule.call(module);\n\t\tconst oldDependencies = module.dependencies.slice();\n\t\tconst oldBlocks = module.blocks.slice();\n\t\tmodule.invalidateBuild();\n\t\tthis.buildQueue.invalidate(module);\n\t\tthis.buildModule(module, err => {\n\t\t\tif (err) {\n\t\t\t\treturn this.hooks.finishRebuildingModule.callAsync(module, err2 => {\n\t\t\t\t\tif (err2) {\n\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\tmakeWebpackError(err2, \"Compilation.hooks.finishRebuildingModule\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallback(err);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.processDependenciesQueue.invalidate(module);\n\t\t\tthis.moduleGraph.unfreeze();\n\t\t\tthis.processModuleDependencies(module, err => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tthis.removeReasonsOfDependencyBlock(module, {\n\t\t\t\t\tdependencies: oldDependencies,\n\t\t\t\t\tblocks: oldBlocks\n\t\t\t\t});\n\t\t\t\tthis.hooks.finishRebuildingModule.callAsync(module, err2 => {\n\t\t\t\t\tif (err2) {\n\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\tmakeWebpackError(err2, \"Compilation.hooks.finishRebuildingModule\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallback(null, module);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t_computeAffectedModules(modules) {\n\t\tconst moduleMemCacheCache = this.compiler.moduleMemCaches;\n\t\tif (!moduleMemCacheCache) return;\n\t\tif (!this.moduleMemCaches) {\n\t\t\tthis.moduleMemCaches = new Map();\n\t\t\tthis.moduleGraph.setModuleMemCaches(this.moduleMemCaches);\n\t\t}\n\t\tconst { moduleGraph, moduleMemCaches } = this;\n\t\tconst affectedModules = new Set();\n\t\tconst infectedModules = new Set();\n\t\tlet statNew = 0;\n\t\tlet statChanged = 0;\n\t\tlet statUnchanged = 0;\n\t\tlet statReferencesChanged = 0;\n\t\tlet statWithoutBuild = 0;\n\n\t\tconst computeReferences = module => {\n\t\t\t/** @type {WeakMap<Dependency, Module>} */\n\t\t\tlet references = undefined;\n\t\t\tfor (const connection of moduleGraph.getOutgoingConnections(module)) {\n\t\t\t\tconst d = connection.dependency;\n\t\t\t\tconst m = connection.module;\n\t\t\t\tif (!d || !m || unsafeCacheDependencies.has(d)) continue;\n\t\t\t\tif (references === undefined) references = new WeakMap();\n\t\t\t\treferences.set(d, m);\n\t\t\t}\n\t\t\treturn references;\n\t\t};\n\n\t\t/**\n\t\t * @param {Module} module the module\n\t\t * @param {WeakMap<Dependency, Module>} references references\n\t\t * @returns {boolean} true, when the references differ\n\t\t */\n\t\tconst compareReferences = (module, references) => {\n\t\t\tif (references === undefined) return true;\n\t\t\tfor (const connection of moduleGraph.getOutgoingConnections(module)) {\n\t\t\t\tconst d = connection.dependency;\n\t\t\t\tif (!d) continue;\n\t\t\t\tconst entry = references.get(d);\n\t\t\t\tif (entry === undefined) continue;\n\t\t\t\tif (entry !== connection.module) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst modulesWithoutCache = new Set(modules);\n\t\tfor (const [module, cachedMemCache] of moduleMemCacheCache) {\n\t\t\tif (modulesWithoutCache.has(module)) {\n\t\t\t\tconst buildInfo = module.buildInfo;\n\t\t\t\tif (buildInfo) {\n\t\t\t\t\tif (cachedMemCache.buildInfo !== buildInfo) {\n\t\t\t\t\t\t// use a new one\n\t\t\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\t\t\tmoduleMemCaches.set(module, memCache);\n\t\t\t\t\t\taffectedModules.add(module);\n\t\t\t\t\t\tcachedMemCache.buildInfo = buildInfo;\n\t\t\t\t\t\tcachedMemCache.references = computeReferences(module);\n\t\t\t\t\t\tcachedMemCache.memCache = memCache;\n\t\t\t\t\t\tstatChanged++;\n\t\t\t\t\t} else if (!compareReferences(module, cachedMemCache.references)) {\n\t\t\t\t\t\t// use a new one\n\t\t\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\t\t\tmoduleMemCaches.set(module, memCache);\n\t\t\t\t\t\taffectedModules.add(module);\n\t\t\t\t\t\tcachedMemCache.references = computeReferences(module);\n\t\t\t\t\t\tcachedMemCache.memCache = memCache;\n\t\t\t\t\t\tstatReferencesChanged++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep the old mem cache\n\t\t\t\t\t\tmoduleMemCaches.set(module, cachedMemCache.memCache);\n\t\t\t\t\t\tstatUnchanged++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinfectedModules.add(module);\n\t\t\t\t\tmoduleMemCacheCache.delete(module);\n\t\t\t\t\tstatWithoutBuild++;\n\t\t\t\t}\n\t\t\t\tmodulesWithoutCache.delete(module);\n\t\t\t} else {\n\t\t\t\tmoduleMemCacheCache.delete(module);\n\t\t\t}\n\t\t}\n\n\t\tfor (const module of modulesWithoutCache) {\n\t\t\tconst buildInfo = module.buildInfo;\n\t\t\tif (buildInfo) {\n\t\t\t\t// create a new entry\n\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\tmoduleMemCacheCache.set(module, {\n\t\t\t\t\tbuildInfo,\n\t\t\t\t\treferences: computeReferences(module),\n\t\t\t\t\tmemCache\n\t\t\t\t});\n\t\t\t\tmoduleMemCaches.set(module, memCache);\n\t\t\t\taffectedModules.add(module);\n\t\t\t\tstatNew++;\n\t\t\t} else {\n\t\t\t\tinfectedModules.add(module);\n\t\t\t\tstatWithoutBuild++;\n\t\t\t}\n\t\t}\n\n\t\tconst reduceAffectType = connections => {\n\t\t\tlet affected = false;\n\t\t\tfor (const { dependency } of connections) {\n\t\t\t\tif (!dependency) continue;\n\t\t\t\tconst type = dependency.couldAffectReferencingModule();\n\t\t\t\tif (type === Dependency.TRANSITIVE) return Dependency.TRANSITIVE;\n\t\t\t\tif (type === false) continue;\n\t\t\t\taffected = true;\n\t\t\t}\n\t\t\treturn affected;\n\t\t};\n\t\tconst directOnlyInfectedModules = new Set();\n\t\tfor (const module of infectedModules) {\n\t\t\tfor (const [\n\t\t\t\treferencingModule,\n\t\t\t\tconnections\n\t\t\t] of moduleGraph.getIncomingConnectionsByOriginModule(module)) {\n\t\t\t\tif (!referencingModule) continue;\n\t\t\t\tif (infectedModules.has(referencingModule)) continue;\n\t\t\t\tconst type = reduceAffectType(connections);\n\t\t\t\tif (!type) continue;\n\t\t\t\tif (type === true) {\n\t\t\t\t\tdirectOnlyInfectedModules.add(referencingModule);\n\t\t\t\t} else {\n\t\t\t\t\tinfectedModules.add(referencingModule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (const module of directOnlyInfectedModules) infectedModules.add(module);\n\t\tconst directOnlyAffectModules = new Set();\n\t\tfor (const module of affectedModules) {\n\t\t\tfor (const [\n\t\t\t\treferencingModule,\n\t\t\t\tconnections\n\t\t\t] of moduleGraph.getIncomingConnectionsByOriginModule(module)) {\n\t\t\t\tif (!referencingModule) continue;\n\t\t\t\tif (infectedModules.has(referencingModule)) continue;\n\t\t\t\tif (affectedModules.has(referencingModule)) continue;\n\t\t\t\tconst type = reduceAffectType(connections);\n\t\t\t\tif (!type) continue;\n\t\t\t\tif (type === true) {\n\t\t\t\t\tdirectOnlyAffectModules.add(referencingModule);\n\t\t\t\t} else {\n\t\t\t\t\taffectedModules.add(referencingModule);\n\t\t\t\t}\n\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\tconst cache = moduleMemCacheCache.get(referencingModule);\n\t\t\t\tcache.memCache = memCache;\n\t\t\t\tmoduleMemCaches.set(referencingModule, memCache);\n\t\t\t}\n\t\t}\n\t\tfor (const module of directOnlyAffectModules) affectedModules.add(module);\n\t\tthis.logger.log(\n\t\t\t`${Math.round(\n\t\t\t\t(100 * (affectedModules.size + infectedModules.size)) /\n\t\t\t\t\tthis.modules.size\n\t\t\t)}% (${affectedModules.size} affected + ${\n\t\t\t\tinfectedModules.size\n\t\t\t} infected of ${\n\t\t\t\tthis.modules.size\n\t\t\t}) modules flagged as affected (${statNew} new modules, ${statChanged} changed, ${statReferencesChanged} references changed, ${statUnchanged} unchanged, ${statWithoutBuild} were not built)`\n\t\t);\n\t}\n\n\t_computeAffectedModulesWithChunkGraph() {\n\t\tconst { moduleMemCaches } = this;\n\t\tif (!moduleMemCaches) return;\n\t\tconst moduleMemCaches2 = (this.moduleMemCaches2 = new Map());\n\t\tconst { moduleGraph, chunkGraph } = this;\n\t\tconst key = \"memCache2\";\n\t\tlet statUnchanged = 0;\n\t\tlet statChanged = 0;\n\t\tlet statNew = 0;\n\t\t/**\n\t\t * @param {Module} module module\n\t\t * @returns {{ id: string | number, modules?: Map<Module, string | number | undefined>, blocks?: (string | number)[] }} references\n\t\t */\n\t\tconst computeReferences = module => {\n\t\t\tconst id = chunkGraph.getModuleId(module);\n\t\t\t/** @type {Map<Module, string | number | undefined>} */\n\t\t\tlet modules = undefined;\n\t\t\t/** @type {(string | number)[] | undefined} */\n\t\t\tlet blocks = undefined;\n\t\t\tconst outgoing = moduleGraph.getOutgoingConnectionsByModule(module);\n\t\t\tif (outgoing !== undefined) {\n\t\t\t\tfor (const m of outgoing.keys()) {\n\t\t\t\t\tif (!m) continue;\n\t\t\t\t\tif (modules === undefined) modules = new Map();\n\t\t\t\t\tmodules.set(m, chunkGraph.getModuleId(m));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.blocks.length > 0) {\n\t\t\t\tblocks = [];\n\t\t\t\tconst queue = Array.from(module.blocks);\n\t\t\t\tfor (const block of queue) {\n\t\t\t\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\t\t\t\t\tif (chunkGroup) {\n\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\tblocks.push(chunk.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblocks.push(null);\n\t\t\t\t\t}\n\t\t\t\t\tqueue.push.apply(queue, block.blocks);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { id, modules, blocks };\n\t\t};\n\t\t/**\n\t\t * @param {Module} module module\n\t\t * @param {Object} references references\n\t\t * @param {string | number} references.id id\n\t\t * @param {Map<Module, string | number>=} references.modules modules\n\t\t * @param {(string | number)[]=} references.blocks blocks\n\t\t * @returns {boolean} ok?\n\t\t */\n\t\tconst compareReferences = (module, { id, modules, blocks }) => {\n\t\t\tif (id !== chunkGraph.getModuleId(module)) return false;\n\t\t\tif (modules !== undefined) {\n\t\t\t\tfor (const [module, id] of modules) {\n\t\t\t\t\tif (chunkGraph.getModuleId(module) !== id) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (blocks !== undefined) {\n\t\t\t\tconst queue = Array.from(module.blocks);\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const block of queue) {\n\t\t\t\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\t\t\t\t\tif (chunkGroup) {\n\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\tif (i >= blocks.length || blocks[i++] !== chunk.id) return false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (i >= blocks.length || blocks[i++] !== null) return false;\n\t\t\t\t\t}\n\t\t\t\t\tqueue.push.apply(queue, block.blocks);\n\t\t\t\t}\n\t\t\t\tif (i !== blocks.length) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tfor (const [module, memCache] of moduleMemCaches) {\n\t\t\t/** @type {{ references: { id: string | number, modules?: Map<Module, string | number | undefined>, blocks?: (string | number)[]}, memCache: WeakTupleMap<any[], any> }} */\n\t\t\tconst cache = memCache.get(key);\n\t\t\tif (cache === undefined) {\n\t\t\t\tconst memCache2 = new WeakTupleMap();\n\t\t\t\tmemCache.set(key, {\n\t\t\t\t\treferences: computeReferences(module),\n\t\t\t\t\tmemCache: memCache2\n\t\t\t\t});\n\t\t\t\tmoduleMemCaches2.set(module, memCache2);\n\t\t\t\tstatNew++;\n\t\t\t} else if (!compareReferences(module, cache.references)) {\n\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\tcache.references = computeReferences(module);\n\t\t\t\tcache.memCache = memCache;\n\t\t\t\tmoduleMemCaches2.set(module, memCache);\n\t\t\t\tstatChanged++;\n\t\t\t} else {\n\t\t\t\tmoduleMemCaches2.set(module, cache.memCache);\n\t\t\t\tstatUnchanged++;\n\t\t\t}\n\t\t}\n\n\t\tthis.logger.log(\n\t\t\t`${Math.round(\n\t\t\t\t(100 * statChanged) / (statNew + statChanged + statUnchanged)\n\t\t\t)}% modules flagged as affected by chunk graph (${statNew} new modules, ${statChanged} changed, ${statUnchanged} unchanged)`\n\t\t);\n\t}\n\n\tfinish(callback) {\n\t\tthis.factorizeQueue.clear();\n\t\tif (this.profile) {\n\t\t\tthis.logger.time(\"finish module profiles\");\n\t\t\tconst ParallelismFactorCalculator = require(\"./util/ParallelismFactorCalculator\");\n\t\t\tconst p = new ParallelismFactorCalculator();\n\t\t\tconst moduleGraph = this.moduleGraph;\n\t\t\tconst modulesWithProfiles = new Map();\n\t\t\tfor (const module of this.modules) {\n\t\t\t\tconst profile = moduleGraph.getProfile(module);\n\t\t\t\tif (!profile) continue;\n\t\t\t\tmodulesWithProfiles.set(module, profile);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.buildingStartTime,\n\t\t\t\t\tprofile.buildingEndTime,\n\t\t\t\t\tf => (profile.buildingParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.factoryStartTime,\n\t\t\t\t\tprofile.factoryEndTime,\n\t\t\t\t\tf => (profile.factoryParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.integrationStartTime,\n\t\t\t\t\tprofile.integrationEndTime,\n\t\t\t\t\tf => (profile.integrationParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.storingStartTime,\n\t\t\t\t\tprofile.storingEndTime,\n\t\t\t\t\tf => (profile.storingParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.restoringStartTime,\n\t\t\t\t\tprofile.restoringEndTime,\n\t\t\t\t\tf => (profile.restoringParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tif (profile.additionalFactoryTimes) {\n\t\t\t\t\tfor (const { start, end } of profile.additionalFactoryTimes) {\n\t\t\t\t\t\tconst influence = (end - start) / profile.additionalFactories;\n\t\t\t\t\t\tp.range(\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend,\n\t\t\t\t\t\t\tf =>\n\t\t\t\t\t\t\t\t(profile.additionalFactoriesParallelismFactor += f * influence)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tp.calculate();\n\n\t\t\tconst logger = this.getLogger(\"webpack.Compilation.ModuleProfile\");\n\t\t\tconst logByValue = (value, msg) => {\n\t\t\t\tif (value > 1000) {\n\t\t\t\t\tlogger.error(msg);\n\t\t\t\t} else if (value > 500) {\n\t\t\t\t\tlogger.warn(msg);\n\t\t\t\t} else if (value > 200) {\n\t\t\t\t\tlogger.info(msg);\n\t\t\t\t} else if (value > 30) {\n\t\t\t\t\tlogger.log(msg);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.debug(msg);\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst logNormalSummary = (category, getDuration, getParallelism) => {\n\t\t\t\tlet sum = 0;\n\t\t\t\tlet max = 0;\n\t\t\t\tfor (const [module, profile] of modulesWithProfiles) {\n\t\t\t\t\tconst p = getParallelism(profile);\n\t\t\t\t\tconst d = getDuration(profile);\n\t\t\t\t\tif (d === 0 || p === 0) continue;\n\t\t\t\t\tconst t = d / p;\n\t\t\t\t\tsum += t;\n\t\t\t\t\tif (t <= 10) continue;\n\t\t\t\t\tlogByValue(\n\t\t\t\t\t\tt,\n\t\t\t\t\t\t` | ${Math.round(t)} ms${\n\t\t\t\t\t\t\tp >= 1.1 ? ` (parallelism ${Math.round(p * 10) / 10})` : \"\"\n\t\t\t\t\t\t} ${category} > ${module.readableIdentifier(this.requestShortener)}`\n\t\t\t\t\t);\n\t\t\t\t\tmax = Math.max(max, t);\n\t\t\t\t}\n\t\t\t\tif (sum <= 10) return;\n\t\t\t\tlogByValue(\n\t\t\t\t\tMath.max(sum / 10, max),\n\t\t\t\t\t`${Math.round(sum)} ms ${category}`\n\t\t\t\t);\n\t\t\t};\n\t\t\tconst logByLoadersSummary = (category, getDuration, getParallelism) => {\n\t\t\t\tconst map = new Map();\n\t\t\t\tfor (const [module, profile] of modulesWithProfiles) {\n\t\t\t\t\tconst list = provide(\n\t\t\t\t\t\tmap,\n\t\t\t\t\t\tmodule.type + \"!\" + module.identifier().replace(/(!|^)[^!]*$/, \"\"),\n\t\t\t\t\t\t() => []\n\t\t\t\t\t);\n\t\t\t\t\tlist.push({ module, profile });\n\t\t\t\t}\n\n\t\t\t\tlet sum = 0;\n\t\t\t\tlet max = 0;\n\t\t\t\tfor (const [key, modules] of map) {\n\t\t\t\t\tlet innerSum = 0;\n\t\t\t\t\tlet innerMax = 0;\n\t\t\t\t\tfor (const { module, profile } of modules) {\n\t\t\t\t\t\tconst p = getParallelism(profile);\n\t\t\t\t\t\tconst d = getDuration(profile);\n\t\t\t\t\t\tif (d === 0 || p === 0) continue;\n\t\t\t\t\t\tconst t = d / p;\n\t\t\t\t\t\tinnerSum += t;\n\t\t\t\t\t\tif (t <= 10) continue;\n\t\t\t\t\t\tlogByValue(\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\t` |  | ${Math.round(t)} ms${\n\t\t\t\t\t\t\t\tp >= 1.1 ? ` (parallelism ${Math.round(p * 10) / 10})` : \"\"\n\t\t\t\t\t\t\t} ${category} > ${module.readableIdentifier(\n\t\t\t\t\t\t\t\tthis.requestShortener\n\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tinnerMax = Math.max(innerMax, t);\n\t\t\t\t\t}\n\t\t\t\t\tsum += innerSum;\n\t\t\t\t\tif (innerSum <= 10) continue;\n\t\t\t\t\tconst idx = key.indexOf(\"!\");\n\t\t\t\t\tconst loaders = key.slice(idx + 1);\n\t\t\t\t\tconst moduleType = key.slice(0, idx);\n\t\t\t\t\tconst t = Math.max(innerSum / 10, innerMax);\n\t\t\t\t\tlogByValue(\n\t\t\t\t\t\tt,\n\t\t\t\t\t\t` | ${Math.round(innerSum)} ms ${category} > ${\n\t\t\t\t\t\t\tloaders\n\t\t\t\t\t\t\t\t? `${\n\t\t\t\t\t\t\t\t\t\tmodules.length\n\t\t\t\t\t\t\t\t  } x ${moduleType} with ${this.requestShortener.shorten(\n\t\t\t\t\t\t\t\t\t\tloaders\n\t\t\t\t\t\t\t\t  )}`\n\t\t\t\t\t\t\t\t: `${modules.length} x ${moduleType}`\n\t\t\t\t\t\t}`\n\t\t\t\t\t);\n\t\t\t\t\tmax = Math.max(max, t);\n\t\t\t\t}\n\t\t\t\tif (sum <= 10) return;\n\t\t\t\tlogByValue(\n\t\t\t\t\tMath.max(sum / 10, max),\n\t\t\t\t\t`${Math.round(sum)} ms ${category}`\n\t\t\t\t);\n\t\t\t};\n\t\t\tlogNormalSummary(\n\t\t\t\t\"resolve to new modules\",\n\t\t\t\tp => p.factory,\n\t\t\t\tp => p.factoryParallelismFactor\n\t\t\t);\n\t\t\tlogNormalSummary(\n\t\t\t\t\"resolve to existing modules\",\n\t\t\t\tp => p.additionalFactories,\n\t\t\t\tp => p.additionalFactoriesParallelismFactor\n\t\t\t);\n\t\t\tlogNormalSummary(\n\t\t\t\t\"integrate modules\",\n\t\t\t\tp => p.restoring,\n\t\t\t\tp => p.restoringParallelismFactor\n\t\t\t);\n\t\t\tlogByLoadersSummary(\n\t\t\t\t\"build modules\",\n\t\t\t\tp => p.building,\n\t\t\t\tp => p.buildingParallelismFactor\n\t\t\t);\n\t\t\tlogNormalSummary(\n\t\t\t\t\"store modules\",\n\t\t\t\tp => p.storing,\n\t\t\t\tp => p.storingParallelismFactor\n\t\t\t);\n\t\t\tlogNormalSummary(\n\t\t\t\t\"restore modules\",\n\t\t\t\tp => p.restoring,\n\t\t\t\tp => p.restoringParallelismFactor\n\t\t\t);\n\t\t\tthis.logger.timeEnd(\"finish module profiles\");\n\t\t}\n\t\tthis.logger.time(\"compute affected modules\");\n\t\tthis._computeAffectedModules(this.modules);\n\t\tthis.logger.timeEnd(\"compute affected modules\");\n\t\tthis.logger.time(\"finish modules\");\n\t\tconst { modules, moduleMemCaches } = this;\n\t\tthis.hooks.finishModules.callAsync(modules, err => {\n\t\t\tthis.logger.timeEnd(\"finish modules\");\n\t\t\tif (err) return callback(err);\n\n\t\t\t// extract warnings and errors from modules\n\t\t\tthis.moduleGraph.freeze(\"dependency errors\");\n\t\t\t// TODO keep a cacheToken (= {}) for each module in the graph\n\t\t\t// create a new one per compilation and flag all updated files\n\t\t\t// and parents with it\n\t\t\tthis.logger.time(\"report dependency errors and warnings\");\n\t\t\tfor (const module of modules) {\n\t\t\t\t// TODO only run for modules with changed cacheToken\n\t\t\t\t// global WeakMap<CacheToken, WeakSet<Module>> to keep modules without errors/warnings\n\t\t\t\tconst memCache = moduleMemCaches && moduleMemCaches.get(module);\n\t\t\t\tif (memCache && memCache.get(\"noWarningsOrErrors\")) continue;\n\t\t\t\tlet hasProblems = this.reportDependencyErrorsAndWarnings(module, [\n\t\t\t\t\tmodule\n\t\t\t\t]);\n\t\t\t\tconst errors = module.getErrors();\n\t\t\t\tif (errors !== undefined) {\n\t\t\t\t\tfor (const error of errors) {\n\t\t\t\t\t\tif (!error.module) {\n\t\t\t\t\t\t\terror.module = module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t\thasProblems = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst warnings = module.getWarnings();\n\t\t\t\tif (warnings !== undefined) {\n\t\t\t\t\tfor (const warning of warnings) {\n\t\t\t\t\t\tif (!warning.module) {\n\t\t\t\t\t\t\twarning.module = module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.warnings.push(warning);\n\t\t\t\t\t\thasProblems = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasProblems && memCache) memCache.set(\"noWarningsOrErrors\", true);\n\t\t\t}\n\t\t\tthis.moduleGraph.unfreeze();\n\t\t\tthis.logger.timeEnd(\"report dependency errors and warnings\");\n\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tunseal() {\n\t\tthis.hooks.unseal.call();\n\t\tthis.chunks.clear();\n\t\tthis.chunkGroups.length = 0;\n\t\tthis.namedChunks.clear();\n\t\tthis.namedChunkGroups.clear();\n\t\tthis.entrypoints.clear();\n\t\tthis.additionalChunkAssets.length = 0;\n\t\tthis.assets = {};\n\t\tthis.assetsInfo.clear();\n\t\tthis.moduleGraph.removeAllModuleAttributes();\n\t\tthis.moduleGraph.unfreeze();\n\t\tthis.moduleMemCaches2 = undefined;\n\t}\n\n\t/**\n\t * @param {Callback} callback signals when the call finishes\n\t * @returns {void}\n\t */\n\tseal(callback) {\n\t\tconst finalCallback = err => {\n\t\t\tthis.factorizeQueue.clear();\n\t\t\tthis.buildQueue.clear();\n\t\t\tthis.rebuildQueue.clear();\n\t\t\tthis.processDependenciesQueue.clear();\n\t\t\tthis.addModuleQueue.clear();\n\t\t\treturn callback(err);\n\t\t};\n\t\tconst chunkGraph = new ChunkGraph(\n\t\t\tthis.moduleGraph,\n\t\t\tthis.outputOptions.hashFunction\n\t\t);\n\t\tthis.chunkGraph = chunkGraph;\n\n\t\tif (this._backCompat) {\n\t\t\tfor (const module of this.modules) {\n\t\t\t\tChunkGraph.setChunkGraphForModule(module, chunkGraph);\n\t\t\t}\n\t\t}\n\n\t\tthis.hooks.seal.call();\n\n\t\tthis.logger.time(\"optimize dependencies\");\n\t\twhile (this.hooks.optimizeDependencies.call(this.modules)) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeDependencies.call(this.modules);\n\t\tthis.logger.timeEnd(\"optimize dependencies\");\n\n\t\tthis.logger.time(\"create chunks\");\n\t\tthis.hooks.beforeChunks.call();\n\t\tthis.moduleGraph.freeze(\"seal\");\n\t\t/** @type {Map<Entrypoint, Module[]>} */\n\t\tconst chunkGraphInit = new Map();\n\t\tfor (const [name, { dependencies, includeDependencies, options }] of this\n\t\t\t.entries) {\n\t\t\tconst chunk = this.addChunk(name);\n\t\t\tif (options.filename) {\n\t\t\t\tchunk.filenameTemplate = options.filename;\n\t\t\t}\n\t\t\tconst entrypoint = new Entrypoint(options);\n\t\t\tif (!options.dependOn && !options.runtime) {\n\t\t\t\tentrypoint.setRuntimeChunk(chunk);\n\t\t\t}\n\t\t\tentrypoint.setEntrypointChunk(chunk);\n\t\t\tthis.namedChunkGroups.set(name, entrypoint);\n\t\t\tthis.entrypoints.set(name, entrypoint);\n\t\t\tthis.chunkGroups.push(entrypoint);\n\t\t\tconnectChunkGroupAndChunk(entrypoint, chunk);\n\n\t\t\tconst entryModules = new Set();\n\t\t\tfor (const dep of [...this.globalEntry.dependencies, ...dependencies]) {\n\t\t\t\tentrypoint.addOrigin(null, { name }, /** @type {any} */ (dep).request);\n\n\t\t\t\tconst module = this.moduleGraph.getModule(dep);\n\t\t\t\tif (module) {\n\t\t\t\t\tchunkGraph.connectChunkAndEntryModule(chunk, module, entrypoint);\n\t\t\t\t\tentryModules.add(module);\n\t\t\t\t\tconst modulesList = chunkGraphInit.get(entrypoint);\n\t\t\t\t\tif (modulesList === undefined) {\n\t\t\t\t\t\tchunkGraphInit.set(entrypoint, [module]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodulesList.push(module);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.assignDepths(entryModules);\n\n\t\t\tconst mapAndSort = deps =>\n\t\t\t\tdeps\n\t\t\t\t\t.map(dep => this.moduleGraph.getModule(dep))\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.sort(compareModulesByIdentifier);\n\t\t\tconst includedModules = [\n\t\t\t\t...mapAndSort(this.globalEntry.includeDependencies),\n\t\t\t\t...mapAndSort(includeDependencies)\n\t\t\t];\n\n\t\t\tlet modulesList = chunkGraphInit.get(entrypoint);\n\t\t\tif (modulesList === undefined) {\n\t\t\t\tchunkGraphInit.set(entrypoint, (modulesList = []));\n\t\t\t}\n\t\t\tfor (const module of includedModules) {\n\t\t\t\tthis.assignDepth(module);\n\t\t\t\tmodulesList.push(module);\n\t\t\t}\n\t\t}\n\t\tconst runtimeChunks = new Set();\n\t\touter: for (const [\n\t\t\tname,\n\t\t\t{\n\t\t\t\toptions: { dependOn, runtime }\n\t\t\t}\n\t\t] of this.entries) {\n\t\t\tif (dependOn && runtime) {\n\t\t\t\tconst err =\n\t\t\t\t\tnew WebpackError(`Entrypoint '${name}' has 'dependOn' and 'runtime' specified. This is not valid.\nEntrypoints that depend on other entrypoints do not have their own runtime.\nThey will use the runtime(s) from referenced entrypoints instead.\nRemove the 'runtime' option from the entrypoint.`);\n\t\t\t\tconst entry = this.entrypoints.get(name);\n\t\t\t\terr.chunk = entry.getEntrypointChunk();\n\t\t\t\tthis.errors.push(err);\n\t\t\t}\n\t\t\tif (dependOn) {\n\t\t\t\tconst entry = this.entrypoints.get(name);\n\t\t\t\tconst referencedChunks = entry\n\t\t\t\t\t.getEntrypointChunk()\n\t\t\t\t\t.getAllReferencedChunks();\n\t\t\t\tconst dependOnEntries = [];\n\t\t\t\tfor (const dep of dependOn) {\n\t\t\t\t\tconst dependency = this.entrypoints.get(dep);\n\t\t\t\t\tif (!dependency) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Entry ${name} depends on ${dep}, but this entry was not found`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (referencedChunks.has(dependency.getEntrypointChunk())) {\n\t\t\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\t\t`Entrypoints '${name}' and '${dep}' use 'dependOn' to depend on each other in a circular way.`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst entryChunk = entry.getEntrypointChunk();\n\t\t\t\t\t\terr.chunk = entryChunk;\n\t\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\t\tentry.setRuntimeChunk(entryChunk);\n\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t}\n\t\t\t\t\tdependOnEntries.push(dependency);\n\t\t\t\t}\n\t\t\t\tfor (const dependency of dependOnEntries) {\n\t\t\t\t\tconnectChunkGroupParentAndChild(dependency, entry);\n\t\t\t\t}\n\t\t\t} else if (runtime) {\n\t\t\t\tconst entry = this.entrypoints.get(name);\n\t\t\t\tlet chunk = this.namedChunks.get(runtime);\n\t\t\t\tif (chunk) {\n\t\t\t\t\tif (!runtimeChunks.has(chunk)) {\n\t\t\t\t\t\tconst err =\n\t\t\t\t\t\t\tnew WebpackError(`Entrypoint '${name}' has a 'runtime' option which points to another entrypoint named '${runtime}'.\nIt's not valid to use other entrypoints as runtime chunk.\nDid you mean to use 'dependOn: ${JSON.stringify(\n\t\t\t\t\t\t\t\truntime\n\t\t\t\t\t\t\t)}' instead to allow using entrypoint '${name}' within the runtime of entrypoint '${runtime}'? For this '${runtime}' must always be loaded when '${name}' is used.\nOr do you want to use the entrypoints '${name}' and '${runtime}' independently on the same page with a shared runtime? In this case give them both the same value for the 'runtime' option. It must be a name not already used by an entrypoint.`);\n\t\t\t\t\t\tconst entryChunk = entry.getEntrypointChunk();\n\t\t\t\t\t\terr.chunk = entryChunk;\n\t\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\t\tentry.setRuntimeChunk(entryChunk);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunk = this.addChunk(runtime);\n\t\t\t\t\tchunk.preventIntegration = true;\n\t\t\t\t\truntimeChunks.add(chunk);\n\t\t\t\t}\n\t\t\t\tentry.unshiftChunk(chunk);\n\t\t\t\tchunk.addGroup(entry);\n\t\t\t\tentry.setRuntimeChunk(chunk);\n\t\t\t}\n\t\t}\n\t\tbuildChunkGraph(this, chunkGraphInit);\n\t\tthis.hooks.afterChunks.call(this.chunks);\n\t\tthis.logger.timeEnd(\"create chunks\");\n\n\t\tthis.logger.time(\"optimize\");\n\t\tthis.hooks.optimize.call();\n\n\t\twhile (this.hooks.optimizeModules.call(this.modules)) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeModules.call(this.modules);\n\n\t\twhile (this.hooks.optimizeChunks.call(this.chunks, this.chunkGroups)) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeChunks.call(this.chunks, this.chunkGroups);\n\n\t\tthis.hooks.optimizeTree.callAsync(this.chunks, this.modules, err => {\n\t\t\tif (err) {\n\t\t\t\treturn finalCallback(\n\t\t\t\t\tmakeWebpackError(err, \"Compilation.hooks.optimizeTree\")\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.hooks.afterOptimizeTree.call(this.chunks, this.modules);\n\n\t\t\tthis.hooks.optimizeChunkModules.callAsync(\n\t\t\t\tthis.chunks,\n\t\t\t\tthis.modules,\n\t\t\t\terr => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn finalCallback(\n\t\t\t\t\t\t\tmakeWebpackError(err, \"Compilation.hooks.optimizeChunkModules\")\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hooks.afterOptimizeChunkModules.call(this.chunks, this.modules);\n\n\t\t\t\t\tconst shouldRecord = this.hooks.shouldRecord.call() !== false;\n\n\t\t\t\t\tthis.hooks.reviveModules.call(this.modules, this.records);\n\t\t\t\t\tthis.hooks.beforeModuleIds.call(this.modules);\n\t\t\t\t\tthis.hooks.moduleIds.call(this.modules);\n\t\t\t\t\tthis.hooks.optimizeModuleIds.call(this.modules);\n\t\t\t\t\tthis.hooks.afterOptimizeModuleIds.call(this.modules);\n\n\t\t\t\t\tthis.hooks.reviveChunks.call(this.chunks, this.records);\n\t\t\t\t\tthis.hooks.beforeChunkIds.call(this.chunks);\n\t\t\t\t\tthis.hooks.chunkIds.call(this.chunks);\n\t\t\t\t\tthis.hooks.optimizeChunkIds.call(this.chunks);\n\t\t\t\t\tthis.hooks.afterOptimizeChunkIds.call(this.chunks);\n\n\t\t\t\t\tthis.assignRuntimeIds();\n\n\t\t\t\t\tthis.logger.time(\"compute affected modules with chunk graph\");\n\t\t\t\t\tthis._computeAffectedModulesWithChunkGraph();\n\t\t\t\t\tthis.logger.timeEnd(\"compute affected modules with chunk graph\");\n\n\t\t\t\t\tthis.sortItemsWithChunkIds();\n\n\t\t\t\t\tif (shouldRecord) {\n\t\t\t\t\t\tthis.hooks.recordModules.call(this.modules, this.records);\n\t\t\t\t\t\tthis.hooks.recordChunks.call(this.chunks, this.records);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hooks.optimizeCodeGeneration.call(this.modules);\n\t\t\t\t\tthis.logger.timeEnd(\"optimize\");\n\n\t\t\t\t\tthis.logger.time(\"module hashing\");\n\t\t\t\t\tthis.hooks.beforeModuleHash.call();\n\t\t\t\t\tthis.createModuleHashes();\n\t\t\t\t\tthis.hooks.afterModuleHash.call();\n\t\t\t\t\tthis.logger.timeEnd(\"module hashing\");\n\n\t\t\t\t\tthis.logger.time(\"code generation\");\n\t\t\t\t\tthis.hooks.beforeCodeGeneration.call();\n\t\t\t\t\tthis.codeGeneration(err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn finalCallback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.hooks.afterCodeGeneration.call();\n\t\t\t\t\t\tthis.logger.timeEnd(\"code generation\");\n\n\t\t\t\t\t\tthis.logger.time(\"runtime requirements\");\n\t\t\t\t\t\tthis.hooks.beforeRuntimeRequirements.call();\n\t\t\t\t\t\tthis.processRuntimeRequirements();\n\t\t\t\t\t\tthis.hooks.afterRuntimeRequirements.call();\n\t\t\t\t\t\tthis.logger.timeEnd(\"runtime requirements\");\n\n\t\t\t\t\t\tthis.logger.time(\"hashing\");\n\t\t\t\t\t\tthis.hooks.beforeHash.call();\n\t\t\t\t\t\tconst codeGenerationJobs = this.createHash();\n\t\t\t\t\t\tthis.hooks.afterHash.call();\n\t\t\t\t\t\tthis.logger.timeEnd(\"hashing\");\n\n\t\t\t\t\t\tthis._runCodeGenerationJobs(codeGenerationJobs, err => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn finalCallback(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (shouldRecord) {\n\t\t\t\t\t\t\t\tthis.logger.time(\"record hash\");\n\t\t\t\t\t\t\t\tthis.hooks.recordHash.call(this.records);\n\t\t\t\t\t\t\t\tthis.logger.timeEnd(\"record hash\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.logger.time(\"module assets\");\n\t\t\t\t\t\t\tthis.clearAssets();\n\n\t\t\t\t\t\t\tthis.hooks.beforeModuleAssets.call();\n\t\t\t\t\t\t\tthis.createModuleAssets();\n\t\t\t\t\t\t\tthis.logger.timeEnd(\"module assets\");\n\n\t\t\t\t\t\t\tconst cont = () => {\n\t\t\t\t\t\t\t\tthis.logger.time(\"process assets\");\n\t\t\t\t\t\t\t\tthis.hooks.processAssets.callAsync(this.assets, err => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn finalCallback(\n\t\t\t\t\t\t\t\t\t\t\tmakeWebpackError(err, \"Compilation.hooks.processAssets\")\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.hooks.afterProcessAssets.call(this.assets);\n\t\t\t\t\t\t\t\t\tthis.logger.timeEnd(\"process assets\");\n\t\t\t\t\t\t\t\t\tthis.assets = this._backCompat\n\t\t\t\t\t\t\t\t\t\t? soonFrozenObjectDeprecation(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.assets,\n\t\t\t\t\t\t\t\t\t\t\t\t\"Compilation.assets\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"DEP_WEBPACK_COMPILATION_ASSETS\",\n\t\t\t\t\t\t\t\t\t\t\t\t`BREAKING CHANGE: No more changes should happen to Compilation.assets after sealing the Compilation.\n\tDo changes to assets earlier, e. g. in Compilation.hooks.processAssets.\n\tMake sure to select an appropriate stage from Compilation.PROCESS_ASSETS_STAGE_*.`\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: Object.freeze(this.assets);\n\n\t\t\t\t\t\t\t\t\tthis.summarizeDependencies();\n\t\t\t\t\t\t\t\t\tif (shouldRecord) {\n\t\t\t\t\t\t\t\t\t\tthis.hooks.record.call(this, this.records);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (this.hooks.needAdditionalSeal.call()) {\n\t\t\t\t\t\t\t\t\t\tthis.unseal();\n\t\t\t\t\t\t\t\t\t\treturn this.seal(callback);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn this.hooks.afterSeal.callAsync(err => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\treturn finalCallback(\n\t\t\t\t\t\t\t\t\t\t\t\tmakeWebpackError(err, \"Compilation.hooks.afterSeal\")\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tthis.fileSystemInfo.logStatistics();\n\t\t\t\t\t\t\t\t\t\tfinalCallback();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis.logger.time(\"create chunk assets\");\n\t\t\t\t\t\t\tif (this.hooks.shouldGenerateChunkAssets.call() !== false) {\n\t\t\t\t\t\t\t\tthis.hooks.beforeChunkAssets.call();\n\t\t\t\t\t\t\t\tthis.createChunkAssets(err => {\n\t\t\t\t\t\t\t\t\tthis.logger.timeEnd(\"create chunk assets\");\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn finalCallback(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcont();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.logger.timeEnd(\"create chunk assets\");\n\t\t\t\t\t\t\t\tcont();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * @param {Module} module module to report from\n\t * @param {DependenciesBlock[]} blocks blocks to report from\n\t * @returns {boolean} true, when it has warnings or errors\n\t */\n\treportDependencyErrorsAndWarnings(module, blocks) {\n\t\tlet hasProblems = false;\n\t\tfor (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n\t\t\tconst block = blocks[indexBlock];\n\t\t\tconst dependencies = block.dependencies;\n\n\t\t\tfor (let indexDep = 0; indexDep < dependencies.length; indexDep++) {\n\t\t\t\tconst d = dependencies[indexDep];\n\n\t\t\t\tconst warnings = d.getWarnings(this.moduleGraph);\n\t\t\t\tif (warnings) {\n\t\t\t\t\tfor (let indexWar = 0; indexWar < warnings.length; indexWar++) {\n\t\t\t\t\t\tconst w = warnings[indexWar];\n\n\t\t\t\t\t\tconst warning = new ModuleDependencyWarning(module, w, d.loc);\n\t\t\t\t\t\tthis.warnings.push(warning);\n\t\t\t\t\t\thasProblems = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst errors = d.getErrors(this.moduleGraph);\n\t\t\t\tif (errors) {\n\t\t\t\t\tfor (let indexErr = 0; indexErr < errors.length; indexErr++) {\n\t\t\t\t\t\tconst e = errors[indexErr];\n\n\t\t\t\t\t\tconst error = new ModuleDependencyError(module, e, d.loc);\n\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t\thasProblems = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.reportDependencyErrorsAndWarnings(module, block.blocks))\n\t\t\t\thasProblems = true;\n\t\t}\n\t\treturn hasProblems;\n\t}\n\n\tcodeGeneration(callback) {\n\t\tconst { chunkGraph } = this;\n\t\tthis.codeGenerationResults = new CodeGenerationResults(\n\t\t\tthis.outputOptions.hashFunction\n\t\t);\n\t\t/** @type {{module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}[]} */\n\t\tconst jobs = [];\n\t\tfor (const module of this.modules) {\n\t\t\tconst runtimes = chunkGraph.getModuleRuntimes(module);\n\t\t\tif (runtimes.size === 1) {\n\t\t\t\tfor (const runtime of runtimes) {\n\t\t\t\t\tconst hash = chunkGraph.getModuleHash(module, runtime);\n\t\t\t\t\tjobs.push({ module, hash, runtime, runtimes: [runtime] });\n\t\t\t\t}\n\t\t\t} else if (runtimes.size > 1) {\n\t\t\t\t/** @type {Map<string, { runtimes: RuntimeSpec[] }>} */\n\t\t\t\tconst map = new Map();\n\t\t\t\tfor (const runtime of runtimes) {\n\t\t\t\t\tconst hash = chunkGraph.getModuleHash(module, runtime);\n\t\t\t\t\tconst job = map.get(hash);\n\t\t\t\t\tif (job === undefined) {\n\t\t\t\t\t\tconst newJob = { module, hash, runtime, runtimes: [runtime] };\n\t\t\t\t\t\tjobs.push(newJob);\n\t\t\t\t\t\tmap.set(hash, newJob);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjob.runtimes.push(runtime);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._runCodeGenerationJobs(jobs, callback);\n\t}\n\n\t_runCodeGenerationJobs(jobs, callback) {\n\t\tlet statModulesFromCache = 0;\n\t\tlet statModulesGenerated = 0;\n\t\tconst { chunkGraph, moduleGraph, dependencyTemplates, runtimeTemplate } =\n\t\t\tthis;\n\t\tconst results = this.codeGenerationResults;\n\t\tconst errors = [];\n\t\t/** @type {Set<Module> | undefined} */\n\t\tlet notCodeGeneratedModules = undefined;\n\t\tconst runIteration = () => {\n\t\t\tlet delayedJobs = [];\n\t\t\tlet delayedModules = new Set();\n\t\t\tasyncLib.eachLimit(\n\t\t\t\tjobs,\n\t\t\t\tthis.options.parallelism,\n\t\t\t\t(job, callback) => {\n\t\t\t\t\tconst { module } = job;\n\t\t\t\t\tconst { codeGenerationDependencies } = module;\n\t\t\t\t\tif (codeGenerationDependencies !== undefined) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tnotCodeGeneratedModules === undefined ||\n\t\t\t\t\t\t\tcodeGenerationDependencies.some(dep => {\n\t\t\t\t\t\t\t\tconst referencedModule = moduleGraph.getModule(dep);\n\t\t\t\t\t\t\t\treturn notCodeGeneratedModules.has(referencedModule);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdelayedJobs.push(job);\n\t\t\t\t\t\t\tdelayedModules.add(module);\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst { hash, runtime, runtimes } = job;\n\t\t\t\t\tthis._codeGenerationModule(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\truntimes,\n\t\t\t\t\t\thash,\n\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\tresults,\n\t\t\t\t\t\t(err, codeGenerated) => {\n\t\t\t\t\t\t\tif (codeGenerated) statModulesGenerated++;\n\t\t\t\t\t\t\telse statModulesFromCache++;\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (delayedJobs.length > 0) {\n\t\t\t\t\t\tif (delayedJobs.length === jobs.length) {\n\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`Unable to make progress during code generation because of circular code generation dependency: ${Array.from(\n\t\t\t\t\t\t\t\t\t\tdelayedModules,\n\t\t\t\t\t\t\t\t\t\tm => m.identifier()\n\t\t\t\t\t\t\t\t\t).join(\", \")}`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjobs = delayedJobs;\n\t\t\t\t\t\tdelayedJobs = [];\n\t\t\t\t\t\tnotCodeGeneratedModules = delayedModules;\n\t\t\t\t\t\tdelayedModules = new Set();\n\t\t\t\t\t\treturn runIteration();\n\t\t\t\t\t}\n\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\terrors.sort(\n\t\t\t\t\t\t\tcompareSelect(err => err.module, compareModulesByIdentifier)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const error of errors) {\n\t\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.logger.log(\n\t\t\t\t\t\t`${Math.round(\n\t\t\t\t\t\t\t(100 * statModulesGenerated) /\n\t\t\t\t\t\t\t\t(statModulesGenerated + statModulesFromCache)\n\t\t\t\t\t\t)}% code generated (${statModulesGenerated} generated, ${statModulesFromCache} from cache)`\n\t\t\t\t\t);\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\trunIteration();\n\t}\n\n\t/**\n\t * @param {Module} module module\n\t * @param {RuntimeSpec} runtime runtime\n\t * @param {RuntimeSpec[]} runtimes runtimes\n\t * @param {string} hash hash\n\t * @param {DependencyTemplates} dependencyTemplates dependencyTemplates\n\t * @param {ChunkGraph} chunkGraph chunkGraph\n\t * @param {ModuleGraph} moduleGraph moduleGraph\n\t * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate\n\t * @param {WebpackError[]} errors errors\n\t * @param {CodeGenerationResults} results results\n\t * @param {function(WebpackError=, boolean=): void} callback callback\n\t */\n\t_codeGenerationModule(\n\t\tmodule,\n\t\truntime,\n\t\truntimes,\n\t\thash,\n\t\tdependencyTemplates,\n\t\tchunkGraph,\n\t\tmoduleGraph,\n\t\truntimeTemplate,\n\t\terrors,\n\t\tresults,\n\t\tcallback\n\t) {\n\t\tlet codeGenerated = false;\n\t\tconst cache = new MultiItemCache(\n\t\t\truntimes.map(runtime =>\n\t\t\t\tthis._codeGenerationCache.getItemCache(\n\t\t\t\t\t`${module.identifier()}|${getRuntimeKey(runtime)}`,\n\t\t\t\t\t`${hash}|${dependencyTemplates.getHash()}`\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tcache.get((err, cachedResult) => {\n\t\t\tif (err) return callback(err);\n\t\t\tlet result;\n\t\t\tif (!cachedResult) {\n\t\t\t\ttry {\n\t\t\t\t\tcodeGenerated = true;\n\t\t\t\t\tthis.codeGeneratedModules.add(module);\n\t\t\t\t\tresult = module.codeGeneration({\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\tcodeGenerationResults: results\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\terrors.push(new CodeGenerationError(module, err));\n\t\t\t\t\tresult = cachedResult = {\n\t\t\t\t\t\tsources: new Map(),\n\t\t\t\t\t\truntimeRequirements: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = cachedResult;\n\t\t\t}\n\t\t\tfor (const runtime of runtimes) {\n\t\t\t\tresults.add(module, runtime, result);\n\t\t\t}\n\t\t\tif (!cachedResult) {\n\t\t\t\tcache.store(result, err => callback(err, codeGenerated));\n\t\t\t} else {\n\t\t\t\tcallback(null, codeGenerated);\n\t\t\t}\n\t\t});\n\t}\n\n\t_getChunkGraphEntries() {\n\t\t/** @type {Set<Chunk>} */\n\t\tconst treeEntries = new Set();\n\t\tfor (const ep of this.entrypoints.values()) {\n\t\t\tconst chunk = ep.getRuntimeChunk();\n\t\t\tif (chunk) treeEntries.add(chunk);\n\t\t}\n\t\tfor (const ep of this.asyncEntrypoints) {\n\t\t\tconst chunk = ep.getRuntimeChunk();\n\t\t\tif (chunk) treeEntries.add(chunk);\n\t\t}\n\t\treturn treeEntries;\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {ChunkGraph=} options.chunkGraph the chunk graph\n\t * @param {Iterable<Module>=} options.modules modules\n\t * @param {Iterable<Chunk>=} options.chunks chunks\n\t * @param {CodeGenerationResults=} options.codeGenerationResults codeGenerationResults\n\t * @param {Iterable<Chunk>=} options.chunkGraphEntries chunkGraphEntries\n\t * @returns {void}\n\t */\n\tprocessRuntimeRequirements({\n\t\tchunkGraph = this.chunkGraph,\n\t\tmodules = this.modules,\n\t\tchunks = this.chunks,\n\t\tcodeGenerationResults = this.codeGenerationResults,\n\t\tchunkGraphEntries = this._getChunkGraphEntries()\n\t} = {}) {\n\t\tconst context = { chunkGraph, codeGenerationResults };\n\t\tconst { moduleMemCaches2 } = this;\n\t\tthis.logger.time(\"runtime requirements.modules\");\n\t\tconst additionalModuleRuntimeRequirements =\n\t\t\tthis.hooks.additionalModuleRuntimeRequirements;\n\t\tconst runtimeRequirementInModule = this.hooks.runtimeRequirementInModule;\n\t\tfor (const module of modules) {\n\t\t\tif (chunkGraph.getNumberOfModuleChunks(module) > 0) {\n\t\t\t\tconst memCache = moduleMemCaches2 && moduleMemCaches2.get(module);\n\t\t\t\tfor (const runtime of chunkGraph.getModuleRuntimes(module)) {\n\t\t\t\t\tif (memCache) {\n\t\t\t\t\t\tconst cached = memCache.get(\n\t\t\t\t\t\t\t`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (cached !== undefined) {\n\t\t\t\t\t\t\tif (cached !== null) {\n\t\t\t\t\t\t\t\tchunkGraph.addModuleRuntimeRequirements(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\t\tcached,\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet set;\n\t\t\t\t\tconst runtimeRequirements =\n\t\t\t\t\t\tcodeGenerationResults.getRuntimeRequirements(module, runtime);\n\t\t\t\t\tif (runtimeRequirements && runtimeRequirements.size > 0) {\n\t\t\t\t\t\tset = new Set(runtimeRequirements);\n\t\t\t\t\t} else if (additionalModuleRuntimeRequirements.isUsed()) {\n\t\t\t\t\t\tset = new Set();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (memCache) {\n\t\t\t\t\t\t\tmemCache.set(\n\t\t\t\t\t\t\t\t`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tadditionalModuleRuntimeRequirements.call(module, set, context);\n\n\t\t\t\t\tfor (const r of set) {\n\t\t\t\t\t\tconst hook = runtimeRequirementInModule.get(r);\n\t\t\t\t\t\tif (hook !== undefined) hook.call(module, set, context);\n\t\t\t\t\t}\n\t\t\t\t\tif (set.size === 0) {\n\t\t\t\t\t\tif (memCache) {\n\t\t\t\t\t\t\tmemCache.set(\n\t\t\t\t\t\t\t\t`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (memCache) {\n\t\t\t\t\t\t\tmemCache.set(\n\t\t\t\t\t\t\t\t`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`,\n\t\t\t\t\t\t\t\tset\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tchunkGraph.addModuleRuntimeRequirements(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\tset,\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunkGraph.addModuleRuntimeRequirements(module, runtime, set);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.logger.timeEnd(\"runtime requirements.modules\");\n\n\t\tthis.logger.time(\"runtime requirements.chunks\");\n\t\tfor (const chunk of chunks) {\n\t\t\tconst set = new Set();\n\t\t\tfor (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n\t\t\t\tconst runtimeRequirements = chunkGraph.getModuleRuntimeRequirements(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunk.runtime\n\t\t\t\t);\n\t\t\t\tfor (const r of runtimeRequirements) set.add(r);\n\t\t\t}\n\t\t\tthis.hooks.additionalChunkRuntimeRequirements.call(chunk, set, context);\n\n\t\t\tfor (const r of set) {\n\t\t\t\tthis.hooks.runtimeRequirementInChunk.for(r).call(chunk, set, context);\n\t\t\t}\n\n\t\t\tchunkGraph.addChunkRuntimeRequirements(chunk, set);\n\t\t}\n\t\tthis.logger.timeEnd(\"runtime requirements.chunks\");\n\n\t\tthis.logger.time(\"runtime requirements.entries\");\n\t\tfor (const treeEntry of chunkGraphEntries) {\n\t\t\tconst set = new Set();\n\t\t\tfor (const chunk of treeEntry.getAllReferencedChunks()) {\n\t\t\t\tconst runtimeRequirements =\n\t\t\t\t\tchunkGraph.getChunkRuntimeRequirements(chunk);\n\t\t\t\tfor (const r of runtimeRequirements) set.add(r);\n\t\t\t}\n\n\t\t\tthis.hooks.additionalTreeRuntimeRequirements.call(\n\t\t\t\ttreeEntry,\n\t\t\t\tset,\n\t\t\t\tcontext\n\t\t\t);\n\n\t\t\tfor (const r of set) {\n\t\t\t\tthis.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(r)\n\t\t\t\t\t.call(treeEntry, set, context);\n\t\t\t}\n\n\t\t\tchunkGraph.addTreeRuntimeRequirements(treeEntry, set);\n\t\t}\n\t\tthis.logger.timeEnd(\"runtime requirements.entries\");\n\t}\n\n\t// TODO webpack 6 make chunkGraph argument non-optional\n\t/**\n\t * @param {Chunk} chunk target chunk\n\t * @param {RuntimeModule} module runtime module\n\t * @param {ChunkGraph} chunkGraph the chunk graph\n\t * @returns {void}\n\t */\n\taddRuntimeModule(chunk, module, chunkGraph = this.chunkGraph) {\n\t\t// Deprecated ModuleGraph association\n\t\tif (this._backCompat)\n\t\t\tModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n\n\t\t// add it to the list\n\t\tthis.modules.add(module);\n\t\tthis._modules.set(module.identifier(), module);\n\n\t\t// connect to the chunk graph\n\t\tchunkGraph.connectChunkAndModule(chunk, module);\n\t\tchunkGraph.connectChunkAndRuntimeModule(chunk, module);\n\t\tif (module.fullHash) {\n\t\t\tchunkGraph.addFullHashModuleToChunk(chunk, module);\n\t\t} else if (module.dependentHash) {\n\t\t\tchunkGraph.addDependentHashModuleToChunk(chunk, module);\n\t\t}\n\n\t\t// attach runtime module\n\t\tmodule.attach(this, chunk, chunkGraph);\n\n\t\t// Setup internals\n\t\tconst exportsInfo = this.moduleGraph.getExportsInfo(module);\n\t\texportsInfo.setHasProvideInfo();\n\t\tif (typeof chunk.runtime === \"string\") {\n\t\t\texportsInfo.setUsedForSideEffectsOnly(chunk.runtime);\n\t\t} else if (chunk.runtime === undefined) {\n\t\t\texportsInfo.setUsedForSideEffectsOnly(undefined);\n\t\t} else {\n\t\t\tfor (const runtime of chunk.runtime) {\n\t\t\t\texportsInfo.setUsedForSideEffectsOnly(runtime);\n\t\t\t}\n\t\t}\n\t\tchunkGraph.addModuleRuntimeRequirements(\n\t\t\tmodule,\n\t\t\tchunk.runtime,\n\t\t\tnew Set([RuntimeGlobals.requireScope])\n\t\t);\n\n\t\t// runtime modules don't need ids\n\t\tchunkGraph.setModuleId(module, \"\");\n\n\t\t// Call hook\n\t\tthis.hooks.runtimeModule.call(module, chunk);\n\t}\n\n\t/**\n\t * If `module` is passed, `loc` and `request` must also be passed.\n\t * @param {string | ChunkGroupOptions} groupOptions options for the chunk group\n\t * @param {Module=} module the module the references the chunk group\n\t * @param {DependencyLocation=} loc the location from with the chunk group is referenced (inside of module)\n\t * @param {string=} request the request from which the the chunk group is referenced\n\t * @returns {ChunkGroup} the new or existing chunk group\n\t */\n\taddChunkInGroup(groupOptions, module, loc, request) {\n\t\tif (typeof groupOptions === \"string\") {\n\t\t\tgroupOptions = { name: groupOptions };\n\t\t}\n\t\tconst name = groupOptions.name;\n\n\t\tif (name) {\n\t\t\tconst chunkGroup = this.namedChunkGroups.get(name);\n\t\t\tif (chunkGroup !== undefined) {\n\t\t\t\tchunkGroup.addOptions(groupOptions);\n\t\t\t\tif (module) {\n\t\t\t\t\tchunkGroup.addOrigin(module, loc, request);\n\t\t\t\t}\n\t\t\t\treturn chunkGroup;\n\t\t\t}\n\t\t}\n\t\tconst chunkGroup = new ChunkGroup(groupOptions);\n\t\tif (module) chunkGroup.addOrigin(module, loc, request);\n\t\tconst chunk = this.addChunk(name);\n\n\t\tconnectChunkGroupAndChunk(chunkGroup, chunk);\n\n\t\tthis.chunkGroups.push(chunkGroup);\n\t\tif (name) {\n\t\t\tthis.namedChunkGroups.set(name, chunkGroup);\n\t\t}\n\t\treturn chunkGroup;\n\t}\n\n\t/**\n\t * @param {EntryOptions} options options for the entrypoint\n\t * @param {Module} module the module the references the chunk group\n\t * @param {DependencyLocation} loc the location from with the chunk group is referenced (inside of module)\n\t * @param {string} request the request from which the the chunk group is referenced\n\t * @returns {Entrypoint} the new or existing entrypoint\n\t */\n\taddAsyncEntrypoint(options, module, loc, request) {\n\t\tconst name = options.name;\n\t\tif (name) {\n\t\t\tconst entrypoint = this.namedChunkGroups.get(name);\n\t\t\tif (entrypoint instanceof Entrypoint) {\n\t\t\t\tif (entrypoint !== undefined) {\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tentrypoint.addOrigin(module, loc, request);\n\t\t\t\t\t}\n\t\t\t\t\treturn entrypoint;\n\t\t\t\t}\n\t\t\t} else if (entrypoint) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Cannot add an async entrypoint with the name '${name}', because there is already an chunk group with this name`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst chunk = this.addChunk(name);\n\t\tif (options.filename) {\n\t\t\tchunk.filenameTemplate = options.filename;\n\t\t}\n\t\tconst entrypoint = new Entrypoint(options, false);\n\t\tentrypoint.setRuntimeChunk(chunk);\n\t\tentrypoint.setEntrypointChunk(chunk);\n\t\tif (name) {\n\t\t\tthis.namedChunkGroups.set(name, entrypoint);\n\t\t}\n\t\tthis.chunkGroups.push(entrypoint);\n\t\tthis.asyncEntrypoints.push(entrypoint);\n\t\tconnectChunkGroupAndChunk(entrypoint, chunk);\n\t\tif (module) {\n\t\t\tentrypoint.addOrigin(module, loc, request);\n\t\t}\n\t\treturn entrypoint;\n\t}\n\n\t/**\n\t * This method first looks to see if a name is provided for a new chunk,\n\t * and first looks to see if any named chunks already exist and reuse that chunk instead.\n\t *\n\t * @param {string=} name optional chunk name to be provided\n\t * @returns {Chunk} create a chunk (invoked during seal event)\n\t */\n\taddChunk(name) {\n\t\tif (name) {\n\t\t\tconst chunk = this.namedChunks.get(name);\n\t\t\tif (chunk !== undefined) {\n\t\t\t\treturn chunk;\n\t\t\t}\n\t\t}\n\t\tconst chunk = new Chunk(name, this._backCompat);\n\t\tthis.chunks.add(chunk);\n\t\tif (this._backCompat)\n\t\t\tChunkGraph.setChunkGraphForChunk(chunk, this.chunkGraph);\n\t\tif (name) {\n\t\t\tthis.namedChunks.set(name, chunk);\n\t\t}\n\t\treturn chunk;\n\t}\n\n\t/**\n\t * @deprecated\n\t * @param {Module} module module to assign depth\n\t * @returns {void}\n\t */\n\tassignDepth(module) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\tconst queue = new Set([module]);\n\t\tlet depth;\n\n\t\tmoduleGraph.setDepth(module, 0);\n\n\t\t/**\n\t\t * @param {Module} module module for processing\n\t\t * @returns {void}\n\t\t */\n\t\tconst processModule = module => {\n\t\t\tif (!moduleGraph.setDepthIfLower(module, depth)) return;\n\t\t\tqueue.add(module);\n\t\t};\n\n\t\tfor (module of queue) {\n\t\t\tqueue.delete(module);\n\t\t\tdepth = moduleGraph.getDepth(module) + 1;\n\n\t\t\tfor (const connection of moduleGraph.getOutgoingConnections(module)) {\n\t\t\t\tconst refModule = connection.module;\n\t\t\t\tif (refModule) {\n\t\t\t\t\tprocessModule(refModule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Set<Module>} modules module to assign depth\n\t * @returns {void}\n\t */\n\tassignDepths(modules) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\t/** @type {Set<Module | number>} */\n\t\tconst queue = new Set(modules);\n\t\tqueue.add(1);\n\t\tlet depth = 0;\n\n\t\tlet i = 0;\n\t\tfor (const module of queue) {\n\t\t\ti++;\n\t\t\tif (typeof module === \"number\") {\n\t\t\t\tdepth = module;\n\t\t\t\tif (queue.size === i) return;\n\t\t\t\tqueue.add(depth + 1);\n\t\t\t} else {\n\t\t\t\tmoduleGraph.setDepth(module, depth);\n\t\t\t\tfor (const { module: refModule } of moduleGraph.getOutgoingConnections(\n\t\t\t\t\tmodule\n\t\t\t\t)) {\n\t\t\t\t\tif (refModule) {\n\t\t\t\t\t\tqueue.add(refModule);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetDependencyReferencedExports(dependency, runtime) {\n\t\tconst referencedExports = dependency.getReferencedExports(\n\t\t\tthis.moduleGraph,\n\t\t\truntime\n\t\t);\n\t\treturn this.hooks.dependencyReferencedExports.call(\n\t\t\treferencedExports,\n\t\t\tdependency,\n\t\t\truntime\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param {Module} module module relationship for removal\n\t * @param {DependenciesBlockLike} block //TODO: good description\n\t * @returns {void}\n\t */\n\tremoveReasonsOfDependencyBlock(module, block) {\n\t\tif (block.blocks) {\n\t\t\tfor (const b of block.blocks) {\n\t\t\t\tthis.removeReasonsOfDependencyBlock(module, b);\n\t\t\t}\n\t\t}\n\n\t\tif (block.dependencies) {\n\t\t\tfor (const dep of block.dependencies) {\n\t\t\t\tconst originalModule = this.moduleGraph.getModule(dep);\n\t\t\t\tif (originalModule) {\n\t\t\t\t\tthis.moduleGraph.removeConnection(dep);\n\n\t\t\t\t\tif (this.chunkGraph) {\n\t\t\t\t\t\tfor (const chunk of this.chunkGraph.getModuleChunks(\n\t\t\t\t\t\t\toriginalModule\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tthis.patchChunksAfterReasonRemoval(originalModule, chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module module to patch tie\n\t * @param {Chunk} chunk chunk to patch tie\n\t * @returns {void}\n\t */\n\tpatchChunksAfterReasonRemoval(module, chunk) {\n\t\tif (!module.hasReasons(this.moduleGraph, chunk.runtime)) {\n\t\t\tthis.removeReasonsOfDependencyBlock(module, module);\n\t\t}\n\t\tif (!module.hasReasonForChunk(chunk, this.moduleGraph, this.chunkGraph)) {\n\t\t\tif (this.chunkGraph.isModuleInChunk(module, chunk)) {\n\t\t\t\tthis.chunkGraph.disconnectChunkAndModule(chunk, module);\n\t\t\t\tthis.removeChunkFromDependencies(module, chunk);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {DependenciesBlock} block block tie for Chunk\n\t * @param {Chunk} chunk chunk to remove from dep\n\t * @returns {void}\n\t */\n\tremoveChunkFromDependencies(block, chunk) {\n\t\t/**\n\t\t * @param {Dependency} d dependency to (maybe) patch up\n\t\t */\n\t\tconst iteratorDependency = d => {\n\t\t\tconst depModule = this.moduleGraph.getModule(d);\n\t\t\tif (!depModule) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.patchChunksAfterReasonRemoval(depModule, chunk);\n\t\t};\n\n\t\tconst blocks = block.blocks;\n\t\tfor (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n\t\t\tconst asyncBlock = blocks[indexBlock];\n\t\t\tconst chunkGroup = this.chunkGraph.getBlockChunkGroup(asyncBlock);\n\t\t\t// Grab all chunks from the first Block's AsyncDepBlock\n\t\t\tconst chunks = chunkGroup.chunks;\n\t\t\t// For each chunk in chunkGroup\n\t\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\t\tconst iteratedChunk = chunks[indexChunk];\n\t\t\t\tchunkGroup.removeChunk(iteratedChunk);\n\t\t\t\t// Recurse\n\t\t\t\tthis.removeChunkFromDependencies(block, iteratedChunk);\n\t\t\t}\n\t\t}\n\n\t\tif (block.dependencies) {\n\t\t\tfor (const dep of block.dependencies) iteratorDependency(dep);\n\t\t}\n\t}\n\n\tassignRuntimeIds() {\n\t\tconst { chunkGraph } = this;\n\t\tconst processEntrypoint = ep => {\n\t\t\tconst runtime = ep.options.runtime || ep.name;\n\t\t\tconst chunk = ep.getRuntimeChunk();\n\t\t\tchunkGraph.setRuntimeId(runtime, chunk.id);\n\t\t};\n\t\tfor (const ep of this.entrypoints.values()) {\n\t\t\tprocessEntrypoint(ep);\n\t\t}\n\t\tfor (const ep of this.asyncEntrypoints) {\n\t\t\tprocessEntrypoint(ep);\n\t\t}\n\t}\n\n\tsortItemsWithChunkIds() {\n\t\tfor (const chunkGroup of this.chunkGroups) {\n\t\t\tchunkGroup.sortItems();\n\t\t}\n\n\t\tthis.errors.sort(compareErrors);\n\t\tthis.warnings.sort(compareErrors);\n\t\tthis.children.sort(byNameOrHash);\n\t}\n\n\tsummarizeDependencies() {\n\t\tfor (\n\t\t\tlet indexChildren = 0;\n\t\t\tindexChildren < this.children.length;\n\t\t\tindexChildren++\n\t\t) {\n\t\t\tconst child = this.children[indexChildren];\n\n\t\t\tthis.fileDependencies.addAll(child.fileDependencies);\n\t\t\tthis.contextDependencies.addAll(child.contextDependencies);\n\t\t\tthis.missingDependencies.addAll(child.missingDependencies);\n\t\t\tthis.buildDependencies.addAll(child.buildDependencies);\n\t\t}\n\n\t\tfor (const module of this.modules) {\n\t\t\tmodule.addCacheDependencies(\n\t\t\t\tthis.fileDependencies,\n\t\t\t\tthis.contextDependencies,\n\t\t\t\tthis.missingDependencies,\n\t\t\t\tthis.buildDependencies\n\t\t\t);\n\t\t}\n\t}\n\n\tcreateModuleHashes() {\n\t\tlet statModulesHashed = 0;\n\t\tlet statModulesFromCache = 0;\n\t\tconst { chunkGraph, runtimeTemplate, moduleMemCaches2 } = this;\n\t\tconst { hashFunction, hashDigest, hashDigestLength } = this.outputOptions;\n\t\tfor (const module of this.modules) {\n\t\t\tconst memCache = moduleMemCaches2 && moduleMemCaches2.get(module);\n\t\t\tfor (const runtime of chunkGraph.getModuleRuntimes(module)) {\n\t\t\t\tif (memCache) {\n\t\t\t\t\tconst digest = memCache.get(`moduleHash-${getRuntimeKey(runtime)}`);\n\t\t\t\t\tif (digest !== undefined) {\n\t\t\t\t\t\tchunkGraph.setModuleHashes(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\tdigest,\n\t\t\t\t\t\t\tdigest.substr(0, hashDigestLength)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstatModulesFromCache++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstatModulesHashed++;\n\t\t\t\tconst digest = this._createModuleHash(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime,\n\t\t\t\t\thashFunction,\n\t\t\t\t\truntimeTemplate,\n\t\t\t\t\thashDigest,\n\t\t\t\t\thashDigestLength\n\t\t\t\t);\n\t\t\t\tif (memCache) {\n\t\t\t\t\tmemCache.set(`moduleHash-${getRuntimeKey(runtime)}`, digest);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.logger.log(\n\t\t\t`${statModulesHashed} modules hashed, ${statModulesFromCache} from cache (${\n\t\t\t\tMath.round(\n\t\t\t\t\t(100 * (statModulesHashed + statModulesFromCache)) / this.modules.size\n\t\t\t\t) / 100\n\t\t\t} variants per module in average)`\n\t\t);\n\t}\n\n\t_createModuleHash(\n\t\tmodule,\n\t\tchunkGraph,\n\t\truntime,\n\t\thashFunction,\n\t\truntimeTemplate,\n\t\thashDigest,\n\t\thashDigestLength\n\t) {\n\t\tconst moduleHash = createHash(hashFunction);\n\t\tmodule.updateHash(moduleHash, {\n\t\t\tchunkGraph,\n\t\t\truntime,\n\t\t\truntimeTemplate\n\t\t});\n\t\tconst moduleHashDigest = /** @type {string} */ (\n\t\t\tmoduleHash.digest(hashDigest)\n\t\t);\n\t\tchunkGraph.setModuleHashes(\n\t\t\tmodule,\n\t\t\truntime,\n\t\t\tmoduleHashDigest,\n\t\t\tmoduleHashDigest.substr(0, hashDigestLength)\n\t\t);\n\t\treturn moduleHashDigest;\n\t}\n\n\tcreateHash() {\n\t\tthis.logger.time(\"hashing: initialize hash\");\n\t\tconst chunkGraph = this.chunkGraph;\n\t\tconst runtimeTemplate = this.runtimeTemplate;\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst hashFunction = outputOptions.hashFunction;\n\t\tconst hashDigest = outputOptions.hashDigest;\n\t\tconst hashDigestLength = outputOptions.hashDigestLength;\n\t\tconst hash = createHash(hashFunction);\n\t\tif (outputOptions.hashSalt) {\n\t\t\thash.update(outputOptions.hashSalt);\n\t\t}\n\t\tthis.logger.timeEnd(\"hashing: initialize hash\");\n\t\tif (this.children.length > 0) {\n\t\t\tthis.logger.time(\"hashing: hash child compilations\");\n\t\t\tfor (const child of this.children) {\n\t\t\t\thash.update(child.hash);\n\t\t\t}\n\t\t\tthis.logger.timeEnd(\"hashing: hash child compilations\");\n\t\t}\n\t\tif (this.warnings.length > 0) {\n\t\t\tthis.logger.time(\"hashing: hash warnings\");\n\t\t\tfor (const warning of this.warnings) {\n\t\t\t\thash.update(`${warning.message}`);\n\t\t\t}\n\t\t\tthis.logger.timeEnd(\"hashing: hash warnings\");\n\t\t}\n\t\tif (this.errors.length > 0) {\n\t\t\tthis.logger.time(\"hashing: hash errors\");\n\t\t\tfor (const error of this.errors) {\n\t\t\t\thash.update(`${error.message}`);\n\t\t\t}\n\t\t\tthis.logger.timeEnd(\"hashing: hash errors\");\n\t\t}\n\n\t\tthis.logger.time(\"hashing: sort chunks\");\n\t\t/*\n\t\t * all non-runtime chunks need to be hashes first,\n\t\t * since runtime chunk might use their hashes.\n\t\t * runtime chunks need to be hashed in the correct order\n\t\t * since they may depend on each other (for async entrypoints).\n\t\t * So we put all non-runtime chunks first and hash them in any order.\n\t\t * And order runtime chunks according to referenced between each other.\n\t\t * Chunks need to be in deterministic order since we add hashes to full chunk\n\t\t * during these hashing.\n\t\t */\n\t\t/** @type {Chunk[]} */\n\t\tconst unorderedRuntimeChunks = [];\n\t\t/** @type {Chunk[]} */\n\t\tconst otherChunks = [];\n\t\tfor (const c of this.chunks) {\n\t\t\tif (c.hasRuntime()) {\n\t\t\t\tunorderedRuntimeChunks.push(c);\n\t\t\t} else {\n\t\t\t\totherChunks.push(c);\n\t\t\t}\n\t\t}\n\t\tunorderedRuntimeChunks.sort(byId);\n\t\totherChunks.sort(byId);\n\n\t\t/** @typedef {{ chunk: Chunk, referencedBy: RuntimeChunkInfo[], remaining: number }} RuntimeChunkInfo */\n\t\t/** @type {Map<Chunk, RuntimeChunkInfo>} */\n\t\tconst runtimeChunksMap = new Map();\n\t\tfor (const chunk of unorderedRuntimeChunks) {\n\t\t\truntimeChunksMap.set(chunk, {\n\t\t\t\tchunk,\n\t\t\t\treferencedBy: [],\n\t\t\t\tremaining: 0\n\t\t\t});\n\t\t}\n\t\tlet remaining = 0;\n\t\tfor (const info of runtimeChunksMap.values()) {\n\t\t\tfor (const other of new Set(\n\t\t\t\tArray.from(info.chunk.getAllReferencedAsyncEntrypoints()).map(\n\t\t\t\t\te => e.chunks[e.chunks.length - 1]\n\t\t\t\t)\n\t\t\t)) {\n\t\t\t\tconst otherInfo = runtimeChunksMap.get(other);\n\t\t\t\totherInfo.referencedBy.push(info);\n\t\t\t\tinfo.remaining++;\n\t\t\t\tremaining++;\n\t\t\t}\n\t\t}\n\t\t/** @type {Chunk[]} */\n\t\tconst runtimeChunks = [];\n\t\tfor (const info of runtimeChunksMap.values()) {\n\t\t\tif (info.remaining === 0) {\n\t\t\t\truntimeChunks.push(info.chunk);\n\t\t\t}\n\t\t}\n\t\t// If there are any references between chunks\n\t\t// make sure to follow these chains\n\t\tif (remaining > 0) {\n\t\t\tconst readyChunks = [];\n\t\t\tfor (const chunk of runtimeChunks) {\n\t\t\t\tconst hasFullHashModules =\n\t\t\t\t\tchunkGraph.getNumberOfChunkFullHashModules(chunk) !== 0;\n\t\t\t\tconst info = runtimeChunksMap.get(chunk);\n\t\t\t\tfor (const otherInfo of info.referencedBy) {\n\t\t\t\t\tif (hasFullHashModules) {\n\t\t\t\t\t\tchunkGraph.upgradeDependentToFullHashModules(otherInfo.chunk);\n\t\t\t\t\t}\n\t\t\t\t\tremaining--;\n\t\t\t\t\tif (--otherInfo.remaining === 0) {\n\t\t\t\t\t\treadyChunks.push(otherInfo.chunk);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (readyChunks.length > 0) {\n\t\t\t\t\t// This ensures deterministic ordering, since referencedBy is non-deterministic\n\t\t\t\t\treadyChunks.sort(byId);\n\t\t\t\t\tfor (const c of readyChunks) runtimeChunks.push(c);\n\t\t\t\t\treadyChunks.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If there are still remaining references we have cycles and want to create a warning\n\t\tif (remaining > 0) {\n\t\t\tlet circularRuntimeChunkInfo = [];\n\t\t\tfor (const info of runtimeChunksMap.values()) {\n\t\t\t\tif (info.remaining !== 0) {\n\t\t\t\t\tcircularRuntimeChunkInfo.push(info);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcircularRuntimeChunkInfo.sort(compareSelect(i => i.chunk, byId));\n\t\t\tconst err =\n\t\t\t\tnew WebpackError(`Circular dependency between chunks with runtime (${Array.from(\n\t\t\t\t\tcircularRuntimeChunkInfo,\n\t\t\t\t\tc => c.chunk.name || c.chunk.id\n\t\t\t\t).join(\", \")})\nThis prevents using hashes of each other and should be avoided.`);\n\t\t\terr.chunk = circularRuntimeChunkInfo[0].chunk;\n\t\t\tthis.warnings.push(err);\n\t\t\tfor (const i of circularRuntimeChunkInfo) runtimeChunks.push(i.chunk);\n\t\t}\n\t\tthis.logger.timeEnd(\"hashing: sort chunks\");\n\n\t\tconst fullHashChunks = new Set();\n\t\t/** @type {{module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}[]} */\n\t\tconst codeGenerationJobs = [];\n\t\t/** @type {Map<string, Map<Module, {module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}>>} */\n\t\tconst codeGenerationJobsMap = new Map();\n\n\t\tconst processChunk = chunk => {\n\t\t\t// Last minute module hash generation for modules that depend on chunk hashes\n\t\t\tthis.logger.time(\"hashing: hash runtime modules\");\n\t\t\tconst runtime = chunk.runtime;\n\t\t\tfor (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n\t\t\t\tif (!chunkGraph.hasModuleHashes(module, runtime)) {\n\t\t\t\t\tconst hash = this._createModuleHash(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\thashFunction,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\thashDigestLength\n\t\t\t\t\t);\n\t\t\t\t\tlet hashMap = codeGenerationJobsMap.get(hash);\n\t\t\t\t\tif (hashMap) {\n\t\t\t\t\t\tconst moduleJob = hashMap.get(module);\n\t\t\t\t\t\tif (moduleJob) {\n\t\t\t\t\t\t\tmoduleJob.runtimes.push(runtime);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thashMap = new Map();\n\t\t\t\t\t\tcodeGenerationJobsMap.set(hash, hashMap);\n\t\t\t\t\t}\n\t\t\t\t\tconst job = {\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\thash,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\truntimes: [runtime]\n\t\t\t\t\t};\n\t\t\t\t\thashMap.set(module, job);\n\t\t\t\t\tcodeGenerationJobs.push(job);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.logger.timeAggregate(\"hashing: hash runtime modules\");\n\t\t\tthis.logger.time(\"hashing: hash chunks\");\n\t\t\tconst chunkHash = createHash(hashFunction);\n\t\t\ttry {\n\t\t\t\tif (outputOptions.hashSalt) {\n\t\t\t\t\tchunkHash.update(outputOptions.hashSalt);\n\t\t\t\t}\n\t\t\t\tchunk.updateHash(chunkHash, chunkGraph);\n\t\t\t\tthis.hooks.chunkHash.call(chunk, chunkHash, {\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\tcodeGenerationResults: this.codeGenerationResults,\n\t\t\t\t\tmoduleGraph: this.moduleGraph,\n\t\t\t\t\truntimeTemplate: this.runtimeTemplate\n\t\t\t\t});\n\t\t\t\tconst chunkHashDigest = /** @type {string} */ (\n\t\t\t\t\tchunkHash.digest(hashDigest)\n\t\t\t\t);\n\t\t\t\thash.update(chunkHashDigest);\n\t\t\t\tchunk.hash = chunkHashDigest;\n\t\t\t\tchunk.renderedHash = chunk.hash.substr(0, hashDigestLength);\n\t\t\t\tconst fullHashModules =\n\t\t\t\t\tchunkGraph.getChunkFullHashModulesIterable(chunk);\n\t\t\t\tif (fullHashModules) {\n\t\t\t\t\tfullHashChunks.add(chunk);\n\t\t\t\t} else {\n\t\t\t\t\tthis.hooks.contentHash.call(chunk);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, \"\", err));\n\t\t\t}\n\t\t\tthis.logger.timeAggregate(\"hashing: hash chunks\");\n\t\t};\n\t\totherChunks.forEach(processChunk);\n\t\tfor (const chunk of runtimeChunks) processChunk(chunk);\n\n\t\tthis.logger.timeAggregateEnd(\"hashing: hash runtime modules\");\n\t\tthis.logger.timeAggregateEnd(\"hashing: hash chunks\");\n\t\tthis.logger.time(\"hashing: hash digest\");\n\t\tthis.hooks.fullHash.call(hash);\n\t\tthis.fullHash = /** @type {string} */ (hash.digest(hashDigest));\n\t\tthis.hash = this.fullHash.substr(0, hashDigestLength);\n\t\tthis.logger.timeEnd(\"hashing: hash digest\");\n\n\t\tthis.logger.time(\"hashing: process full hash modules\");\n\t\tfor (const chunk of fullHashChunks) {\n\t\t\tfor (const module of chunkGraph.getChunkFullHashModulesIterable(chunk)) {\n\t\t\t\tconst moduleHash = createHash(hashFunction);\n\t\t\t\tmodule.updateHash(moduleHash, {\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime: chunk.runtime,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t});\n\t\t\t\tconst moduleHashDigest = /** @type {string} */ (\n\t\t\t\t\tmoduleHash.digest(hashDigest)\n\t\t\t\t);\n\t\t\t\tconst oldHash = chunkGraph.getModuleHash(module, chunk.runtime);\n\t\t\t\tchunkGraph.setModuleHashes(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunk.runtime,\n\t\t\t\t\tmoduleHashDigest,\n\t\t\t\t\tmoduleHashDigest.substr(0, hashDigestLength)\n\t\t\t\t);\n\t\t\t\tcodeGenerationJobsMap.get(oldHash).get(module).hash = moduleHashDigest;\n\t\t\t}\n\t\t\tconst chunkHash = createHash(hashFunction);\n\t\t\tchunkHash.update(chunk.hash);\n\t\t\tchunkHash.update(this.hash);\n\t\t\tconst chunkHashDigest = /** @type {string} */ (\n\t\t\t\tchunkHash.digest(hashDigest)\n\t\t\t);\n\t\t\tchunk.hash = chunkHashDigest;\n\t\t\tchunk.renderedHash = chunk.hash.substr(0, hashDigestLength);\n\t\t\tthis.hooks.contentHash.call(chunk);\n\t\t}\n\t\tthis.logger.timeEnd(\"hashing: process full hash modules\");\n\t\treturn codeGenerationJobs;\n\t}\n\n\t/**\n\t * @param {string} file file name\n\t * @param {Source} source asset source\n\t * @param {AssetInfo} assetInfo extra asset information\n\t * @returns {void}\n\t */\n\temitAsset(file, source, assetInfo = {}) {\n\t\tif (this.assets[file]) {\n\t\t\tif (!isSourceEqual(this.assets[file], source)) {\n\t\t\t\tthis.errors.push(\n\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t`Conflict: Multiple assets emit different content to the same filename ${file}`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis.assets[file] = source;\n\t\t\t\tthis._setAssetInfo(file, assetInfo);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst oldInfo = this.assetsInfo.get(file);\n\t\t\tconst newInfo = Object.assign({}, oldInfo, assetInfo);\n\t\t\tthis._setAssetInfo(file, newInfo, oldInfo);\n\t\t\treturn;\n\t\t}\n\t\tthis.assets[file] = source;\n\t\tthis._setAssetInfo(file, assetInfo, undefined);\n\t}\n\n\t_setAssetInfo(file, newInfo, oldInfo = this.assetsInfo.get(file)) {\n\t\tif (newInfo === undefined) {\n\t\t\tthis.assetsInfo.delete(file);\n\t\t} else {\n\t\t\tthis.assetsInfo.set(file, newInfo);\n\t\t}\n\t\tconst oldRelated = oldInfo && oldInfo.related;\n\t\tconst newRelated = newInfo && newInfo.related;\n\t\tif (oldRelated) {\n\t\t\tfor (const key of Object.keys(oldRelated)) {\n\t\t\t\tconst remove = name => {\n\t\t\t\t\tconst relatedIn = this._assetsRelatedIn.get(name);\n\t\t\t\t\tif (relatedIn === undefined) return;\n\t\t\t\t\tconst entry = relatedIn.get(key);\n\t\t\t\t\tif (entry === undefined) return;\n\t\t\t\t\tentry.delete(file);\n\t\t\t\t\tif (entry.size !== 0) return;\n\t\t\t\t\trelatedIn.delete(key);\n\t\t\t\t\tif (relatedIn.size === 0) this._assetsRelatedIn.delete(name);\n\t\t\t\t};\n\t\t\t\tconst entry = oldRelated[key];\n\t\t\t\tif (Array.isArray(entry)) {\n\t\t\t\t\tentry.forEach(remove);\n\t\t\t\t} else if (entry) {\n\t\t\t\t\tremove(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (newRelated) {\n\t\t\tfor (const key of Object.keys(newRelated)) {\n\t\t\t\tconst add = name => {\n\t\t\t\t\tlet relatedIn = this._assetsRelatedIn.get(name);\n\t\t\t\t\tif (relatedIn === undefined) {\n\t\t\t\t\t\tthis._assetsRelatedIn.set(name, (relatedIn = new Map()));\n\t\t\t\t\t}\n\t\t\t\t\tlet entry = relatedIn.get(key);\n\t\t\t\t\tif (entry === undefined) {\n\t\t\t\t\t\trelatedIn.set(key, (entry = new Set()));\n\t\t\t\t\t}\n\t\t\t\t\tentry.add(file);\n\t\t\t\t};\n\t\t\t\tconst entry = newRelated[key];\n\t\t\t\tif (Array.isArray(entry)) {\n\t\t\t\t\tentry.forEach(add);\n\t\t\t\t} else if (entry) {\n\t\t\t\t\tadd(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} file file name\n\t * @param {Source | function(Source): Source} newSourceOrFunction new asset source or function converting old to new\n\t * @param {AssetInfo | function(AssetInfo | undefined): AssetInfo} assetInfoUpdateOrFunction new asset info or function converting old to new\n\t */\n\tupdateAsset(\n\t\tfile,\n\t\tnewSourceOrFunction,\n\t\tassetInfoUpdateOrFunction = undefined\n\t) {\n\t\tif (!this.assets[file]) {\n\t\t\tthrow new Error(\n\t\t\t\t`Called Compilation.updateAsset for not existing filename ${file}`\n\t\t\t);\n\t\t}\n\t\tif (typeof newSourceOrFunction === \"function\") {\n\t\t\tthis.assets[file] = newSourceOrFunction(this.assets[file]);\n\t\t} else {\n\t\t\tthis.assets[file] = newSourceOrFunction;\n\t\t}\n\t\tif (assetInfoUpdateOrFunction !== undefined) {\n\t\t\tconst oldInfo = this.assetsInfo.get(file) || EMPTY_ASSET_INFO;\n\t\t\tif (typeof assetInfoUpdateOrFunction === \"function\") {\n\t\t\t\tthis._setAssetInfo(file, assetInfoUpdateOrFunction(oldInfo), oldInfo);\n\t\t\t} else {\n\t\t\t\tthis._setAssetInfo(\n\t\t\t\t\tfile,\n\t\t\t\t\tcachedCleverMerge(oldInfo, assetInfoUpdateOrFunction),\n\t\t\t\t\toldInfo\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\trenameAsset(file, newFile) {\n\t\tconst source = this.assets[file];\n\t\tif (!source) {\n\t\t\tthrow new Error(\n\t\t\t\t`Called Compilation.renameAsset for not existing filename ${file}`\n\t\t\t);\n\t\t}\n\t\tif (this.assets[newFile]) {\n\t\t\tif (!isSourceEqual(this.assets[file], source)) {\n\t\t\t\tthis.errors.push(\n\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t`Conflict: Called Compilation.renameAsset for already existing filename ${newFile} with different content`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst assetInfo = this.assetsInfo.get(file);\n\t\t// Update related in all other assets\n\t\tconst relatedInInfo = this._assetsRelatedIn.get(file);\n\t\tif (relatedInInfo) {\n\t\t\tfor (const [key, assets] of relatedInInfo) {\n\t\t\t\tfor (const name of assets) {\n\t\t\t\t\tconst info = this.assetsInfo.get(name);\n\t\t\t\t\tif (!info) continue;\n\t\t\t\t\tconst related = info.related;\n\t\t\t\t\tif (!related) continue;\n\t\t\t\t\tconst entry = related[key];\n\t\t\t\t\tlet newEntry;\n\t\t\t\t\tif (Array.isArray(entry)) {\n\t\t\t\t\t\tnewEntry = entry.map(x => (x === file ? newFile : x));\n\t\t\t\t\t} else if (entry === file) {\n\t\t\t\t\t\tnewEntry = newFile;\n\t\t\t\t\t} else continue;\n\t\t\t\t\tthis.assetsInfo.set(name, {\n\t\t\t\t\t\t...info,\n\t\t\t\t\t\trelated: {\n\t\t\t\t\t\t\t...related,\n\t\t\t\t\t\t\t[key]: newEntry\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._setAssetInfo(file, undefined, assetInfo);\n\t\tthis._setAssetInfo(newFile, assetInfo);\n\t\tdelete this.assets[file];\n\t\tthis.assets[newFile] = source;\n\t\tfor (const chunk of this.chunks) {\n\t\t\t{\n\t\t\t\tconst size = chunk.files.size;\n\t\t\t\tchunk.files.delete(file);\n\t\t\t\tif (size !== chunk.files.size) {\n\t\t\t\t\tchunk.files.add(newFile);\n\t\t\t\t}\n\t\t\t}\n\t\t\t{\n\t\t\t\tconst size = chunk.auxiliaryFiles.size;\n\t\t\t\tchunk.auxiliaryFiles.delete(file);\n\t\t\t\tif (size !== chunk.auxiliaryFiles.size) {\n\t\t\t\t\tchunk.auxiliaryFiles.add(newFile);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} file file name\n\t */\n\tdeleteAsset(file) {\n\t\tif (!this.assets[file]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this.assets[file];\n\t\tconst assetInfo = this.assetsInfo.get(file);\n\t\tthis._setAssetInfo(file, undefined, assetInfo);\n\t\tconst related = assetInfo && assetInfo.related;\n\t\tif (related) {\n\t\t\tfor (const key of Object.keys(related)) {\n\t\t\t\tconst checkUsedAndDelete = file => {\n\t\t\t\t\tif (!this._assetsRelatedIn.has(file)) {\n\t\t\t\t\t\tthis.deleteAsset(file);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst items = related[key];\n\t\t\t\tif (Array.isArray(items)) {\n\t\t\t\t\titems.forEach(checkUsedAndDelete);\n\t\t\t\t} else if (items) {\n\t\t\t\t\tcheckUsedAndDelete(items);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// TODO If this becomes a performance problem\n\t\t// store a reverse mapping from asset to chunk\n\t\tfor (const chunk of this.chunks) {\n\t\t\tchunk.files.delete(file);\n\t\t\tchunk.auxiliaryFiles.delete(file);\n\t\t}\n\t}\n\n\tgetAssets() {\n\t\t/** @type {Readonly<Asset>[]} */\n\t\tconst array = [];\n\t\tfor (const assetName of Object.keys(this.assets)) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.assets, assetName)) {\n\t\t\t\tarray.push({\n\t\t\t\t\tname: assetName,\n\t\t\t\t\tsource: this.assets[assetName],\n\t\t\t\t\tinfo: this.assetsInfo.get(assetName) || EMPTY_ASSET_INFO\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * @param {string} name the name of the asset\n\t * @returns {Readonly<Asset> | undefined} the asset or undefined when not found\n\t */\n\tgetAsset(name) {\n\t\tif (!Object.prototype.hasOwnProperty.call(this.assets, name))\n\t\t\treturn undefined;\n\t\treturn {\n\t\t\tname,\n\t\t\tsource: this.assets[name],\n\t\t\tinfo: this.assetsInfo.get(name) || EMPTY_ASSET_INFO\n\t\t};\n\t}\n\n\tclearAssets() {\n\t\tfor (const chunk of this.chunks) {\n\t\t\tchunk.files.clear();\n\t\t\tchunk.auxiliaryFiles.clear();\n\t\t}\n\t}\n\n\tcreateModuleAssets() {\n\t\tconst { chunkGraph } = this;\n\t\tfor (const module of this.modules) {\n\t\t\tif (module.buildInfo.assets) {\n\t\t\t\tconst assetsInfo = module.buildInfo.assetsInfo;\n\t\t\t\tfor (const assetName of Object.keys(module.buildInfo.assets)) {\n\t\t\t\t\tconst fileName = this.getPath(assetName, {\n\t\t\t\t\t\tchunkGraph: this.chunkGraph,\n\t\t\t\t\t\tmodule\n\t\t\t\t\t});\n\t\t\t\t\tfor (const chunk of chunkGraph.getModuleChunksIterable(module)) {\n\t\t\t\t\t\tchunk.auxiliaryFiles.add(fileName);\n\t\t\t\t\t}\n\t\t\t\t\tthis.emitAsset(\n\t\t\t\t\t\tfileName,\n\t\t\t\t\t\tmodule.buildInfo.assets[assetName],\n\t\t\t\t\t\tassetsInfo ? assetsInfo.get(assetName) : undefined\n\t\t\t\t\t);\n\t\t\t\t\tthis.hooks.moduleAsset.call(module, fileName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {RenderManifestOptions} options options object\n\t * @returns {RenderManifestEntry[]} manifest entries\n\t */\n\tgetRenderManifest(options) {\n\t\treturn this.hooks.renderManifest.call([], options);\n\t}\n\n\t/**\n\t * @param {Callback} callback signals when the call finishes\n\t * @returns {void}\n\t */\n\tcreateChunkAssets(callback) {\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst cachedSourceMap = new WeakMap();\n\t\t/** @type {Map<string, {hash: string, source: Source, chunk: Chunk}>} */\n\t\tconst alreadyWrittenFiles = new Map();\n\n\t\tasyncLib.forEachLimit(\n\t\t\tthis.chunks,\n\t\t\t15,\n\t\t\t(chunk, callback) => {\n\t\t\t\t/** @type {RenderManifestEntry[]} */\n\t\t\t\tlet manifest;\n\t\t\t\ttry {\n\t\t\t\t\tmanifest = this.getRenderManifest({\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\thash: this.hash,\n\t\t\t\t\t\tfullHash: this.fullHash,\n\t\t\t\t\t\toutputOptions,\n\t\t\t\t\t\tcodeGenerationResults: this.codeGenerationResults,\n\t\t\t\t\t\tmoduleTemplates: this.moduleTemplates,\n\t\t\t\t\t\tdependencyTemplates: this.dependencyTemplates,\n\t\t\t\t\t\tchunkGraph: this.chunkGraph,\n\t\t\t\t\t\tmoduleGraph: this.moduleGraph,\n\t\t\t\t\t\truntimeTemplate: this.runtimeTemplate\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, \"\", err));\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tmanifest,\n\t\t\t\t\t(fileManifest, callback) => {\n\t\t\t\t\t\tconst ident = fileManifest.identifier;\n\t\t\t\t\t\tconst usedHash = fileManifest.hash;\n\n\t\t\t\t\t\tconst assetCacheItem = this._assetsCache.getItemCache(\n\t\t\t\t\t\t\tident,\n\t\t\t\t\t\t\tusedHash\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tassetCacheItem.get((err, sourceFromCache) => {\n\t\t\t\t\t\t\t/** @type {string | function(PathData, AssetInfo=): string} */\n\t\t\t\t\t\t\tlet filenameTemplate;\n\t\t\t\t\t\t\t/** @type {string} */\n\t\t\t\t\t\t\tlet file;\n\t\t\t\t\t\t\t/** @type {AssetInfo} */\n\t\t\t\t\t\t\tlet assetInfo;\n\n\t\t\t\t\t\t\tlet inTry = true;\n\t\t\t\t\t\t\tconst errorAndCallback = err => {\n\t\t\t\t\t\t\t\tconst filename =\n\t\t\t\t\t\t\t\t\tfile ||\n\t\t\t\t\t\t\t\t\t(typeof file === \"string\"\n\t\t\t\t\t\t\t\t\t\t? file\n\t\t\t\t\t\t\t\t\t\t: typeof filenameTemplate === \"string\"\n\t\t\t\t\t\t\t\t\t\t? filenameTemplate\n\t\t\t\t\t\t\t\t\t\t: \"\");\n\n\t\t\t\t\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, filename, err));\n\t\t\t\t\t\t\t\tinTry = false;\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (\"filename\" in fileManifest) {\n\t\t\t\t\t\t\t\t\tfile = fileManifest.filename;\n\t\t\t\t\t\t\t\t\tassetInfo = fileManifest.info;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfilenameTemplate = fileManifest.filenameTemplate;\n\t\t\t\t\t\t\t\t\tconst pathAndInfo = this.getPathWithInfo(\n\t\t\t\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\t\t\t\tfileManifest.pathOptions\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tfile = pathAndInfo.path;\n\t\t\t\t\t\t\t\t\tassetInfo = fileManifest.info\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t...pathAndInfo.info,\n\t\t\t\t\t\t\t\t\t\t\t\t...fileManifest.info\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: pathAndInfo.info;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn errorAndCallback(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlet source = sourceFromCache;\n\n\t\t\t\t\t\t\t\t// check if the same filename was already written by another chunk\n\t\t\t\t\t\t\t\tconst alreadyWritten = alreadyWrittenFiles.get(file);\n\t\t\t\t\t\t\t\tif (alreadyWritten !== undefined) {\n\t\t\t\t\t\t\t\t\tif (alreadyWritten.hash !== usedHash) {\n\t\t\t\t\t\t\t\t\t\tinTry = false;\n\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t\t\t\t\t\t\t`Conflict: Multiple chunks emit assets to the same filename ${file}` +\n\t\t\t\t\t\t\t\t\t\t\t\t\t` (chunks ${alreadyWritten.chunk.id} and ${chunk.id})`\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsource = alreadyWritten.source;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (!source) {\n\t\t\t\t\t\t\t\t\t// render the asset\n\t\t\t\t\t\t\t\t\tsource = fileManifest.render();\n\n\t\t\t\t\t\t\t\t\t// Ensure that source is a cached source to avoid additional cost because of repeated access\n\t\t\t\t\t\t\t\t\tif (!(source instanceof CachedSource)) {\n\t\t\t\t\t\t\t\t\t\tconst cacheEntry = cachedSourceMap.get(source);\n\t\t\t\t\t\t\t\t\t\tif (cacheEntry) {\n\t\t\t\t\t\t\t\t\t\t\tsource = cacheEntry;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tconst cachedSource = new CachedSource(source);\n\t\t\t\t\t\t\t\t\t\t\tcachedSourceMap.set(source, cachedSource);\n\t\t\t\t\t\t\t\t\t\t\tsource = cachedSource;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.emitAsset(file, source, assetInfo);\n\t\t\t\t\t\t\t\tif (fileManifest.auxiliary) {\n\t\t\t\t\t\t\t\t\tchunk.auxiliaryFiles.add(file);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchunk.files.add(file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.hooks.chunkAsset.call(chunk, file);\n\t\t\t\t\t\t\t\talreadyWrittenFiles.set(file, {\n\t\t\t\t\t\t\t\t\thash: usedHash,\n\t\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (source !== sourceFromCache) {\n\t\t\t\t\t\t\t\t\tassetCacheItem.store(source, err => {\n\t\t\t\t\t\t\t\t\t\tif (err) return errorAndCallback(err);\n\t\t\t\t\t\t\t\t\t\tinTry = false;\n\t\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinTry = false;\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (!inTry) throw err;\n\t\t\t\t\t\t\t\terrorAndCallback(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t},\n\t\t\tcallback\n\t\t);\n\t}\n\n\t/**\n\t * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n\t * @param {PathData} data context data\n\t * @returns {string} interpolated path\n\t */\n\tgetPath(filename, data = {}) {\n\t\tif (!data.hash) {\n\t\t\tdata = {\n\t\t\t\thash: this.hash,\n\t\t\t\t...data\n\t\t\t};\n\t\t}\n\t\treturn this.getAssetPath(filename, data);\n\t}\n\n\t/**\n\t * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n\t * @param {PathData} data context data\n\t * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n\t */\n\tgetPathWithInfo(filename, data = {}) {\n\t\tif (!data.hash) {\n\t\t\tdata = {\n\t\t\t\thash: this.hash,\n\t\t\t\t...data\n\t\t\t};\n\t\t}\n\t\treturn this.getAssetPathWithInfo(filename, data);\n\t}\n\n\t/**\n\t * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n\t * @param {PathData} data context data\n\t * @returns {string} interpolated path\n\t */\n\tgetAssetPath(filename, data) {\n\t\treturn this.hooks.assetPath.call(\n\t\t\ttypeof filename === \"function\" ? filename(data) : filename,\n\t\t\tdata,\n\t\t\tundefined\n\t\t);\n\t}\n\n\t/**\n\t * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n\t * @param {PathData} data context data\n\t * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n\t */\n\tgetAssetPathWithInfo(filename, data) {\n\t\tconst assetInfo = {};\n\t\t// TODO webpack 5: refactor assetPath hook to receive { path, info } object\n\t\tconst newPath = this.hooks.assetPath.call(\n\t\t\ttypeof filename === \"function\" ? filename(data, assetInfo) : filename,\n\t\t\tdata,\n\t\t\tassetInfo\n\t\t);\n\t\treturn { path: newPath, info: assetInfo };\n\t}\n\n\tgetWarnings() {\n\t\treturn this.hooks.processWarnings.call(this.warnings);\n\t}\n\n\tgetErrors() {\n\t\treturn this.hooks.processErrors.call(this.errors);\n\t}\n\n\t/**\n\t * This function allows you to run another instance of webpack inside of webpack however as\n\t * a child with different settings and configurations (if desired) applied. It copies all hooks, plugins\n\t * from parent (or top level compiler) and creates a child Compilation\n\t *\n\t * @param {string} name name of the child compiler\n\t * @param {OutputOptions=} outputOptions // Need to convert config schema to types for this\n\t * @param {Array<WebpackPluginInstance | WebpackPluginFunction>=} plugins webpack plugins that will be applied\n\t * @returns {Compiler} creates a child Compiler instance\n\t */\n\tcreateChildCompiler(name, outputOptions, plugins) {\n\t\tconst idx = this.childrenCounters[name] || 0;\n\t\tthis.childrenCounters[name] = idx + 1;\n\t\treturn this.compiler.createChildCompiler(\n\t\t\tthis,\n\t\t\tname,\n\t\t\tidx,\n\t\t\toutputOptions,\n\t\t\tplugins\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {ExecuteModuleOptions} options options\n\t * @param {ExecuteModuleCallback} callback callback\n\t */\n\texecuteModule(module, options, callback) {\n\t\t// Aggregate all referenced modules and ensure they are ready\n\t\tconst modules = new Set([module]);\n\t\tprocessAsyncTree(\n\t\t\tmodules,\n\t\t\t10,\n\t\t\t/**\n\t\t\t * @param {Module} module the module\n\t\t\t * @param {function(Module): void} push push more jobs\n\t\t\t * @param {Callback} callback callback\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\t(module, push, callback) => {\n\t\t\t\tthis.buildQueue.waitFor(module, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tthis.processDependenciesQueue.waitFor(module, err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tfor (const { module: m } of this.moduleGraph.getOutgoingConnections(\n\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tconst size = modules.size;\n\t\t\t\t\t\t\tmodules.add(m);\n\t\t\t\t\t\t\tif (modules.size !== size) push(m);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t// Create new chunk graph, chunk and entrypoint for the build time execution\n\t\t\t\tconst chunkGraph = new ChunkGraph(\n\t\t\t\t\tthis.moduleGraph,\n\t\t\t\t\tthis.outputOptions.hashFunction\n\t\t\t\t);\n\t\t\t\tconst runtime = \"build time\";\n\t\t\t\tconst { hashFunction, hashDigest, hashDigestLength } =\n\t\t\t\t\tthis.outputOptions;\n\t\t\t\tconst runtimeTemplate = this.runtimeTemplate;\n\n\t\t\t\tconst chunk = new Chunk(\"build time chunk\", this._backCompat);\n\t\t\t\tchunk.id = chunk.name;\n\t\t\t\tchunk.ids = [chunk.id];\n\t\t\t\tchunk.runtime = runtime;\n\n\t\t\t\tconst entrypoint = new Entrypoint({\n\t\t\t\t\truntime,\n\t\t\t\t\tchunkLoading: false,\n\t\t\t\t\t...options.entryOptions\n\t\t\t\t});\n\t\t\t\tchunkGraph.connectChunkAndEntryModule(chunk, module, entrypoint);\n\t\t\t\tconnectChunkGroupAndChunk(entrypoint, chunk);\n\t\t\t\tentrypoint.setRuntimeChunk(chunk);\n\t\t\t\tentrypoint.setEntrypointChunk(chunk);\n\n\t\t\t\tconst chunks = new Set([chunk]);\n\n\t\t\t\t// Assign ids to modules and modules to the chunk\n\t\t\t\tfor (const module of modules) {\n\t\t\t\t\tconst id = module.identifier();\n\t\t\t\t\tchunkGraph.setModuleId(module, id);\n\t\t\t\t\tchunkGraph.connectChunkAndModule(chunk, module);\n\t\t\t\t}\n\n\t\t\t\t// Hash modules\n\t\t\t\tfor (const module of modules) {\n\t\t\t\t\tthis._createModuleHash(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\thashFunction,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\thashDigestLength\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst codeGenerationResults = new CodeGenerationResults(\n\t\t\t\t\tthis.outputOptions.hashFunction\n\t\t\t\t);\n\t\t\t\t/** @type {WebpackError[]} */\n\t\t\t\tconst errors = [];\n\t\t\t\t/**\n\t\t\t\t * @param {Module} module the module\n\t\t\t\t * @param {Callback} callback callback\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst codeGen = (module, callback) => {\n\t\t\t\t\tthis._codeGenerationModule(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\t[runtime],\n\t\t\t\t\t\tchunkGraph.getModuleHash(module, runtime),\n\t\t\t\t\t\tthis.dependencyTemplates,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tthis.moduleGraph,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\t(err, codeGenerated) => {\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst reportErrors = () => {\n\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\terrors.sort(\n\t\t\t\t\t\t\tcompareSelect(err => err.module, compareModulesByIdentifier)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const error of errors) {\n\t\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\terrors.length = 0;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Generate code for all aggregated modules\n\t\t\t\tasyncLib.eachLimit(modules, 10, codeGen, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\treportErrors();\n\n\t\t\t\t\t// for backward-compat temporary set the chunk graph\n\t\t\t\t\t// TODO webpack 6\n\t\t\t\t\tconst old = this.chunkGraph;\n\t\t\t\t\tthis.chunkGraph = chunkGraph;\n\t\t\t\t\tthis.processRuntimeRequirements({\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tmodules,\n\t\t\t\t\t\tchunks,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\tchunkGraphEntries: chunks\n\t\t\t\t\t});\n\t\t\t\t\tthis.chunkGraph = old;\n\n\t\t\t\t\tconst runtimeModules =\n\t\t\t\t\t\tchunkGraph.getChunkRuntimeModulesIterable(chunk);\n\n\t\t\t\t\t// Hash runtime modules\n\t\t\t\t\tfor (const module of runtimeModules) {\n\t\t\t\t\t\tmodules.add(module);\n\t\t\t\t\t\tthis._createModuleHash(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\thashFunction,\n\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\t\thashDigestLength\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Generate code for all runtime modules\n\t\t\t\t\tasyncLib.eachLimit(runtimeModules, 10, codeGen, err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\treportErrors();\n\n\t\t\t\t\t\t/** @type {Map<Module, ExecuteModuleArgument>} */\n\t\t\t\t\t\tconst moduleArgumentsMap = new Map();\n\t\t\t\t\t\t/** @type {Map<string, ExecuteModuleArgument>} */\n\t\t\t\t\t\tconst moduleArgumentsById = new Map();\n\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"fileDependencies\"]} */\n\t\t\t\t\t\tconst fileDependencies = new LazySet();\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"contextDependencies\"]} */\n\t\t\t\t\t\tconst contextDependencies = new LazySet();\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"missingDependencies\"]} */\n\t\t\t\t\t\tconst missingDependencies = new LazySet();\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"buildDependencies\"]} */\n\t\t\t\t\t\tconst buildDependencies = new LazySet();\n\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"assets\"]} */\n\t\t\t\t\t\tconst assets = new Map();\n\n\t\t\t\t\t\tlet cacheable = true;\n\n\t\t\t\t\t\t/** @type {ExecuteModuleContext} */\n\t\t\t\t\t\tconst context = {\n\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t__webpack_require__: undefined,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tchunkGraph\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Prepare execution\n\t\t\t\t\t\tasyncLib.eachLimit(\n\t\t\t\t\t\t\tmodules,\n\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t\t(module, callback) => {\n\t\t\t\t\t\t\t\tconst codeGenerationResult = codeGenerationResults.get(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\truntime\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t/** @type {ExecuteModuleArgument} */\n\t\t\t\t\t\t\t\tconst moduleArgument = {\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\tcodeGenerationResult,\n\t\t\t\t\t\t\t\t\tpreparedInfo: undefined,\n\t\t\t\t\t\t\t\t\tmoduleObject: undefined\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tmoduleArgumentsMap.set(module, moduleArgument);\n\t\t\t\t\t\t\t\tmoduleArgumentsById.set(module.identifier(), moduleArgument);\n\t\t\t\t\t\t\t\tmodule.addCacheDependencies(\n\t\t\t\t\t\t\t\t\tfileDependencies,\n\t\t\t\t\t\t\t\t\tcontextDependencies,\n\t\t\t\t\t\t\t\t\tmissingDependencies,\n\t\t\t\t\t\t\t\t\tbuildDependencies\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (module.buildInfo.cacheable === false) {\n\t\t\t\t\t\t\t\t\tcacheable = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (module.buildInfo && module.buildInfo.assets) {\n\t\t\t\t\t\t\t\t\tconst { assets: moduleAssets, assetsInfo } = module.buildInfo;\n\t\t\t\t\t\t\t\t\tfor (const assetName of Object.keys(moduleAssets)) {\n\t\t\t\t\t\t\t\t\t\tassets.set(assetName, {\n\t\t\t\t\t\t\t\t\t\t\tsource: moduleAssets[assetName],\n\t\t\t\t\t\t\t\t\t\t\tinfo: assetsInfo ? assetsInfo.get(assetName) : undefined\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.hooks.prepareModuleExecution.callAsync(\n\t\t\t\t\t\t\t\t\tmoduleArgument,\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\tlet exports;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\tstrictModuleErrorHandling,\n\t\t\t\t\t\t\t\t\t\tstrictModuleExceptionHandling\n\t\t\t\t\t\t\t\t\t} = this.outputOptions;\n\t\t\t\t\t\t\t\t\tconst __webpack_require__ = id => {\n\t\t\t\t\t\t\t\t\t\tconst cached = moduleCache[id];\n\t\t\t\t\t\t\t\t\t\tif (cached !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tif (cached.error) throw cached.error;\n\t\t\t\t\t\t\t\t\t\t\treturn cached.exports;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst moduleArgument = moduleArgumentsById.get(id);\n\t\t\t\t\t\t\t\t\t\treturn __webpack_require_module__(moduleArgument, id);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tconst interceptModuleExecution = (__webpack_require__[\n\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.interceptModuleExecution.replace(\n\t\t\t\t\t\t\t\t\t\t\t\"__webpack_require__.\",\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t] = []);\n\t\t\t\t\t\t\t\t\tconst moduleCache = (__webpack_require__[\n\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.moduleCache.replace(\n\t\t\t\t\t\t\t\t\t\t\t\"__webpack_require__.\",\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t] = {});\n\n\t\t\t\t\t\t\t\t\tcontext.__webpack_require__ = __webpack_require__;\n\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * @param {ExecuteModuleArgument} moduleArgument the module argument\n\t\t\t\t\t\t\t\t\t * @param {string=} id id\n\t\t\t\t\t\t\t\t\t * @returns {any} exports\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\tconst __webpack_require_module__ = (moduleArgument, id) => {\n\t\t\t\t\t\t\t\t\t\tvar execOptions = {\n\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\tmodule: {\n\t\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\t\texports: {},\n\t\t\t\t\t\t\t\t\t\t\t\tloaded: false,\n\t\t\t\t\t\t\t\t\t\t\t\terror: undefined\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\trequire: __webpack_require__\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tinterceptModuleExecution.forEach(handler =>\n\t\t\t\t\t\t\t\t\t\t\thandler(execOptions)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst module = moduleArgument.module;\n\t\t\t\t\t\t\t\t\t\tthis.buildTimeExecutedModules.add(module);\n\t\t\t\t\t\t\t\t\t\tconst moduleObject = execOptions.module;\n\t\t\t\t\t\t\t\t\t\tmoduleArgument.moduleObject = moduleObject;\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tif (id) moduleCache[id] = moduleObject;\n\n\t\t\t\t\t\t\t\t\t\t\ttryRunOrWebpackError(\n\t\t\t\t\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.hooks.executeModule.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleArgument,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontext\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\"Compilation.hooks.executeModule\"\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tmoduleObject.loaded = true;\n\t\t\t\t\t\t\t\t\t\t\treturn moduleObject.exports;\n\t\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\t\tif (strictModuleExceptionHandling) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (id) delete moduleCache[id];\n\t\t\t\t\t\t\t\t\t\t\t} else if (strictModuleErrorHandling) {\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleObject.error = e;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (!e.module) e.module = module;\n\t\t\t\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tfor (const runtimeModule of chunkGraph.getChunkRuntimeModulesInOrder(\n\t\t\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t__webpack_require_module__(\n\t\t\t\t\t\t\t\t\t\t\tmoduleArgumentsMap.get(runtimeModule)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\texports = __webpack_require__(module.identifier());\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\t\t\t\t\t`Execution of module code from module graph (${module.readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\tthis.requestShortener\n\t\t\t\t\t\t\t\t\t\t)}) failed: ${e.message}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\terr.stack = e.stack;\n\t\t\t\t\t\t\t\t\terr.module = e.module;\n\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\t\t\t\texports,\n\t\t\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t\t\tcacheable,\n\t\t\t\t\t\t\t\t\tfileDependencies,\n\t\t\t\t\t\t\t\t\tcontextDependencies,\n\t\t\t\t\t\t\t\t\tmissingDependencies,\n\t\t\t\t\t\t\t\t\tbuildDependencies\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tcheckConstraints() {\n\t\tconst chunkGraph = this.chunkGraph;\n\n\t\t/** @type {Set<number|string>} */\n\t\tconst usedIds = new Set();\n\n\t\tfor (const module of this.modules) {\n\t\t\tif (module.type === \"runtime\") continue;\n\t\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\t\tif (moduleId === null) continue;\n\t\t\tif (usedIds.has(moduleId)) {\n\t\t\t\tthrow new Error(`checkConstraints: duplicate module id ${moduleId}`);\n\t\t\t}\n\t\t\tusedIds.add(moduleId);\n\t\t}\n\n\t\tfor (const chunk of this.chunks) {\n\t\t\tfor (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n\t\t\t\tif (!this.modules.has(module)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"checkConstraints: module in chunk but not in compilation \" +\n\t\t\t\t\t\t\t` ${chunk.debugId} ${module.debugId}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const module of chunkGraph.getChunkEntryModulesIterable(chunk)) {\n\t\t\t\tif (!this.modules.has(module)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"checkConstraints: entry module in chunk but not in compilation \" +\n\t\t\t\t\t\t\t` ${chunk.debugId} ${module.debugId}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const chunkGroup of this.chunkGroups) {\n\t\t\tchunkGroup.checkConstraints();\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} FactorizeModuleOptions\n * @property {ModuleProfile} currentProfile\n * @property {ModuleFactory} factory\n * @property {Dependency[]} dependencies\n * @property {boolean=} factoryResult return full ModuleFactoryResult instead of only module\n * @property {Module | null} originModule\n * @property {Partial<ModuleFactoryCreateDataContextInfo>=} contextInfo\n * @property {string=} context\n */\n\n/**\n * @param {FactorizeModuleOptions} options options object\n * @param {ModuleCallback | ModuleFactoryResultCallback} callback callback\n * @returns {void}\n */\n\n// Workaround for typescript as it doesn't support function overloading in jsdoc within a class\nCompilation.prototype.factorizeModule = /** @type {{\n\t(options: FactorizeModuleOptions & { factoryResult?: false }, callback: ModuleCallback): void;\n\t(options: FactorizeModuleOptions & { factoryResult: true }, callback: ModuleFactoryResultCallback): void;\n}} */ (\n\tfunction (options, callback) {\n\t\tthis.factorizeQueue.add(options, callback);\n\t}\n);\n\n// Hide from typescript\nconst compilationPrototype = Compilation.prototype;\n\n// TODO webpack 6 remove\nObject.defineProperty(compilationPrototype, \"modifyHash\", {\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: false,\n\tvalue: () => {\n\t\tthrow new Error(\n\t\t\t\"Compilation.modifyHash was removed in favor of Compilation.hooks.fullHash\"\n\t\t);\n\t}\n});\n\n// TODO webpack 6 remove\nObject.defineProperty(compilationPrototype, \"cache\", {\n\tenumerable: false,\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @this {Compilation} the compilation\n\t\t * @returns {Cache} the cache\n\t\t */\n\t\tfunction () {\n\t\t\treturn this.compiler.cache;\n\t\t},\n\t\t\"Compilation.cache was removed in favor of Compilation.getCache()\",\n\t\t\"DEP_WEBPACK_COMPILATION_CACHE\"\n\t),\n\tset: util.deprecate(\n\t\tv => {},\n\t\t\"Compilation.cache was removed in favor of Compilation.getCache()\",\n\t\t\"DEP_WEBPACK_COMPILATION_CACHE\"\n\t)\n});\n\n/**\n * Add additional assets to the compilation.\n */\nCompilation.PROCESS_ASSETS_STAGE_ADDITIONAL = -2000;\n\n/**\n * Basic preprocessing of assets.\n */\nCompilation.PROCESS_ASSETS_STAGE_PRE_PROCESS = -1000;\n\n/**\n * Derive new assets from existing assets.\n * Existing assets should not be treated as complete.\n */\nCompilation.PROCESS_ASSETS_STAGE_DERIVED = -200;\n\n/**\n * Add additional sections to existing assets, like a banner or initialization code.\n */\nCompilation.PROCESS_ASSETS_STAGE_ADDITIONS = -100;\n\n/**\n * Optimize existing assets in a general way.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE = 100;\n\n/**\n * Optimize the count of existing assets, e. g. by merging them.\n * Only assets of the same type should be merged.\n * For assets of different types see PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT = 200;\n\n/**\n * Optimize the compatibility of existing assets, e. g. add polyfills or vendor-prefixes.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY = 300;\n\n/**\n * Optimize the size of existing assets, e. g. by minimizing or omitting whitespace.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE = 400;\n\n/**\n * Add development tooling to assets, e. g. by extracting a SourceMap.\n */\nCompilation.PROCESS_ASSETS_STAGE_DEV_TOOLING = 500;\n\n/**\n * Optimize the count of existing assets, e. g. by inlining assets of into other assets.\n * Only assets of different types should be inlined.\n * For assets of the same type see PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE = 700;\n\n/**\n * Summarize the list of existing assets\n * e. g. creating an assets manifest of Service Workers.\n */\nCompilation.PROCESS_ASSETS_STAGE_SUMMARIZE = 1000;\n\n/**\n * Optimize the hashes of the assets, e. g. by generating real hashes of the asset content.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_HASH = 2500;\n\n/**\n * Optimize the transfer of existing assets, e. g. by preparing a compressed (gzip) file as separate asset.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER = 3000;\n\n/**\n * Analyse existing assets.\n */\nCompilation.PROCESS_ASSETS_STAGE_ANALYSE = 4000;\n\n/**\n * Creating assets for reporting purposes.\n */\nCompilation.PROCESS_ASSETS_STAGE_REPORT = 5000;\n\nmodule.exports = Compilation;\n"]},"metadata":{},"sourceType":"script"}