{"ast":null,"code":"import _slicedToArray from\"/home/john/react-stuff/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import React,{useState,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var simulationPath='./media/sim.mp4';var catImagePath='./media/Thinking-of-getting-a-cat.png';var vidRef=useRef(null);var buttonRef=useRef(null);var _useState=useState('>'),_useState2=_slicedToArray(_useState,2),buttonText=_useState2[0],setButtonText=_useState2[1];var onButtonClick=function onButtonClick(){if(vidRef.current.paused){vidRef.current.play();setButtonText('||');}else{vidRef.current.pause();setButtonText('>');}};var isSimGenerated=function isSimGenerated(){try{var simulation=require('./media/sim.mp4');console.log('succces',simulation);return true;}catch(err){console.log('fail');return false;}};var mySim=isSimGenerated();if(mySim==false){console.log('Sim not generate, rendering cat');// const catImg = require(`${catImagePath}`)  \nreturn/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"cube\",children:[/*#__PURE__*/_jsx(\"p\",{children:\" Image not here\"}),/*#__PURE__*/_jsx(\"img\",{src:require(\"\".concat(catImagePath))})]})})})});}else{console.log('rendering vid');var _mySim=require(\"\".concat(simulationPath));return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cube\",children:/*#__PURE__*/_jsx(\"video\",{ref:vidRef,src:_mySim,type:\"video/mp4\",children:\" \"})})}),/*#__PURE__*/_jsxs(\"button\",{ref:buttonRef,onClick:function onClick(){return onButtonClick();},children:[\" \",buttonText,\" \"]})]})});}}export default App;","map":{"version":3,"sources":["/home/john/react-stuff/src/App.js"],"names":["React","useState","useRef","App","simulationPath","catImagePath","vidRef","buttonRef","buttonText","setButtonText","onButtonClick","current","paused","play","pause","isSimGenerated","simulation","require","console","log","err","mySim"],"mappings":"4GAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAuC,OAAvC,C,wFAGA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,cAAc,CAAG,iBAAvB,CACA,GAAMC,CAAAA,YAAY,CAAG,uCAArB,CAEA,GAAMC,CAAAA,MAAM,CAAGJ,MAAM,CAAC,IAAD,CAArB,CACA,GAAMK,CAAAA,SAAS,CAAGL,MAAM,CAAC,IAAD,CAAxB,CACA,cAAoCD,QAAQ,CAAC,GAAD,CAA5C,wCAAOO,UAAP,eAAmBC,aAAnB,eACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIJ,MAAM,CAACK,OAAP,CAAeC,MAAnB,CAA2B,CACzBN,MAAM,CAACK,OAAP,CAAeE,IAAf,GACAJ,aAAa,CAAC,IAAD,CAAb,CACD,CAHD,IAIK,CACHH,MAAM,CAACK,OAAP,CAAeG,KAAf,GACAL,aAAa,CAAC,GAAD,CAAb,CACD,CACF,CATD,CAWA,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAI,CACF,GAAMC,CAAAA,UAAU,CAAGC,OAAO,CAAC,iBAAD,CAA1B,CACAC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBH,UAAvB,EACD,MAAO,KAAP,CACA,CAAC,MAAOI,GAAP,CAAY,CACZF,OAAO,CAACC,GAAR,CAAY,MAAZ,EACD,MAAO,MAAP,CACA,CACF,CATD,CAWA,GAAME,CAAAA,KAAK,CAAGN,cAAc,EAA5B,CAEA,GAAMM,KAAK,EAAI,KAAf,CAAsB,CACpBH,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACA;AACA,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,eAAQ,SAAS,CAAC,YAAlB,uBACA,YAAK,SAAS,CAAC,WAAf,uBACE,aAAK,SAAS,CAAC,MAAf,wBACE,sCADF,cAEE,YAAK,GAAG,CAAEF,OAAO,WAAIZ,YAAJ,EAAjB,EAFF,GADF,EADA,EADF,EADF,CAYD,CAfD,IAiBK,CACHa,OAAO,CAACC,GAAR,CAAY,eAAZ,EACA,GAAME,CAAAA,MAAK,CAAGJ,OAAO,WAAIb,cAAJ,EAArB,CACA,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,gBAAQ,SAAS,CAAC,YAAlB,wBACA,YAAK,SAAS,CAAC,WAAf,uBACE,YAAK,SAAS,CAAC,MAAf,uBACE,cAAO,GAAG,CAAEE,MAAZ,CAAoB,GAAG,CAAEe,MAAzB,CAAgC,IAAI,CAAC,WAArC,eADF,EADF,EADA,cAOA,gBAAQ,GAAG,CAAEd,SAAb,CAAwB,OAAO,CAAE,yBAAMG,CAAAA,aAAa,EAAnB,EAAjC,eAA0DF,UAA1D,OAPA,GADF,EADF,CAaH,CAAC,CAEF,cAAeL,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useRef} from 'react';\n\n\nfunction App() {\n  const simulationPath = './media/sim.mp4'\n  const catImagePath = './media/Thinking-of-getting-a-cat.png'\n\n  const vidRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [buttonText, setButtonText] = useState('>');\n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n      vidRef.current.play()\n      setButtonText('||')\n    }\n    else {\n      vidRef.current.pause()\n      setButtonText('>')\n    }\n  }\n\n  const isSimGenerated = () => {\n    try {\n      const simulation = require('./media/sim.mp4')\n      console.log('succces', simulation)\n     return true;\n    } catch (err) {\n      console.log('fail')\n     return false;\n    }\n  };\n\n  const mySim = isSimGenerated()\n  \n  if  ( mySim == false) {\n    console.log('Sim not generate, rendering cat')\n    // const catImg = require(`${catImagePath}`)  \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <div className='container'> \n          <div className='cube'> \n            <p> Image not here</p> \n            <img src={require(`${catImagePath}`)} />\n          </div>\n        </div>\n        </header>\n      </div>\n    );\n  }\n  \n  else {\n    console.log('rendering vid')\n    const mySim = require(`${simulationPath}`) \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <div className='container'> \n          <div className='cube'> \n            <video ref={vidRef} src={mySim} type=\"video/mp4\"> </video> \n          </div>\n        </div>\n\n        <button ref={buttonRef} onClick={() => onButtonClick()}> {buttonText} </button>\n        </header>\n      </div>\n    );\n}}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}