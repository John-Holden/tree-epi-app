{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _slicedToArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require(\"./util/ArrayHelpers\"),\n    groupBy = _require.groupBy;\n\nvar createSchemaValidation = require(\"./util/create-schema-validation\");\n/** @typedef {import(\"../declarations/plugins/WatchIgnorePlugin\").WatchIgnorePluginOptions} WatchIgnorePluginOptions */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./util/fs\").WatchFileSystem} WatchFileSystem */\n\n\nvar validate = createSchemaValidation(require(\"../schemas/plugins/WatchIgnorePlugin.check.js\"), function () {\n  return require(\"../schemas/plugins/WatchIgnorePlugin.json\");\n}, {\n  name: \"Watch Ignore Plugin\",\n  baseDataPath: \"options\"\n});\nvar IGNORE_TIME_ENTRY = \"ignore\";\n\nvar IgnoringWatchFileSystem = /*#__PURE__*/function () {\n  /**\n   * @param {WatchFileSystem} wfs original file system\n   * @param {(string|RegExp)[]} paths ignored paths\n   */\n  function IgnoringWatchFileSystem(wfs, paths) {\n    _classCallCheck(this, IgnoringWatchFileSystem);\n\n    this.wfs = wfs;\n    this.paths = paths;\n  }\n\n  _createClass(IgnoringWatchFileSystem, [{\n    key: \"watch\",\n    value: function watch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n      var _this = this;\n\n      files = Array.from(files);\n      dirs = Array.from(dirs);\n\n      var ignored = function ignored(path) {\n        return _this.paths.some(function (p) {\n          return p instanceof RegExp ? p.test(path) : path.indexOf(p) === 0;\n        });\n      };\n\n      var _groupBy = groupBy(files, ignored),\n          _groupBy2 = _slicedToArray(_groupBy, 2),\n          ignoredFiles = _groupBy2[0],\n          notIgnoredFiles = _groupBy2[1];\n\n      var _groupBy3 = groupBy(dirs, ignored),\n          _groupBy4 = _slicedToArray(_groupBy3, 2),\n          ignoredDirs = _groupBy4[0],\n          notIgnoredDirs = _groupBy4[1];\n\n      var watcher = this.wfs.watch(notIgnoredFiles, notIgnoredDirs, missing, startTime, options, function (err, fileTimestamps, dirTimestamps, changedFiles, removedFiles) {\n        if (err) return callback(err);\n\n        var _iterator = _createForOfIteratorHelper(ignoredFiles),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var path = _step.value;\n            fileTimestamps.set(path, IGNORE_TIME_ENTRY);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var _iterator2 = _createForOfIteratorHelper(ignoredDirs),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _path = _step2.value;\n            dirTimestamps.set(_path, IGNORE_TIME_ENTRY);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        callback(err, fileTimestamps, dirTimestamps, changedFiles, removedFiles);\n      }, callbackUndelayed);\n      return {\n        close: function close() {\n          return watcher.close();\n        },\n        pause: function pause() {\n          return watcher.pause();\n        },\n        getContextTimeInfoEntries: function getContextTimeInfoEntries() {\n          var dirTimestamps = watcher.getContextTimeInfoEntries();\n\n          var _iterator3 = _createForOfIteratorHelper(ignoredDirs),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var path = _step3.value;\n              dirTimestamps.set(path, IGNORE_TIME_ENTRY);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          return dirTimestamps;\n        },\n        getFileTimeInfoEntries: function getFileTimeInfoEntries() {\n          var fileTimestamps = watcher.getFileTimeInfoEntries();\n\n          var _iterator4 = _createForOfIteratorHelper(ignoredFiles),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var path = _step4.value;\n              fileTimestamps.set(path, IGNORE_TIME_ENTRY);\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          return fileTimestamps;\n        },\n        getInfo: watcher.getInfo && function () {\n          var info = watcher.getInfo();\n          var fileTimeInfoEntries = info.fileTimeInfoEntries,\n              contextTimeInfoEntries = info.contextTimeInfoEntries;\n\n          var _iterator5 = _createForOfIteratorHelper(ignoredFiles),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var path = _step5.value;\n              fileTimeInfoEntries.set(path, IGNORE_TIME_ENTRY);\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n\n          var _iterator6 = _createForOfIteratorHelper(ignoredDirs),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _path2 = _step6.value;\n              contextTimeInfoEntries.set(_path2, IGNORE_TIME_ENTRY);\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          return info;\n        }\n      };\n    }\n  }]);\n\n  return IgnoringWatchFileSystem;\n}();\n\nvar WatchIgnorePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {WatchIgnorePluginOptions} options options\n   */\n  function WatchIgnorePlugin(options) {\n    _classCallCheck(this, WatchIgnorePlugin);\n\n    validate(options);\n    this.paths = options.paths;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(WatchIgnorePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this2 = this;\n\n      compiler.hooks.afterEnvironment.tap(\"WatchIgnorePlugin\", function () {\n        compiler.watchFileSystem = new IgnoringWatchFileSystem(compiler.watchFileSystem, _this2.paths);\n      });\n    }\n  }]);\n\n  return WatchIgnorePlugin;\n}();\n\nmodule.exports = WatchIgnorePlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/WatchIgnorePlugin.js"],"names":["require","groupBy","createSchemaValidation","validate","name","baseDataPath","IGNORE_TIME_ENTRY","IgnoringWatchFileSystem","wfs","paths","files","dirs","missing","startTime","options","callback","callbackUndelayed","Array","from","ignored","path","some","p","RegExp","test","indexOf","ignoredFiles","notIgnoredFiles","ignoredDirs","notIgnoredDirs","watcher","watch","err","fileTimestamps","dirTimestamps","changedFiles","removedFiles","set","close","pause","getContextTimeInfoEntries","getFileTimeInfoEntries","getInfo","info","fileTimeInfoEntries","contextTimeInfoEntries","WatchIgnorePlugin","compiler","hooks","afterEnvironment","tap","watchFileSystem","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { groupBy } = require(\"./util/ArrayHelpers\");\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/WatchIgnorePlugin\").WatchIgnorePluginOptions} WatchIgnorePluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./util/fs\").WatchFileSystem} WatchFileSystem */\n\nconst validate = createSchemaValidation(\n\trequire(\"../schemas/plugins/WatchIgnorePlugin.check.js\"),\n\t() => require(\"../schemas/plugins/WatchIgnorePlugin.json\"),\n\t{\n\t\tname: \"Watch Ignore Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nconst IGNORE_TIME_ENTRY = \"ignore\";\n\nclass IgnoringWatchFileSystem {\n\t/**\n\t * @param {WatchFileSystem} wfs original file system\n\t * @param {(string|RegExp)[]} paths ignored paths\n\t */\n\tconstructor(wfs, paths) {\n\t\tthis.wfs = wfs;\n\t\tthis.paths = paths;\n\t}\n\n\twatch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n\t\tfiles = Array.from(files);\n\t\tdirs = Array.from(dirs);\n\t\tconst ignored = path =>\n\t\t\tthis.paths.some(p =>\n\t\t\t\tp instanceof RegExp ? p.test(path) : path.indexOf(p) === 0\n\t\t\t);\n\n\t\tconst [ignoredFiles, notIgnoredFiles] = groupBy(files, ignored);\n\t\tconst [ignoredDirs, notIgnoredDirs] = groupBy(dirs, ignored);\n\n\t\tconst watcher = this.wfs.watch(\n\t\t\tnotIgnoredFiles,\n\t\t\tnotIgnoredDirs,\n\t\t\tmissing,\n\t\t\tstartTime,\n\t\t\toptions,\n\t\t\t(err, fileTimestamps, dirTimestamps, changedFiles, removedFiles) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\tfileTimestamps.set(path, IGNORE_TIME_ENTRY);\n\t\t\t\t}\n\n\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\tdirTimestamps.set(path, IGNORE_TIME_ENTRY);\n\t\t\t\t}\n\n\t\t\t\tcallback(\n\t\t\t\t\terr,\n\t\t\t\t\tfileTimestamps,\n\t\t\t\t\tdirTimestamps,\n\t\t\t\t\tchangedFiles,\n\t\t\t\t\tremovedFiles\n\t\t\t\t);\n\t\t\t},\n\t\t\tcallbackUndelayed\n\t\t);\n\n\t\treturn {\n\t\t\tclose: () => watcher.close(),\n\t\t\tpause: () => watcher.pause(),\n\t\t\tgetContextTimeInfoEntries: () => {\n\t\t\t\tconst dirTimestamps = watcher.getContextTimeInfoEntries();\n\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\tdirTimestamps.set(path, IGNORE_TIME_ENTRY);\n\t\t\t\t}\n\t\t\t\treturn dirTimestamps;\n\t\t\t},\n\t\t\tgetFileTimeInfoEntries: () => {\n\t\t\t\tconst fileTimestamps = watcher.getFileTimeInfoEntries();\n\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\tfileTimestamps.set(path, IGNORE_TIME_ENTRY);\n\t\t\t\t}\n\t\t\t\treturn fileTimestamps;\n\t\t\t},\n\t\t\tgetInfo:\n\t\t\t\twatcher.getInfo &&\n\t\t\t\t(() => {\n\t\t\t\t\tconst info = watcher.getInfo();\n\t\t\t\t\tconst { fileTimeInfoEntries, contextTimeInfoEntries } = info;\n\t\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\t\tfileTimeInfoEntries.set(path, IGNORE_TIME_ENTRY);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\t\tcontextTimeInfoEntries.set(path, IGNORE_TIME_ENTRY);\n\t\t\t\t\t}\n\t\t\t\t\treturn info;\n\t\t\t\t})\n\t\t};\n\t}\n}\n\nclass WatchIgnorePlugin {\n\t/**\n\t * @param {WatchIgnorePluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\t\tthis.paths = options.paths;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.afterEnvironment.tap(\"WatchIgnorePlugin\", () => {\n\t\t\tcompiler.watchFileSystem = new IgnoringWatchFileSystem(\n\t\t\t\tcompiler.watchFileSystem,\n\t\t\t\tthis.paths\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = WatchIgnorePlugin;\n"]},"metadata":{},"sourceType":"script"}