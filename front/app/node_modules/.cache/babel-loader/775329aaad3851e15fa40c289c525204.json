{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _objectSpread = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _wrapNativeSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar util = require(\"util\");\n/** @type {Map<string, Function>} */\n\n\nvar deprecationCache = new Map();\n/**\n * @typedef {Object} FakeHookMarker\n * @property {true} _fakeHook it's a fake hook\n */\n\n/** @template T @typedef {T & FakeHookMarker} FakeHook<T> */\n\n/**\n * @param {string} message deprecation message\n * @param {string} code deprecation code\n * @returns {Function} function to trigger deprecation\n */\n\nvar createDeprecation = function createDeprecation(message, code) {\n  var cached = deprecationCache.get(message);\n  if (cached !== undefined) return cached;\n  var fn = util.deprecate(function () {}, message, \"DEP_WEBPACK_DEPRECATION_\" + code);\n  deprecationCache.set(message, fn);\n  return fn;\n};\n\nvar COPY_METHODS = [\"concat\", \"entry\", \"filter\", \"find\", \"findIndex\", \"includes\", \"indexOf\", \"join\", \"lastIndexOf\", \"map\", \"reduce\", \"reduceRight\", \"slice\", \"some\"];\nvar DISABLED_METHODS = [\"copyWithin\", \"entries\", \"fill\", \"keys\", \"pop\", \"reverse\", \"shift\", \"splice\", \"sort\", \"unshift\"];\n/**\n * @param {any} set new set\n * @param {string} name property name\n * @returns {void}\n */\n\nexports.arrayToSetDeprecation = function (set, name) {\n  var _iterator = _createForOfIteratorHelper(COPY_METHODS),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var method = _step.value;\n      if (set[method]) return \"continue\";\n      var d = createDeprecation(\"\".concat(name, \" was changed from Array to Set (using Array method '\").concat(method, \"' is deprecated)\"), \"ARRAY_TO_SET\");\n      /**\n       * @deprecated\n       * @this {Set}\n       * @returns {number} count\n       */\n\n      set[method] = function () {\n        d();\n        var array = Array.from(this);\n        return Array.prototype[method].apply(array, arguments);\n      };\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n\n      if (_ret === \"continue\") continue;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var dPush = createDeprecation(\"\".concat(name, \" was changed from Array to Set (using Array method 'push' is deprecated)\"), \"ARRAY_TO_SET_PUSH\");\n  var dLength = createDeprecation(\"\".concat(name, \" was changed from Array to Set (using Array property 'length' is deprecated)\"), \"ARRAY_TO_SET_LENGTH\");\n  var dIndexer = createDeprecation(\"\".concat(name, \" was changed from Array to Set (indexing Array is deprecated)\"), \"ARRAY_TO_SET_INDEXER\");\n  /**\n   * @deprecated\n   * @this {Set}\n   * @returns {number} count\n   */\n\n  set.push = function () {\n    dPush();\n\n    for (var _i = 0, _Array$from = Array.from(arguments); _i < _Array$from.length; _i++) {\n      var item = _Array$from[_i];\n      this.add(item);\n    }\n\n    return this.size;\n  };\n\n  var _iterator2 = _createForOfIteratorHelper(DISABLED_METHODS),\n      _step2;\n\n  try {\n    var _loop2 = function _loop2() {\n      var method = _step2.value;\n      if (set[method]) return \"continue\";\n\n      set[method] = function () {\n        throw new Error(\"\".concat(name, \" was changed from Array to Set (using Array method '\").concat(method, \"' is not possible)\"));\n      };\n    };\n\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _ret2 = _loop2();\n\n      if (_ret2 === \"continue\") continue;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var createIndexGetter = function createIndexGetter(index) {\n    /**\n     * @this {Set} a Set\n     * @returns {any} the value at this location\n     */\n    var fn = function fn() {\n      dIndexer();\n      var i = 0;\n\n      var _iterator3 = _createForOfIteratorHelper(this),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var item = _step3.value;\n          if (i++ === index) return item;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return undefined;\n    };\n\n    return fn;\n  };\n\n  var defineIndexGetter = function defineIndexGetter(index) {\n    Object.defineProperty(set, index, {\n      get: createIndexGetter(index),\n      set: function set(value) {\n        throw new Error(\"\".concat(name, \" was changed from Array to Set (indexing Array with write is not possible)\"));\n      }\n    });\n  };\n\n  defineIndexGetter(0);\n  var indexerDefined = 1;\n  Object.defineProperty(set, \"length\", {\n    get: function get() {\n      dLength();\n      var length = this.size;\n\n      for (indexerDefined; indexerDefined < length + 1; indexerDefined++) {\n        defineIndexGetter(indexerDefined);\n      }\n\n      return length;\n    },\n    set: function set(value) {\n      throw new Error(\"\".concat(name, \" was changed from Array to Set (writing to Array property 'length' is not possible)\"));\n    }\n  });\n  set[Symbol.isConcatSpreadable] = true;\n};\n\nexports.createArrayToSetDeprecationSet = function (name) {\n  var initialized = false;\n\n  var SetDeprecatedArray = /*#__PURE__*/function (_Set) {\n    _inherits(SetDeprecatedArray, _Set);\n\n    var _super = _createSuper(SetDeprecatedArray);\n\n    function SetDeprecatedArray(items) {\n      var _this;\n\n      _classCallCheck(this, SetDeprecatedArray);\n\n      _this = _super.call(this, items);\n\n      if (!initialized) {\n        initialized = true;\n        exports.arrayToSetDeprecation(SetDeprecatedArray.prototype, name);\n      }\n\n      return _this;\n    }\n\n    return _createClass(SetDeprecatedArray);\n  }( /*#__PURE__*/_wrapNativeSuper(Set));\n\n  return SetDeprecatedArray;\n};\n\nexports.soonFrozenObjectDeprecation = function (obj, name, code) {\n  var note = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  var message = \"\".concat(name, \" will be frozen in future, all modifications are deprecated.\").concat(note && \"\\n\".concat(note));\n  return new Proxy(obj, {\n    set: util.deprecate(function (target, property, value, receiver) {\n      return Reflect.set(target, property, value, receiver);\n    }, message, code),\n    defineProperty: util.deprecate(function (target, property, descriptor) {\n      return Reflect.defineProperty(target, property, descriptor);\n    }, message, code),\n    deleteProperty: util.deprecate(function (target, property) {\n      return Reflect.deleteProperty(target, property);\n    }, message, code),\n    setPrototypeOf: util.deprecate(function (target, proto) {\n      return Reflect.setPrototypeOf(target, proto);\n    }, message, code)\n  });\n};\n/**\n * @template T\n * @param {T} obj object\n * @param {string} message deprecation message\n * @param {string} code deprecation code\n * @returns {T} object with property access deprecated\n */\n\n\nvar deprecateAllProperties = function deprecateAllProperties(obj, message, code) {\n  var newObj = {};\n  var descriptors = Object.getOwnPropertyDescriptors(obj);\n\n  for (var _i2 = 0, _Object$keys = Object.keys(descriptors); _i2 < _Object$keys.length; _i2++) {\n    var name = _Object$keys[_i2];\n    var descriptor = descriptors[name];\n\n    if (typeof descriptor.value === \"function\") {\n      Object.defineProperty(newObj, name, _objectSpread(_objectSpread({}, descriptor), {}, {\n        value: util.deprecate(descriptor.value, message, code)\n      }));\n    } else if (descriptor.get || descriptor.set) {\n      Object.defineProperty(newObj, name, _objectSpread(_objectSpread({}, descriptor), {}, {\n        get: descriptor.get && util.deprecate(descriptor.get, message, code),\n        set: descriptor.set && util.deprecate(descriptor.set, message, code)\n      }));\n    } else {\n      (function () {\n        var value = descriptor.value;\n        Object.defineProperty(newObj, name, {\n          configurable: descriptor.configurable,\n          enumerable: descriptor.enumerable,\n          get: util.deprecate(function () {\n            return value;\n          }, message, code),\n          set: descriptor.writable ? util.deprecate(function (v) {\n            return value = v;\n          }, message, code) : undefined\n        });\n      })();\n    }\n  }\n\n  return (\n    /** @type {T} */\n    newObj\n  );\n};\n\nexports.deprecateAllProperties = deprecateAllProperties;\n/**\n * @template T\n * @param {T} fakeHook fake hook implementation\n * @param {string=} message deprecation message (not deprecated when unset)\n * @param {string=} code deprecation code (not deprecated when unset)\n * @returns {FakeHook<T>} fake hook which redirects\n */\n\nexports.createFakeHook = function (fakeHook, message, code) {\n  if (message && code) {\n    fakeHook = deprecateAllProperties(fakeHook, message, code);\n  }\n\n  return Object.freeze(Object.assign(fakeHook, {\n    _fakeHook:\n    /** @type {true} */\n    true\n  }));\n};","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/util/deprecation.js"],"names":["util","require","deprecationCache","Map","createDeprecation","message","code","cached","get","undefined","fn","deprecate","set","COPY_METHODS","DISABLED_METHODS","exports","arrayToSetDeprecation","name","method","d","array","Array","from","prototype","apply","arguments","dPush","dLength","dIndexer","push","item","add","size","Error","createIndexGetter","index","i","defineIndexGetter","Object","defineProperty","value","indexerDefined","length","Symbol","isConcatSpreadable","createArrayToSetDeprecationSet","initialized","SetDeprecatedArray","items","Set","soonFrozenObjectDeprecation","obj","note","Proxy","target","property","receiver","Reflect","descriptor","deleteProperty","setPrototypeOf","proto","deprecateAllProperties","newObj","descriptors","getOwnPropertyDescriptors","keys","configurable","enumerable","writable","v","createFakeHook","fakeHook","freeze","assign","_fakeHook"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\n\n/** @type {Map<string, Function>} */\nconst deprecationCache = new Map();\n\n/**\n * @typedef {Object} FakeHookMarker\n * @property {true} _fakeHook it's a fake hook\n */\n\n/** @template T @typedef {T & FakeHookMarker} FakeHook<T> */\n\n/**\n * @param {string} message deprecation message\n * @param {string} code deprecation code\n * @returns {Function} function to trigger deprecation\n */\nconst createDeprecation = (message, code) => {\n\tconst cached = deprecationCache.get(message);\n\tif (cached !== undefined) return cached;\n\tconst fn = util.deprecate(\n\t\t() => {},\n\t\tmessage,\n\t\t\"DEP_WEBPACK_DEPRECATION_\" + code\n\t);\n\tdeprecationCache.set(message, fn);\n\treturn fn;\n};\n\nconst COPY_METHODS = [\n\t\"concat\",\n\t\"entry\",\n\t\"filter\",\n\t\"find\",\n\t\"findIndex\",\n\t\"includes\",\n\t\"indexOf\",\n\t\"join\",\n\t\"lastIndexOf\",\n\t\"map\",\n\t\"reduce\",\n\t\"reduceRight\",\n\t\"slice\",\n\t\"some\"\n];\n\nconst DISABLED_METHODS = [\n\t\"copyWithin\",\n\t\"entries\",\n\t\"fill\",\n\t\"keys\",\n\t\"pop\",\n\t\"reverse\",\n\t\"shift\",\n\t\"splice\",\n\t\"sort\",\n\t\"unshift\"\n];\n\n/**\n * @param {any} set new set\n * @param {string} name property name\n * @returns {void}\n */\nexports.arrayToSetDeprecation = (set, name) => {\n\tfor (const method of COPY_METHODS) {\n\t\tif (set[method]) continue;\n\t\tconst d = createDeprecation(\n\t\t\t`${name} was changed from Array to Set (using Array method '${method}' is deprecated)`,\n\t\t\t\"ARRAY_TO_SET\"\n\t\t);\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {Set}\n\t\t * @returns {number} count\n\t\t */\n\t\tset[method] = function () {\n\t\t\td();\n\t\t\tconst array = Array.from(this);\n\t\t\treturn Array.prototype[method].apply(array, arguments);\n\t\t};\n\t}\n\tconst dPush = createDeprecation(\n\t\t`${name} was changed from Array to Set (using Array method 'push' is deprecated)`,\n\t\t\"ARRAY_TO_SET_PUSH\"\n\t);\n\tconst dLength = createDeprecation(\n\t\t`${name} was changed from Array to Set (using Array property 'length' is deprecated)`,\n\t\t\"ARRAY_TO_SET_LENGTH\"\n\t);\n\tconst dIndexer = createDeprecation(\n\t\t`${name} was changed from Array to Set (indexing Array is deprecated)`,\n\t\t\"ARRAY_TO_SET_INDEXER\"\n\t);\n\t/**\n\t * @deprecated\n\t * @this {Set}\n\t * @returns {number} count\n\t */\n\tset.push = function () {\n\t\tdPush();\n\t\tfor (const item of Array.from(arguments)) {\n\t\t\tthis.add(item);\n\t\t}\n\t\treturn this.size;\n\t};\n\tfor (const method of DISABLED_METHODS) {\n\t\tif (set[method]) continue;\n\t\tset[method] = () => {\n\t\t\tthrow new Error(\n\t\t\t\t`${name} was changed from Array to Set (using Array method '${method}' is not possible)`\n\t\t\t);\n\t\t};\n\t}\n\tconst createIndexGetter = index => {\n\t\t/**\n\t\t * @this {Set} a Set\n\t\t * @returns {any} the value at this location\n\t\t */\n\t\tconst fn = function () {\n\t\t\tdIndexer();\n\t\t\tlet i = 0;\n\t\t\tfor (const item of this) {\n\t\t\t\tif (i++ === index) return item;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t\treturn fn;\n\t};\n\tconst defineIndexGetter = index => {\n\t\tObject.defineProperty(set, index, {\n\t\t\tget: createIndexGetter(index),\n\t\t\tset(value) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`${name} was changed from Array to Set (indexing Array with write is not possible)`\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t};\n\tdefineIndexGetter(0);\n\tlet indexerDefined = 1;\n\tObject.defineProperty(set, \"length\", {\n\t\tget() {\n\t\t\tdLength();\n\t\t\tconst length = this.size;\n\t\t\tfor (indexerDefined; indexerDefined < length + 1; indexerDefined++) {\n\t\t\t\tdefineIndexGetter(indexerDefined);\n\t\t\t}\n\t\t\treturn length;\n\t\t},\n\t\tset(value) {\n\t\t\tthrow new Error(\n\t\t\t\t`${name} was changed from Array to Set (writing to Array property 'length' is not possible)`\n\t\t\t);\n\t\t}\n\t});\n\tset[Symbol.isConcatSpreadable] = true;\n};\n\nexports.createArrayToSetDeprecationSet = name => {\n\tlet initialized = false;\n\tclass SetDeprecatedArray extends Set {\n\t\tconstructor(items) {\n\t\t\tsuper(items);\n\t\t\tif (!initialized) {\n\t\t\t\tinitialized = true;\n\t\t\t\texports.arrayToSetDeprecation(SetDeprecatedArray.prototype, name);\n\t\t\t}\n\t\t}\n\t}\n\treturn SetDeprecatedArray;\n};\n\nexports.soonFrozenObjectDeprecation = (obj, name, code, note = \"\") => {\n\tconst message = `${name} will be frozen in future, all modifications are deprecated.${\n\t\tnote && `\\n${note}`\n\t}`;\n\treturn new Proxy(obj, {\n\t\tset: util.deprecate(\n\t\t\t(target, property, value, receiver) =>\n\t\t\t\tReflect.set(target, property, value, receiver),\n\t\t\tmessage,\n\t\t\tcode\n\t\t),\n\t\tdefineProperty: util.deprecate(\n\t\t\t(target, property, descriptor) =>\n\t\t\t\tReflect.defineProperty(target, property, descriptor),\n\t\t\tmessage,\n\t\t\tcode\n\t\t),\n\t\tdeleteProperty: util.deprecate(\n\t\t\t(target, property) => Reflect.deleteProperty(target, property),\n\t\t\tmessage,\n\t\t\tcode\n\t\t),\n\t\tsetPrototypeOf: util.deprecate(\n\t\t\t(target, proto) => Reflect.setPrototypeOf(target, proto),\n\t\t\tmessage,\n\t\t\tcode\n\t\t)\n\t});\n};\n\n/**\n * @template T\n * @param {T} obj object\n * @param {string} message deprecation message\n * @param {string} code deprecation code\n * @returns {T} object with property access deprecated\n */\nconst deprecateAllProperties = (obj, message, code) => {\n\tconst newObj = {};\n\tconst descriptors = Object.getOwnPropertyDescriptors(obj);\n\tfor (const name of Object.keys(descriptors)) {\n\t\tconst descriptor = descriptors[name];\n\t\tif (typeof descriptor.value === \"function\") {\n\t\t\tObject.defineProperty(newObj, name, {\n\t\t\t\t...descriptor,\n\t\t\t\tvalue: util.deprecate(descriptor.value, message, code)\n\t\t\t});\n\t\t} else if (descriptor.get || descriptor.set) {\n\t\t\tObject.defineProperty(newObj, name, {\n\t\t\t\t...descriptor,\n\t\t\t\tget: descriptor.get && util.deprecate(descriptor.get, message, code),\n\t\t\t\tset: descriptor.set && util.deprecate(descriptor.set, message, code)\n\t\t\t});\n\t\t} else {\n\t\t\tlet value = descriptor.value;\n\t\t\tObject.defineProperty(newObj, name, {\n\t\t\t\tconfigurable: descriptor.configurable,\n\t\t\t\tenumerable: descriptor.enumerable,\n\t\t\t\tget: util.deprecate(() => value, message, code),\n\t\t\t\tset: descriptor.writable\n\t\t\t\t\t? util.deprecate(v => (value = v), message, code)\n\t\t\t\t\t: undefined\n\t\t\t});\n\t\t}\n\t}\n\treturn /** @type {T} */ (newObj);\n};\nexports.deprecateAllProperties = deprecateAllProperties;\n\n/**\n * @template T\n * @param {T} fakeHook fake hook implementation\n * @param {string=} message deprecation message (not deprecated when unset)\n * @param {string=} code deprecation code (not deprecated when unset)\n * @returns {FakeHook<T>} fake hook which redirects\n */\nexports.createFakeHook = (fakeHook, message, code) => {\n\tif (message && code) {\n\t\tfakeHook = deprecateAllProperties(fakeHook, message, code);\n\t}\n\treturn Object.freeze(\n\t\tObject.assign(fakeHook, { _fakeHook: /** @type {true} */ (true) })\n\t);\n};\n"]},"metadata":{},"sourceType":"script"}