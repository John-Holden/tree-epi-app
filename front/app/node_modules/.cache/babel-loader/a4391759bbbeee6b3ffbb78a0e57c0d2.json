{"ast":null,"code":"var _jsxFileName = \"/home/john/react-stuff/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport myVideo from './media/file_example_MP4_480_1_5MG.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const vidRef = useRef(null);\n\n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n      vidRef.current.play();\n    } else {\n      vidRef.current.pause();\n    }\n  };\n\n  const progressInstance = /*#__PURE__*/_jsxDEV(ProgressBar, {\n    now: progress,\n    label: `${progress}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 28\n  }, this);\n\n  const [progress, setProgressBar] = useState(0);\n\n  const handelProgress = () => {\n    console.log(vidRef.current.duration);\n    if (isNaN(vidRef.current.duration)) // duration is NotaNumber at Beginning.\n      return;\n    var percentage = Math.floor(100 / vidRef.current.duration * vidRef.current.currentTime);\n    setProgressBar(percentage); // progressBar.innerHTML = percentage + '% played'; \n  }; // function updateProgressBar() { \n  //   var progressBar = document.getElementById('progressbar'); \n  //   var percentage = Math.floor((100 / video.duration) * video.currentTime);\n  //   progressBar.value = percentage; \n  //   \n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: vidRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: vidRef,\n        src: myVideo,\n        type: \"video/mp4\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onButtonClick(),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", progressInstance, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bfuft+hUs/miZ6+ZaWsn7t0fvVQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/john/react-stuff/src/App.js"],"names":["React","useState","useRef","ProgressBar","myVideo","App","vidRef","onButtonClick","current","paused","play","pause","progressInstance","progress","setProgressBar","handelProgress","console","log","duration","isNaN","percentage","Math","floor","currentTime"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,OAAP,MAAoB,wCAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB;;AAEA,QAAMK,aAAa,GAAG,MAAM;AAC1B,QAAID,MAAM,CAACE,OAAP,CAAeC,MAAnB,EAA2B;AACxBH,MAAAA,MAAM,CAACE,OAAP,CAAeE,IAAf;AACF,KAFD,MAGK;AACHJ,MAAAA,MAAM,CAACE,OAAP,CAAeG,KAAf;AACD;AACF,GAPD;;AASA,QAAMC,gBAAgB,gBAAG,QAAC,WAAD;AAAa,IAAA,GAAG,EAAEC,QAAlB;AAA4B,IAAA,KAAK,EAAG,GAAEA,QAAS;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAzB;;AAEA,QAAM,CAACA,QAAD,EAAWC,cAAX,IAA6Bb,QAAQ,CAAC,CAAD,CAA3C;;AAEA,QAAMc,cAAc,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACE,OAAP,CAAeU,QAA3B;AACA,QAAIC,KAAK,CAACb,MAAM,CAACE,OAAP,CAAeU,QAAhB,CAAT,EAAsC;AACpC;AAEF,QAAIE,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAY,MAAMhB,MAAM,CAACE,OAAP,CAAeU,QAAtB,GAAkCZ,MAAM,CAACE,OAAP,CAAee,WAA5D,CAAjB;AACAT,IAAAA,cAAc,CAACM,UAAD,CAAd,CAN2B,CAO3B;AACD,GARD,CAjBa,CA0Bb;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACA;AAAO,QAAA,GAAG,EAAEd;AAAZ;AAAA;AAAA;AAAA;AAAA,cADA,eAGE;AAAO,QAAA,GAAG,EAAEA,MAAZ;AAAoB,QAAA,GAAG,EAAEF,OAAzB;AAAkC,QAAA,IAAI,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAQ,QAAA,OAAO,EAAE,MAAMG,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,wBAAOK,gBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AA8BD;;GAhEQP,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useRef} from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport myVideo from './media/file_example_MP4_480_1_5MG.mp4';\n\nfunction App() {\n\n  const vidRef = useRef(null);\n\n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n       vidRef.current.play()\n    }\n    else {\n      vidRef.current.pause()\n    }\n  }\n\n  const progressInstance = <ProgressBar now={progress} label={`${progress}%`} />;\n\n  const [progress, setProgressBar] = useState(0);\n\n  const handelProgress = () => { \n    console.log(vidRef.current.duration)\n    if (isNaN(vidRef.current.duration))   // duration is NotaNumber at Beginning.\n      return;\n\n    var percentage = Math.floor((100 / vidRef.current.duration) * vidRef.current.currentTime);\n    setProgressBar(percentage); \n    // progressBar.innerHTML = percentage + '% played'; \n  }\n  // function updateProgressBar() { \n  //   var progressBar = document.getElementById('progressbar'); \n  //   var percentage = Math.floor((100 / video.duration) * video.currentTime);\n  //   progressBar.value = percentage; \n  //   \n  //   }\n\n\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <video ref={vidRef}>\n      </video>\n        <video ref={vidRef} src={myVideo} type=\"video/mp4\"> </video>\n  \n        <button onClick={() => onButtonClick()} >  \n          &gt;\n        </button>\n\n        <div> {progressInstance} </div>\n\n        {/* <progress id=\"progressbar\" value={progress} max=\"100\" innerHTML={progress}></progress> */}\n\n        {/* <p>\n          Sim text will goe here mofo...\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}