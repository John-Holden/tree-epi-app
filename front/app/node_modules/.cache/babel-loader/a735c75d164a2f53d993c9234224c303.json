{"ast":null,"code":"var _jsxFileName = \"/home/john/react-stuff/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const vidRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [buttonText, setButtonText] = useState('>');\n\n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n      vidRef.current.play();\n      setButtonText('||');\n    } else {\n      vidRef.current.pause();\n      setButtonText('>');\n    }\n  };\n\n  const isSimGenerated = () => {\n    try {\n      const simulation = require('./media/file_example_MP4_480_1_5MG.mp4');\n\n      console.log('succces', simulation);\n      return simulation;\n    } catch (err) {\n      console.log('fail');\n      return null;\n    }\n  };\n\n  const mySim = isSimGenerated();\n\n  if (mySim == null) {\n    console.log('Sim not generate, rendering cat');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cube\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Image not here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  } else {\n    console.log('rendering vid');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cube\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: vidRef,\n              src: mySim,\n              type: \"video/mp4\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: buttonRef,\n          onClick: () => onButtonClick(),\n          children: [\" \", buttonText, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"mdz/ab2YfasBvOPePg2EgSIEMno=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/john/react-stuff/src/App.js"],"names":["React","useState","useRef","App","vidRef","buttonRef","buttonText","setButtonText","onButtonClick","current","paused","play","pause","isSimGenerated","simulation","require","console","log","err","mySim"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGF,MAAM,CAAC,IAAD,CAArB;AACA,QAAMG,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,GAAD,CAA5C;;AACA,QAAMO,aAAa,GAAG,MAAM;AAC1B,QAAIJ,MAAM,CAACK,OAAP,CAAeC,MAAnB,EAA2B;AACzBN,MAAAA,MAAM,CAACK,OAAP,CAAeE,IAAf;AACAJ,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAHD,MAIK;AACHH,MAAAA,MAAM,CAACK,OAAP,CAAeG,KAAf;AACAL,MAAAA,aAAa,CAAC,GAAD,CAAb;AACD;AACF,GATD;;AAWA,QAAMM,cAAc,GAAG,MAAM;AAC3B,QAAI;AACF,YAAMC,UAAU,GAAGC,OAAO,CAAC,wCAAD,CAA1B;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,UAAvB;AACD,aAAOA,UAAP;AACA,KAJD,CAIE,OAAOI,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,aAAO,IAAP;AACA;AACF,GATD;;AAWA,QAAME,KAAK,GAAGN,cAAc,EAA5B;;AAGA,MAAMM,KAAK,IAAI,IAAf,EAAqB;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAbD,MAeK;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACE;AAAO,cAAA,GAAG,EAAEb,MAAZ;AAAoB,cAAA,GAAG,EAAEe,KAAzB;AAAgC,cAAA,IAAI,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADA,eAOA;AAAQ,UAAA,GAAG,EAAEd,SAAb;AAAwB,UAAA,OAAO,EAAE,MAAMG,aAAa,EAApD;AAAA,0BAA0DF,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaH;AAAC;;GA3DOH,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useRef} from 'react';\n\n\nfunction App() {\n  const vidRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [buttonText, setButtonText] = useState('>');\n  const onButtonClick = () => {\n    if (vidRef.current.paused) {\n      vidRef.current.play()\n      setButtonText('||')\n    }\n    else {\n      vidRef.current.pause()\n      setButtonText('>')\n    }\n  }\n\n  const isSimGenerated = () => {\n    try {\n      const simulation = require('./media/file_example_MP4_480_1_5MG.mp4')\n      console.log('succces', simulation)\n     return simulation;\n    } catch (err) {\n      console.log('fail')\n     return null;\n    }\n  };\n\n  const mySim = isSimGenerated()\n\n  \n  if  ( mySim == null) {\n    console.log('Sim not generate, rendering cat')\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <div className='container'> \n          <div className='cube'> \n            <p> Image not here</p> \n          </div>\n        </div>\n        </header>\n      </div>\n    );\n  }\n  \n  else {\n    console.log('rendering vid')\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <div className='container'> \n          <div className='cube'> \n            <video ref={vidRef} src={mySim} type=\"video/mp4\"> </video> \n          </div>\n        </div>\n\n        <button ref={buttonRef} onClick={() => onButtonClick()}> {buttonText} </button>\n        </header>\n      </div>\n    );\n}}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}