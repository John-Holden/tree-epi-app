{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _require = require(\"tapable\"),\n    SyncWaterfallHook = _require.SyncWaterfallHook;\n\nvar Compilation = require(\"../Compilation\");\n\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nvar RuntimeModule = require(\"../RuntimeModule\");\n\nvar Template = require(\"../Template\");\n\nvar chunkHasJs = require(\"../javascript/JavascriptModulesPlugin\").chunkHasJs;\n\nvar _require2 = require(\"../javascript/StartupHelpers\"),\n    getInitialChunkIds = _require2.getInitialChunkIds;\n\nvar compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/**\n * @typedef {Object} JsonpCompilationPluginHooks\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPreload\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPrefetch\n */\n\n/** @type {WeakMap<Compilation, JsonpCompilationPluginHooks>} */\n\n\nvar compilationHooksMap = new WeakMap();\n\nvar JsonpChunkLoadingRuntimeModule = /*#__PURE__*/function (_RuntimeModule) {\n  _inherits(JsonpChunkLoadingRuntimeModule, _RuntimeModule);\n\n  var _super = _createSuper(JsonpChunkLoadingRuntimeModule);\n\n  function JsonpChunkLoadingRuntimeModule(runtimeRequirements) {\n    var _this;\n\n    _classCallCheck(this, JsonpChunkLoadingRuntimeModule);\n\n    _this = _super.call(this, \"jsonp chunk loading\", RuntimeModule.STAGE_ATTACH);\n    _this._runtimeRequirements = runtimeRequirements;\n    return _this;\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  _createClass(JsonpChunkLoadingRuntimeModule, [{\n    key: \"generate\",\n    value: function generate() {\n      var chunkGraph = this.chunkGraph,\n          compilation = this.compilation,\n          chunk = this.chunk;\n      var runtimeTemplate = compilation.runtimeTemplate,\n          _compilation$outputOp = compilation.outputOptions,\n          chunkLoadingGlobal = _compilation$outputOp.chunkLoadingGlobal,\n          hotUpdateGlobal = _compilation$outputOp.hotUpdateGlobal,\n          crossOriginLoading = _compilation$outputOp.crossOriginLoading,\n          scriptType = _compilation$outputOp.scriptType;\n      var globalObject = runtimeTemplate.globalObject;\n\n      var _JsonpChunkLoadingRun = JsonpChunkLoadingRuntimeModule.getCompilationHooks(compilation),\n          linkPreload = _JsonpChunkLoadingRun.linkPreload,\n          linkPrefetch = _JsonpChunkLoadingRun.linkPrefetch;\n\n      var fn = RuntimeGlobals.ensureChunkHandlers;\n\n      var withBaseURI = this._runtimeRequirements.has(RuntimeGlobals.baseURI);\n\n      var withLoading = this._runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n\n      var withCallback = this._runtimeRequirements.has(RuntimeGlobals.chunkCallback);\n\n      var withOnChunkLoad = this._runtimeRequirements.has(RuntimeGlobals.onChunksLoaded);\n\n      var withHmr = this._runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n\n      var withHmrManifest = this._runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n\n      var withPrefetch = this._runtimeRequirements.has(RuntimeGlobals.prefetchChunkHandlers);\n\n      var withPreload = this._runtimeRequirements.has(RuntimeGlobals.preloadChunkHandlers);\n\n      var chunkLoadingGlobalExpr = \"\".concat(globalObject, \"[\").concat(JSON.stringify(chunkLoadingGlobal), \"]\");\n      var conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n      var hasJsMatcher = compileBooleanMatcher(conditionMap);\n      var initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n      var stateExpression = withHmr ? \"\".concat(RuntimeGlobals.hmrRuntimeStatePrefix, \"_jsonp\") : undefined;\n      return Template.asString([withBaseURI ? Template.asString([\"\".concat(RuntimeGlobals.baseURI, \" = document.baseURI || self.location.href;\")]) : \"// no baseURI\", \"\", \"// object to store loaded and loading chunks\", \"// undefined = chunk not loaded, null = chunk preloaded/prefetched\", \"// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\", \"var installedChunks = \".concat(stateExpression ? \"\".concat(stateExpression, \" = \").concat(stateExpression, \" || \") : \"\", \"{\"), Template.indent(Array.from(initialChunkIds, function (id) {\n        return \"\".concat(JSON.stringify(id), \": 0\");\n      }).join(\",\\n\")), \"};\", \"\", withLoading ? Template.asString([\"\".concat(fn, \".j = \").concat(runtimeTemplate.basicFunction(\"chunkId, promises\", hasJsMatcher !== false ? Template.indent([\"// JSONP chunk loading for javascript\", \"var installedChunkData = \".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\"), 'if(installedChunkData !== 0) { // 0 means \"already installed\".', Template.indent([\"\", '// a Promise means \"currently loading\".', \"if(installedChunkData) {\", Template.indent([\"promises.push(installedChunkData[2]);\"]), \"} else {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : \"if(\".concat(hasJsMatcher(\"chunkId\"), \") {\"), Template.indent([\"// setup Promise in chunk cache\", \"var promise = new Promise(\".concat(runtimeTemplate.expressionFunction(\"installedChunkData = installedChunks[chunkId] = [resolve, reject]\", \"resolve, reject\"), \");\"), \"promises.push(installedChunkData[2] = promise);\", \"\", \"// start chunk loading\", \"var url = \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(chunkId);\"), \"// create error before stack unwound to get useful stacktrace later\", \"var error = new Error();\", \"var loadingEnded = \".concat(runtimeTemplate.basicFunction(\"event\", [\"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId)) {\"), Template.indent([\"installedChunkData = installedChunks[chunkId];\", \"if(installedChunkData !== 0) installedChunks[chunkId] = undefined;\", \"if(installedChunkData) {\", Template.indent([\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"error.message = 'Loading chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"error.name = 'ChunkLoadError';\", \"error.type = errorType;\", \"error.request = realSrc;\", \"installedChunkData[1](error);\"]), \"}\"]), \"}\"]), \";\"), \"\".concat(RuntimeGlobals.loadScript, \"(url, loadingEnded, \\\"chunk-\\\" + chunkId, chunkId);\")]), \"} else installedChunks[chunkId] = 0;\"]), \"}\"]), \"}\"]) : Template.indent([\"installedChunks[chunkId] = 0;\"])), \";\")]) : \"// no chunk on demand loading\", \"\", withPrefetch && hasJsMatcher !== false ? \"\".concat(RuntimeGlobals.prefetchChunkHandlers, \".j = \").concat(runtimeTemplate.basicFunction(\"chunkId\", [\"if((!\".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId) || installedChunks[chunkId] === undefined) && \").concat(hasJsMatcher === true ? \"true\" : hasJsMatcher(\"chunkId\"), \") {\"), Template.indent([\"installedChunks[chunkId] = null;\", linkPrefetch.call(Template.asString([\"var link = document.createElement('link');\", crossOriginLoading ? \"link.crossOrigin = \".concat(JSON.stringify(crossOriginLoading), \";\") : \"\", \"if (\".concat(RuntimeGlobals.scriptNonce, \") {\"), Template.indent(\"link.setAttribute(\\\"nonce\\\", \".concat(RuntimeGlobals.scriptNonce, \");\")), \"}\", 'link.rel = \"prefetch\";', 'link.as = \"script\";', \"link.href = \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(chunkId);\")]), chunk), \"document.head.appendChild(link);\"]), \"}\"]), \";\") : \"// no prefetching\", \"\", withPreload && hasJsMatcher !== false ? \"\".concat(RuntimeGlobals.preloadChunkHandlers, \".j = \").concat(runtimeTemplate.basicFunction(\"chunkId\", [\"if((!\".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId) || installedChunks[chunkId] === undefined) && \").concat(hasJsMatcher === true ? \"true\" : hasJsMatcher(\"chunkId\"), \") {\"), Template.indent([\"installedChunks[chunkId] = null;\", linkPreload.call(Template.asString([\"var link = document.createElement('link');\", scriptType ? \"link.type = \".concat(JSON.stringify(scriptType), \";\") : \"\", \"link.charset = 'utf-8';\", \"if (\".concat(RuntimeGlobals.scriptNonce, \") {\"), Template.indent(\"link.setAttribute(\\\"nonce\\\", \".concat(RuntimeGlobals.scriptNonce, \");\")), \"}\", 'link.rel = \"preload\";', 'link.as = \"script\";', \"link.href = \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(chunkId);\"), crossOriginLoading ? Template.asString([\"if (link.href.indexOf(window.location.origin + '/') !== 0) {\", Template.indent(\"link.crossOrigin = \".concat(JSON.stringify(crossOriginLoading), \";\")), \"}\"]) : \"\"]), chunk), \"document.head.appendChild(link);\"]), \"}\"]), \";\") : \"// no preloaded\", \"\", withHmr ? Template.asString([\"var currentUpdatedModulesList;\", \"var waitingUpdateResolves = {};\", \"function loadUpdateChunk(chunkId) {\", Template.indent([\"return new Promise(\".concat(runtimeTemplate.basicFunction(\"resolve, reject\", [\"waitingUpdateResolves[chunkId] = resolve;\", \"// start update chunk loading\", \"var url = \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkUpdateScriptFilename, \"(chunkId);\"), \"// create error before stack unwound to get useful stacktrace later\", \"var error = new Error();\", \"var loadingEnded = \".concat(runtimeTemplate.basicFunction(\"event\", [\"if(waitingUpdateResolves[chunkId]) {\", Template.indent([\"waitingUpdateResolves[chunkId] = undefined\", \"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"error.message = 'Loading hot update chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"error.name = 'ChunkLoadError';\", \"error.type = errorType;\", \"error.request = realSrc;\", \"reject(error);\"]), \"}\"]), \";\"), \"\".concat(RuntimeGlobals.loadScript, \"(url, loadingEnded);\")]), \");\")]), \"}\", \"\", \"\".concat(globalObject, \"[\").concat(JSON.stringify(hotUpdateGlobal), \"] = \").concat(runtimeTemplate.basicFunction(\"chunkId, moreModules, runtime\", [\"for(var moduleId in moreModules) {\", Template.indent([\"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(moreModules, moduleId)) {\"), Template.indent([\"currentUpdate[moduleId] = moreModules[moduleId];\", \"if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\", \"if(waitingUpdateResolves[chunkId]) {\", Template.indent([\"waitingUpdateResolves[chunkId]();\", \"waitingUpdateResolves[chunkId] = undefined;\"]), \"}\"]), \";\"), \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"jsonp\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([\"\".concat(RuntimeGlobals.hmrDownloadManifest, \" = \").concat(runtimeTemplate.basicFunction(\"\", ['if (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");', \"return fetch(\".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getUpdateManifestFilename, \"()).then(\").concat(runtimeTemplate.basicFunction(\"response\", [\"if(response.status === 404) return; // no update available\", 'if(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);', \"return response.json();\"]), \");\")]), \";\")]) : \"// no HMR manifest\", \"\", withOnChunkLoad ? \"\".concat(RuntimeGlobals.onChunksLoaded, \".j = \").concat(runtimeTemplate.returningFunction(\"installedChunks[chunkId] === 0\", \"chunkId\"), \";\") : \"// no on chunks loaded\", \"\", withCallback || withLoading ? Template.asString([\"// install a JSONP callback for chunk loading\", \"var webpackJsonpCallback = \".concat(runtimeTemplate.basicFunction(\"parentChunkLoadingFunction, data\", [runtimeTemplate.destructureArray([\"chunkIds\", \"moreModules\", \"runtime\"], \"data\"), '// add \"moreModules\" to the modules object,', '// then flag all \"chunkIds\" as loaded and fire callback', \"var moduleId, chunkId, i = 0;\", \"if(chunkIds.some(\".concat(runtimeTemplate.returningFunction(\"installedChunks[id] !== 0\", \"id\"), \")) {\"), Template.indent([\"for(moduleId in moreModules) {\", Template.indent([\"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(moreModules, moduleId)) {\"), Template.indent(\"\".concat(RuntimeGlobals.moduleFactories, \"[moduleId] = moreModules[moduleId];\")), \"}\"]), \"}\", \"if(runtime) var result = runtime(__webpack_require__);\"]), \"}\", \"if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\", \"for(;i < chunkIds.length; i++) {\", Template.indent([\"chunkId = chunkIds[i];\", \"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId) && installedChunks[chunkId]) {\"), Template.indent(\"installedChunks[chunkId][0]();\"), \"}\", \"installedChunks[chunkId] = 0;\"]), \"}\", withOnChunkLoad ? \"return \".concat(RuntimeGlobals.onChunksLoaded, \"(result);\") : \"\"])), \"\", \"var chunkLoadingGlobal = \".concat(chunkLoadingGlobalExpr, \" = \").concat(chunkLoadingGlobalExpr, \" || [];\"), \"chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\", \"chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\"]) : \"// no jsonp function\"]);\n    }\n  }], [{\n    key: \"getCompilationHooks\",\n    value:\n    /**\n     * @param {Compilation} compilation the compilation\n     * @returns {JsonpCompilationPluginHooks} hooks\n     */\n    function getCompilationHooks(compilation) {\n      if (!(compilation instanceof Compilation)) {\n        throw new TypeError(\"The 'compilation' argument must be an instance of Compilation\");\n      }\n\n      var hooks = compilationHooksMap.get(compilation);\n\n      if (hooks === undefined) {\n        hooks = {\n          linkPreload: new SyncWaterfallHook([\"source\", \"chunk\"]),\n          linkPrefetch: new SyncWaterfallHook([\"source\", \"chunk\"])\n        };\n        compilationHooksMap.set(compilation, hooks);\n      }\n\n      return hooks;\n    }\n  }]);\n\n  return JsonpChunkLoadingRuntimeModule;\n}(RuntimeModule);\n\nmodule.exports = JsonpChunkLoadingRuntimeModule;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/web/JsonpChunkLoadingRuntimeModule.js"],"names":["require","SyncWaterfallHook","Compilation","RuntimeGlobals","RuntimeModule","Template","chunkHasJs","getInitialChunkIds","compileBooleanMatcher","compilationHooksMap","WeakMap","JsonpChunkLoadingRuntimeModule","runtimeRequirements","STAGE_ATTACH","_runtimeRequirements","chunkGraph","compilation","chunk","runtimeTemplate","outputOptions","chunkLoadingGlobal","hotUpdateGlobal","crossOriginLoading","scriptType","globalObject","getCompilationHooks","linkPreload","linkPrefetch","fn","ensureChunkHandlers","withBaseURI","has","baseURI","withLoading","withCallback","chunkCallback","withOnChunkLoad","onChunksLoaded","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","withPrefetch","prefetchChunkHandlers","withPreload","preloadChunkHandlers","chunkLoadingGlobalExpr","JSON","stringify","conditionMap","getChunkConditionMap","hasJsMatcher","initialChunkIds","stateExpression","hmrRuntimeStatePrefix","undefined","asString","indent","Array","from","id","join","basicFunction","hasOwnProperty","expressionFunction","publicPath","getChunkScriptFilename","loadScript","call","scriptNonce","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","moduleFactories","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","returningFunction","destructureArray","TypeError","hooks","get","set","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst { SyncWaterfallHook } = require(\"tapable\");\nconst Compilation = require(\"../Compilation\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst chunkHasJs = require(\"../javascript/JavascriptModulesPlugin\").chunkHasJs;\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/**\n * @typedef {Object} JsonpCompilationPluginHooks\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPreload\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPrefetch\n */\n\n/** @type {WeakMap<Compilation, JsonpCompilationPluginHooks>} */\nconst compilationHooksMap = new WeakMap();\n\nclass JsonpChunkLoadingRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {JsonpCompilationPluginHooks} hooks\n\t */\n\tstatic getCompilationHooks(compilation) {\n\t\tif (!(compilation instanceof Compilation)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"The 'compilation' argument must be an instance of Compilation\"\n\t\t\t);\n\t\t}\n\t\tlet hooks = compilationHooksMap.get(compilation);\n\t\tif (hooks === undefined) {\n\t\t\thooks = {\n\t\t\t\tlinkPreload: new SyncWaterfallHook([\"source\", \"chunk\"]),\n\t\t\t\tlinkPrefetch: new SyncWaterfallHook([\"source\", \"chunk\"])\n\t\t\t};\n\t\t\tcompilationHooksMap.set(compilation, hooks);\n\t\t}\n\t\treturn hooks;\n\t}\n\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"jsonp chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis._runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, compilation, chunk } = this;\n\t\tconst {\n\t\t\truntimeTemplate,\n\t\t\toutputOptions: {\n\t\t\t\tchunkLoadingGlobal,\n\t\t\t\thotUpdateGlobal,\n\t\t\t\tcrossOriginLoading,\n\t\t\t\tscriptType\n\t\t\t}\n\t\t} = compilation;\n\t\tconst globalObject = runtimeTemplate.globalObject;\n\t\tconst { linkPreload, linkPrefetch } =\n\t\t\tJsonpChunkLoadingRuntimeModule.getCompilationHooks(compilation);\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this._runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withLoading = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withCallback = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.chunkCallback\n\t\t);\n\t\tconst withOnChunkLoad = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t);\n\t\tconst withHmr = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst withPrefetch = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.prefetchChunkHandlers\n\t\t);\n\t\tconst withPreload = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.preloadChunkHandlers\n\t\t);\n\t\tconst chunkLoadingGlobalExpr = `${globalObject}[${JSON.stringify(\n\t\t\tchunkLoadingGlobal\n\t\t)}]`;\n\t\tconst conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n\t\tconst hasJsMatcher = compileBooleanMatcher(conditionMap);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_jsonp`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.baseURI} = document.baseURI || self.location.href;`\n\t\t\t\t  ])\n\t\t\t\t: \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded and loading chunks\",\n\t\t\t\"// undefined = chunk not loaded, null = chunk preloaded/prefetched\",\n\t\t\t\"// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\",\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${fn}.j = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, promises\",\n\t\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t\t? Template.indent([\n\t\t\t\t\t\t\t\t\t\t\"// JSONP chunk loading for javascript\",\n\t\t\t\t\t\t\t\t\t\t`var installedChunkData = ${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;`,\n\t\t\t\t\t\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\t'// a Promise means \"currently loading\".',\n\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2]);\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"// setup Promise in chunk cache\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var promise = new Promise(${runtimeTemplate.expressionFunction(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`installedChunkData = installedChunks[chunkId] = [resolve, reject]`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"resolve, reject\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t)});`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2] = promise);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"// start chunk loading\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var url = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId);`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"// create error before stack unwound to get useful stacktrace later\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"var error = new Error();\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var loadingEnded = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"event\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId)) {`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunkData = installedChunks[chunkId];\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData !== 0) installedChunks[chunkId] = undefined;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"error.message = 'Loading chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"error.name = 'ChunkLoadError';\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"error.type = errorType;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"error.request = realSrc;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunkData[1](error);\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t)};`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.loadScript}(url, loadingEnded, \"chunk-\" + chunkId, chunkId);`\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"} else installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t: Template.indent([\"installedChunks[chunkId] = 0;\"])\n\t\t\t\t\t\t)};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk on demand loading\",\n\t\t\t\"\",\n\t\t\twithPrefetch && hasJsMatcher !== false\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.prefetchChunkHandlers\n\t\t\t\t  }.j = ${runtimeTemplate.basicFunction(\"chunkId\", [\n\t\t\t\t\t\t`if((!${\n\t\t\t\t\t\t\tRuntimeGlobals.hasOwnProperty\n\t\t\t\t\t\t}(installedChunks, chunkId) || installedChunks[chunkId] === undefined) && ${\n\t\t\t\t\t\t\thasJsMatcher === true ? \"true\" : hasJsMatcher(\"chunkId\")\n\t\t\t\t\t\t}) {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"installedChunks[chunkId] = null;\",\n\t\t\t\t\t\t\tlinkPrefetch.call(\n\t\t\t\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\t\t\t\"var link = document.createElement('link');\",\n\t\t\t\t\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t\t\t\t\t? `link.crossOrigin = ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t\t\t\t\t  )};`\n\t\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\t\t\t`if (${RuntimeGlobals.scriptNonce}) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t`link.setAttribute(\"nonce\", ${RuntimeGlobals.scriptNonce});`\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t'link.rel = \"prefetch\";',\n\t\t\t\t\t\t\t\t\t'link.as = \"script\";',\n\t\t\t\t\t\t\t\t\t`link.href = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId);`\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"document.head.appendChild(link);\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ])};`\n\t\t\t\t: \"// no prefetching\",\n\t\t\t\"\",\n\t\t\twithPreload && hasJsMatcher !== false\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.preloadChunkHandlers\n\t\t\t\t  }.j = ${runtimeTemplate.basicFunction(\"chunkId\", [\n\t\t\t\t\t\t`if((!${\n\t\t\t\t\t\t\tRuntimeGlobals.hasOwnProperty\n\t\t\t\t\t\t}(installedChunks, chunkId) || installedChunks[chunkId] === undefined) && ${\n\t\t\t\t\t\t\thasJsMatcher === true ? \"true\" : hasJsMatcher(\"chunkId\")\n\t\t\t\t\t\t}) {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"installedChunks[chunkId] = null;\",\n\t\t\t\t\t\t\tlinkPreload.call(\n\t\t\t\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\t\t\t\"var link = document.createElement('link');\",\n\t\t\t\t\t\t\t\t\tscriptType\n\t\t\t\t\t\t\t\t\t\t? `link.type = ${JSON.stringify(scriptType)};`\n\t\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\t\t\t\"link.charset = 'utf-8';\",\n\t\t\t\t\t\t\t\t\t`if (${RuntimeGlobals.scriptNonce}) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t`link.setAttribute(\"nonce\", ${RuntimeGlobals.scriptNonce});`\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t'link.rel = \"preload\";',\n\t\t\t\t\t\t\t\t\t'link.as = \"script\";',\n\t\t\t\t\t\t\t\t\t`link.href = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId);`,\n\t\t\t\t\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\t\t\t\t\"if (link.href.indexOf(window.location.origin + '/') !== 0) {\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`link.crossOrigin = ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t\t\t\t\t\t\t\t)};`\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"document.head.appendChild(link);\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ])};`\n\t\t\t\t: \"// no preloaded\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"var currentUpdatedModulesList;\",\n\t\t\t\t\t\t\"var waitingUpdateResolves = {};\",\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`return new Promise(${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\t\"resolve, reject\",\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"waitingUpdateResolves[chunkId] = resolve;\",\n\t\t\t\t\t\t\t\t\t\"// start update chunk loading\",\n\t\t\t\t\t\t\t\t\t`var url = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId);`,\n\t\t\t\t\t\t\t\t\t\"// create error before stack unwound to get useful stacktrace later\",\n\t\t\t\t\t\t\t\t\t\"var error = new Error();\",\n\t\t\t\t\t\t\t\t\t`var loadingEnded = ${runtimeTemplate.basicFunction(\"event\", [\n\t\t\t\t\t\t\t\t\t\t\"if(waitingUpdateResolves[chunkId]) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"waitingUpdateResolves[chunkId] = undefined\",\n\t\t\t\t\t\t\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\t\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\t\t\t\t\t\t\"error.message = 'Loading hot update chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\t\t\t\t\t\t\"error.name = 'ChunkLoadError';\",\n\t\t\t\t\t\t\t\t\t\t\t\"error.type = errorType;\",\n\t\t\t\t\t\t\t\t\t\t\t\"error.request = realSrc;\",\n\t\t\t\t\t\t\t\t\t\t\t\"reject(error);\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t])};`,\n\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.loadScript}(url, loadingEnded);`\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\thotUpdateGlobal\n\t\t\t\t\t\t)}] = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, moreModules, runtime\",\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"currentUpdate[moduleId] = moreModules[moduleId];\",\n\t\t\t\t\t\t\t\t\t\t\"if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\",\n\t\t\t\t\t\t\t\t\"if(waitingUpdateResolves[chunkId]) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"waitingUpdateResolves[chunkId]();\",\n\t\t\t\t\t\t\t\t\t\"waitingUpdateResolves[chunkId] = undefined;\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t)};`,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"jsonp\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${\n\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t\t\t\t\t} = ${runtimeTemplate.basicFunction(\"\", [\n\t\t\t\t\t\t\t'if (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");',\n\t\t\t\t\t\t\t`return fetch(${RuntimeGlobals.publicPath} + ${\n\t\t\t\t\t\t\t\tRuntimeGlobals.getUpdateManifestFilename\n\t\t\t\t\t\t\t}()).then(${runtimeTemplate.basicFunction(\"response\", [\n\t\t\t\t\t\t\t\t\"if(response.status === 404) return; // no update available\",\n\t\t\t\t\t\t\t\t'if(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);',\n\t\t\t\t\t\t\t\t\"return response.json();\"\n\t\t\t\t\t\t\t])});`\n\t\t\t\t\t\t])};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR manifest\",\n\t\t\t\"\",\n\t\t\twithOnChunkLoad\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t\t\t  }.j = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"installedChunks[chunkId] === 0\",\n\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t  )};`\n\t\t\t\t: \"// no on chunks loaded\",\n\t\t\t\"\",\n\t\t\twithCallback || withLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// install a JSONP callback for chunk loading\",\n\t\t\t\t\t\t`var webpackJsonpCallback = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"parentChunkLoadingFunction, data\",\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\truntimeTemplate.destructureArray(\n\t\t\t\t\t\t\t\t\t[\"chunkIds\", \"moreModules\", \"runtime\"],\n\t\t\t\t\t\t\t\t\t\"data\"\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t'// add \"moreModules\" to the modules object,',\n\t\t\t\t\t\t\t\t'// then flag all \"chunkIds\" as loaded and fire callback',\n\t\t\t\t\t\t\t\t\"var moduleId, chunkId, i = 0;\",\n\t\t\t\t\t\t\t\t`if(chunkIds.some(${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\t\t\t\"installedChunks[id] !== 0\",\n\t\t\t\t\t\t\t\t\t\"id\"\n\t\t\t\t\t\t\t\t)})) {`,\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"for(moduleId in moreModules) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"if(runtime) var result = runtime(__webpack_require__);\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\"if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\",\n\t\t\t\t\t\t\t\t\"for(;i < chunkIds.length; i++) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"chunkId = chunkIds[i];\",\n\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId) && installedChunks[chunkId]) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkId][0]();\"),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\twithOnChunkLoad\n\t\t\t\t\t\t\t\t\t? `return ${RuntimeGlobals.onChunksLoaded}(result);`\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`var chunkLoadingGlobal = ${chunkLoadingGlobalExpr} = ${chunkLoadingGlobalExpr} || [];`,\n\t\t\t\t\t\t\"chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\",\n\t\t\t\t\t\t\"chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no jsonp function\"\n\t\t]);\n\t}\n}\n\nmodule.exports = JsonpChunkLoadingRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}