{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\"use strict\";\n\nvar _defineProperty = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _slicedToArray = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require(\"../container/options\"),\n    parseOptions = _require.parseOptions;\n\nvar ConsumeSharedPlugin = require(\"./ConsumeSharedPlugin\");\n\nvar ProvideSharedPlugin = require(\"./ProvideSharedPlugin\");\n\nvar _require2 = require(\"./utils\"),\n    isRequiredVersion = _require2.isRequiredVersion;\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumeSharedPluginOptions} ConsumeSharedPluginOptions */\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumesConfig} ConsumesConfig */\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvidesConfig} ProvidesConfig */\n\n/** @typedef {import(\"../../declarations/plugins/sharing/SharePlugin\").SharePluginOptions} SharePluginOptions */\n\n/** @typedef {import(\"../../declarations/plugins/sharing/SharePlugin\").SharedConfig} SharedConfig */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nvar SharePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {SharePluginOptions} options options\n   */\n  function SharePlugin(options) {\n    _classCallCheck(this, SharePlugin);\n\n    /** @type {[string, SharedConfig][]} */\n    var sharedOptions = parseOptions(options.shared, function (item, key) {\n      if (typeof item !== \"string\") throw new Error(\"Unexpected array in shared\");\n      /** @type {SharedConfig} */\n\n      var config = item === key || !isRequiredVersion(item) ? {\n        import: item\n      } : {\n        import: key,\n        requiredVersion: item\n      };\n      return config;\n    }, function (item) {\n      return item;\n    });\n    /** @type {Record<string, ConsumesConfig>[]} */\n\n    var consumes = sharedOptions.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          options = _ref2[1];\n\n      return _defineProperty({}, key, {\n        import: options.import,\n        shareKey: options.shareKey || key,\n        shareScope: options.shareScope,\n        requiredVersion: options.requiredVersion,\n        strictVersion: options.strictVersion,\n        singleton: options.singleton,\n        packageName: options.packageName,\n        eager: options.eager\n      });\n    });\n    /** @type {Record<string, ProvidesConfig>[]} */\n\n    var provides = sharedOptions.filter(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          options = _ref5[1];\n\n      return options.import !== false;\n    }).map(function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          key = _ref7[0],\n          options = _ref7[1];\n\n      return _defineProperty({}, options.import || key, {\n        shareKey: options.shareKey || key,\n        shareScope: options.shareScope,\n        version: options.version,\n        eager: options.eager\n      });\n    });\n    this._shareScope = options.shareScope;\n    this._consumes = consumes;\n    this._provides = provides;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(SharePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      new ConsumeSharedPlugin({\n        shareScope: this._shareScope,\n        consumes: this._consumes\n      }).apply(compiler);\n      new ProvideSharedPlugin({\n        shareScope: this._shareScope,\n        provides: this._provides\n      }).apply(compiler);\n    }\n  }]);\n\n  return SharePlugin;\n}();\n\nmodule.exports = SharePlugin;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/sharing/SharePlugin.js"],"names":["require","parseOptions","ConsumeSharedPlugin","ProvideSharedPlugin","isRequiredVersion","SharePlugin","options","sharedOptions","shared","item","key","Error","config","import","requiredVersion","consumes","map","shareKey","shareScope","strictVersion","singleton","packageName","eager","provides","filter","version","_shareScope","_consumes","_provides","compiler","apply","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst { parseOptions } = require(\"../container/options\");\nconst ConsumeSharedPlugin = require(\"./ConsumeSharedPlugin\");\nconst ProvideSharedPlugin = require(\"./ProvideSharedPlugin\");\nconst { isRequiredVersion } = require(\"./utils\");\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumeSharedPluginOptions} ConsumeSharedPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumesConfig} ConsumesConfig */\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvidesConfig} ProvidesConfig */\n/** @typedef {import(\"../../declarations/plugins/sharing/SharePlugin\").SharePluginOptions} SharePluginOptions */\n/** @typedef {import(\"../../declarations/plugins/sharing/SharePlugin\").SharedConfig} SharedConfig */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass SharePlugin {\n\t/**\n\t * @param {SharePluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\t/** @type {[string, SharedConfig][]} */\n\t\tconst sharedOptions = parseOptions(\n\t\t\toptions.shared,\n\t\t\t(item, key) => {\n\t\t\t\tif (typeof item !== \"string\")\n\t\t\t\t\tthrow new Error(\"Unexpected array in shared\");\n\t\t\t\t/** @type {SharedConfig} */\n\t\t\t\tconst config =\n\t\t\t\t\titem === key || !isRequiredVersion(item)\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\timport: item\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\timport: key,\n\t\t\t\t\t\t\t\trequiredVersion: item\n\t\t\t\t\t\t  };\n\t\t\t\treturn config;\n\t\t\t},\n\t\t\titem => item\n\t\t);\n\t\t/** @type {Record<string, ConsumesConfig>[]} */\n\t\tconst consumes = sharedOptions.map(([key, options]) => ({\n\t\t\t[key]: {\n\t\t\t\timport: options.import,\n\t\t\t\tshareKey: options.shareKey || key,\n\t\t\t\tshareScope: options.shareScope,\n\t\t\t\trequiredVersion: options.requiredVersion,\n\t\t\t\tstrictVersion: options.strictVersion,\n\t\t\t\tsingleton: options.singleton,\n\t\t\t\tpackageName: options.packageName,\n\t\t\t\teager: options.eager\n\t\t\t}\n\t\t}));\n\t\t/** @type {Record<string, ProvidesConfig>[]} */\n\t\tconst provides = sharedOptions\n\t\t\t.filter(([, options]) => options.import !== false)\n\t\t\t.map(([key, options]) => ({\n\t\t\t\t[options.import || key]: {\n\t\t\t\t\tshareKey: options.shareKey || key,\n\t\t\t\t\tshareScope: options.shareScope,\n\t\t\t\t\tversion: options.version,\n\t\t\t\t\teager: options.eager\n\t\t\t\t}\n\t\t\t}));\n\t\tthis._shareScope = options.shareScope;\n\t\tthis._consumes = consumes;\n\t\tthis._provides = provides;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tnew ConsumeSharedPlugin({\n\t\t\tshareScope: this._shareScope,\n\t\t\tconsumes: this._consumes\n\t\t}).apply(compiler);\n\t\tnew ProvideSharedPlugin({\n\t\t\tshareScope: this._shareScope,\n\t\t\tprovides: this._provides\n\t\t}).apply(compiler);\n\t}\n}\n\nmodule.exports = SharePlugin;\n"]},"metadata":{},"sourceType":"script"}