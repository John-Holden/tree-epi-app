{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsCompilation} StatsCompilation */\n\nvar _classCallCheck = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/john/tree-epidemic-sim-front-end/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar Stats = /*#__PURE__*/function () {\n  /**\n   * @param {Compilation} compilation webpack compilation\n   */\n  function Stats(compilation) {\n    _classCallCheck(this, Stats);\n\n    this.compilation = compilation;\n  }\n\n  _createClass(Stats, [{\n    key: \"hash\",\n    get: function get() {\n      return this.compilation.hash;\n    }\n  }, {\n    key: \"startTime\",\n    get: function get() {\n      return this.compilation.startTime;\n    }\n  }, {\n    key: \"endTime\",\n    get: function get() {\n      return this.compilation.endTime;\n    }\n    /**\n     * @returns {boolean} true if the compilation had a warning\n     */\n\n  }, {\n    key: \"hasWarnings\",\n    value: function hasWarnings() {\n      return this.compilation.warnings.length > 0 || this.compilation.children.some(function (child) {\n        return child.getStats().hasWarnings();\n      });\n    }\n    /**\n     * @returns {boolean} true if the compilation encountered an error\n     */\n\n  }, {\n    key: \"hasErrors\",\n    value: function hasErrors() {\n      return this.compilation.errors.length > 0 || this.compilation.children.some(function (child) {\n        return child.getStats().hasErrors();\n      });\n    }\n    /**\n     * @param {(string|StatsOptions)=} options stats options\n     * @returns {StatsCompilation} json output\n     */\n\n  }, {\n    key: \"toJson\",\n    value: function toJson(options) {\n      options = this.compilation.createStatsOptions(options, {\n        forToString: false\n      });\n      var statsFactory = this.compilation.createStatsFactory(options);\n      return statsFactory.create(\"compilation\", this.compilation, {\n        compilation: this.compilation\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(options) {\n      options = this.compilation.createStatsOptions(options, {\n        forToString: true\n      });\n      var statsFactory = this.compilation.createStatsFactory(options);\n      var statsPrinter = this.compilation.createStatsPrinter(options);\n      var data = statsFactory.create(\"compilation\", this.compilation, {\n        compilation: this.compilation\n      });\n      var result = statsPrinter.print(\"compilation\", data);\n      return result === undefined ? \"\" : result;\n    }\n  }]);\n\n  return Stats;\n}();\n\nmodule.exports = Stats;","map":{"version":3,"sources":["/home/john/tree-epidemic-sim-front-end/node_modules/webpack/lib/Stats.js"],"names":["Stats","compilation","hash","startTime","endTime","warnings","length","children","some","child","getStats","hasWarnings","errors","hasErrors","options","createStatsOptions","forToString","statsFactory","createStatsFactory","create","statsPrinter","createStatsPrinter","data","result","print","undefined","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AACA;;;;;;IAEMA,K;AACL;AACD;AACA;AACC,iBAAYC,WAAZ,EAAyB;AAAA;;AACxB,SAAKA,WAAL,GAAmBA,WAAnB;AACA;;;;SAED,eAAW;AACV,aAAO,KAAKA,WAAL,CAAiBC,IAAxB;AACA;;;SAED,eAAgB;AACf,aAAO,KAAKD,WAAL,CAAiBE,SAAxB;AACA;;;SAED,eAAc;AACb,aAAO,KAAKF,WAAL,CAAiBG,OAAxB;AACA;AAED;AACD;AACA;;;;WACC,uBAAc;AACb,aACC,KAAKH,WAAL,CAAiBI,QAAjB,CAA0BC,MAA1B,GAAmC,CAAnC,IACA,KAAKL,WAAL,CAAiBM,QAAjB,CAA0BC,IAA1B,CAA+B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,QAAN,GAAiBC,WAAjB,EAAJ;AAAA,OAApC,CAFD;AAIA;AAED;AACD;AACA;;;;WACC,qBAAY;AACX,aACC,KAAKV,WAAL,CAAiBW,MAAjB,CAAwBN,MAAxB,GAAiC,CAAjC,IACA,KAAKL,WAAL,CAAiBM,QAAjB,CAA0BC,IAA1B,CAA+B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,QAAN,GAAiBG,SAAjB,EAAJ;AAAA,OAApC,CAFD;AAIA;AAED;AACD;AACA;AACA;;;;WACC,gBAAOC,OAAP,EAAgB;AACfA,MAAAA,OAAO,GAAG,KAAKb,WAAL,CAAiBc,kBAAjB,CAAoCD,OAApC,EAA6C;AACtDE,QAAAA,WAAW,EAAE;AADyC,OAA7C,CAAV;AAIA,UAAMC,YAAY,GAAG,KAAKhB,WAAL,CAAiBiB,kBAAjB,CAAoCJ,OAApC,CAArB;AAEA,aAAOG,YAAY,CAACE,MAAb,CAAoB,aAApB,EAAmC,KAAKlB,WAAxC,EAAqD;AAC3DA,QAAAA,WAAW,EAAE,KAAKA;AADyC,OAArD,CAAP;AAGA;;;WAED,kBAASa,OAAT,EAAkB;AACjBA,MAAAA,OAAO,GAAG,KAAKb,WAAL,CAAiBc,kBAAjB,CAAoCD,OAApC,EAA6C;AACtDE,QAAAA,WAAW,EAAE;AADyC,OAA7C,CAAV;AAIA,UAAMC,YAAY,GAAG,KAAKhB,WAAL,CAAiBiB,kBAAjB,CAAoCJ,OAApC,CAArB;AACA,UAAMM,YAAY,GAAG,KAAKnB,WAAL,CAAiBoB,kBAAjB,CAAoCP,OAApC,CAArB;AAEA,UAAMQ,IAAI,GAAGL,YAAY,CAACE,MAAb,CAAoB,aAApB,EAAmC,KAAKlB,WAAxC,EAAqD;AACjEA,QAAAA,WAAW,EAAE,KAAKA;AAD+C,OAArD,CAAb;AAGA,UAAMsB,MAAM,GAAGH,YAAY,CAACI,KAAb,CAAmB,aAAnB,EAAkCF,IAAlC,CAAf;AACA,aAAOC,MAAM,KAAKE,SAAX,GAAuB,EAAvB,GAA4BF,MAAnC;AACA;;;;;;AAGFG,MAAM,CAACC,OAAP,GAAiB3B,KAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsCompilation} StatsCompilation */\n\nclass Stats {\n\t/**\n\t * @param {Compilation} compilation webpack compilation\n\t */\n\tconstructor(compilation) {\n\t\tthis.compilation = compilation;\n\t}\n\n\tget hash() {\n\t\treturn this.compilation.hash;\n\t}\n\n\tget startTime() {\n\t\treturn this.compilation.startTime;\n\t}\n\n\tget endTime() {\n\t\treturn this.compilation.endTime;\n\t}\n\n\t/**\n\t * @returns {boolean} true if the compilation had a warning\n\t */\n\thasWarnings() {\n\t\treturn (\n\t\t\tthis.compilation.warnings.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasWarnings())\n\t\t);\n\t}\n\n\t/**\n\t * @returns {boolean} true if the compilation encountered an error\n\t */\n\thasErrors() {\n\t\treturn (\n\t\t\tthis.compilation.errors.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasErrors())\n\t\t);\n\t}\n\n\t/**\n\t * @param {(string|StatsOptions)=} options stats options\n\t * @returns {StatsCompilation} json output\n\t */\n\ttoJson(options) {\n\t\toptions = this.compilation.createStatsOptions(options, {\n\t\t\tforToString: false\n\t\t});\n\n\t\tconst statsFactory = this.compilation.createStatsFactory(options);\n\n\t\treturn statsFactory.create(\"compilation\", this.compilation, {\n\t\t\tcompilation: this.compilation\n\t\t});\n\t}\n\n\ttoString(options) {\n\t\toptions = this.compilation.createStatsOptions(options, {\n\t\t\tforToString: true\n\t\t});\n\n\t\tconst statsFactory = this.compilation.createStatsFactory(options);\n\t\tconst statsPrinter = this.compilation.createStatsPrinter(options);\n\n\t\tconst data = statsFactory.create(\"compilation\", this.compilation, {\n\t\t\tcompilation: this.compilation\n\t\t});\n\t\tconst result = statsPrinter.print(\"compilation\", data);\n\t\treturn result === undefined ? \"\" : result;\n\t}\n}\n\nmodule.exports = Stats;\n"]},"metadata":{},"sourceType":"script"}